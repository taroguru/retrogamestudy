                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module printf
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __putchar
                             12 	.globl _printf_
                             13 	.globl _sprintf_
                             14 	.globl _snprintf_
                             15 	.globl _vprintf_
                             16 	.globl _vsnprintf_
                             17 	.globl _fctprintf
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DATA
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area _INITIALIZED
                             29 ;--------------------------------------------------------
                             30 ; absolute external ram data
                             31 ;--------------------------------------------------------
                             32 	.area _DABS (ABS)
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _HOME
                             37 	.area _GSINIT
                             38 	.area _GSFINAL
                             39 	.area _GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _HOME
                             44 	.area _HOME
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area _CODE
                     0000    49 	Fprintf$_out_buffer$0$0	= .
                             50 	.globl	Fprintf$_out_buffer$0$0
                     0000    51 	C$printf.c$133$0_0$12	= .
                             52 	.globl	C$printf.c$133$0_0$12
                             53 ;printf.c:133: static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
                             54 ;	---------------------------------
                             55 ; Function _out_buffer
                             56 ; ---------------------------------
   0000                      57 __out_buffer:
                     0000    58 	C$printf.c$135$1_0$12	= .
                             59 	.globl	C$printf.c$135$1_0$12
                             60 ;printf.c:135: if (idx < maxlen) {
   0000 21 07 00      [10]   61 	ld	hl, #7
   0003 39            [11]   62 	add	hl, sp
   0004 FD 21 05 00   [14]   63 	ld	iy, #5
   0008 FD 39         [15]   64 	add	iy, sp
   000A FD 7E 00      [19]   65 	ld	a, 0 (iy)
   000D 96            [ 7]   66 	sub	a, (hl)
   000E FD 7E 01      [19]   67 	ld	a, 1 (iy)
   0011 23            [ 6]   68 	inc	hl
   0012 9E            [ 7]   69 	sbc	a, (hl)
   0013 D0            [11]   70 	ret	NC
                     0014    71 	C$printf.c$136$2_0$13	= .
                             72 	.globl	C$printf.c$136$2_0$13
                             73 ;printf.c:136: ((char*)buffer)[idx] = character;
   0014 FD 2B         [10]   74 	dec	iy
   0016 FD 2B         [10]   75 	dec	iy
   0018 FD 7E 00      [19]   76 	ld	a, 0 (iy)
   001B FD 46 01      [19]   77 	ld	b, 1 (iy)
   001E 21 05 00      [10]   78 	ld	hl, #5
   0021 39            [11]   79 	add	hl, sp
   0022 86            [ 7]   80 	add	a, (hl)
   0023 4F            [ 4]   81 	ld	c, a
   0024 78            [ 4]   82 	ld	a, b
   0025 23            [ 6]   83 	inc	hl
   0026 8E            [ 7]   84 	adc	a, (hl)
   0027 47            [ 4]   85 	ld	b, a
   0028 FD 2B         [10]   86 	dec	iy
   002A FD 7E 00      [19]   87 	ld	a, 0 (iy)
   002D 02            [ 7]   88 	ld	(bc), a
                     002E    89 	C$printf.c$138$1_0$12	= .
                             90 	.globl	C$printf.c$138$1_0$12
                             91 ;printf.c:138: }
                     002E    92 	C$printf.c$138$1_0$12	= .
                             93 	.globl	C$printf.c$138$1_0$12
                     002E    94 	XFprintf$_out_buffer$0$0	= .
                             95 	.globl	XFprintf$_out_buffer$0$0
   002E C9            [10]   96 	ret
                     002F    97 	Fprintf$_out_null$0$0	= .
                             98 	.globl	Fprintf$_out_null$0$0
                     002F    99 	C$printf.c$142$1_0$15	= .
                            100 	.globl	C$printf.c$142$1_0$15
                            101 ;printf.c:142: static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
                            102 ;	---------------------------------
                            103 ; Function _out_null
                            104 ; ---------------------------------
   002F                     105 __out_null:
                     002F   106 	C$printf.c$144$1_0$15	= .
                            107 	.globl	C$printf.c$144$1_0$15
                            108 ;printf.c:144: (void)character; (void)buffer; (void)idx; (void)maxlen;
                     002F   109 	C$printf.c$145$1_0$15	= .
                            110 	.globl	C$printf.c$145$1_0$15
                            111 ;printf.c:145: }
                     002F   112 	C$printf.c$145$1_0$15	= .
                            113 	.globl	C$printf.c$145$1_0$15
                     002F   114 	XFprintf$_out_null$0$0	= .
                            115 	.globl	XFprintf$_out_null$0$0
   002F C9            [10]  116 	ret
                     0030   117 	Fprintf$_out_char$0$0	= .
                            118 	.globl	Fprintf$_out_char$0$0
                     0030   119 	C$printf.c$149$1_0$17	= .
                            120 	.globl	C$printf.c$149$1_0$17
                            121 ;printf.c:149: static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
                            122 ;	---------------------------------
                            123 ; Function _out_char
                            124 ; ---------------------------------
   0030                     125 __out_char:
                     0030   126 	C$printf.c$152$1_0$17	= .
                            127 	.globl	C$printf.c$152$1_0$17
                            128 ;printf.c:152: if (character) {
   0030 FD 21 02 00   [14]  129 	ld	iy, #2
   0034 FD 39         [15]  130 	add	iy, sp
   0036 FD 7E 00      [19]  131 	ld	a, 0 (iy)
   0039 B7            [ 4]  132 	or	a, a
   003A C8            [11]  133 	ret	Z
                     003B   134 	C$printf.c$153$2_0$18	= .
                            135 	.globl	C$printf.c$153$2_0$18
                            136 ;printf.c:153: _putchar(character);
   003B FD 7E 00      [19]  137 	ld	a, 0 (iy)
   003E F5            [11]  138 	push	af
   003F 33            [ 6]  139 	inc	sp
   0040 CDr00r00      [17]  140 	call	__putchar
   0043 33            [ 6]  141 	inc	sp
                     0044   142 	C$printf.c$155$1_0$17	= .
                            143 	.globl	C$printf.c$155$1_0$17
                            144 ;printf.c:155: }
                     0044   145 	C$printf.c$155$1_0$17	= .
                            146 	.globl	C$printf.c$155$1_0$17
                     0044   147 	XFprintf$_out_char$0$0	= .
                            148 	.globl	XFprintf$_out_char$0$0
   0044 C9            [10]  149 	ret
                     0045   150 	Fprintf$_out_fct$0$0	= .
                            151 	.globl	Fprintf$_out_fct$0$0
                     0045   152 	C$printf.c$159$1_0$20	= .
                            153 	.globl	C$printf.c$159$1_0$20
                            154 ;printf.c:159: static inline void _out_fct(char character, void* buffer, size_t idx, size_t maxlen)
                            155 ;	---------------------------------
                            156 ; Function _out_fct
                            157 ; ---------------------------------
   0045                     158 __out_fct:
                     0045   159 	C$printf.c$162$1_0$20	= .
                            160 	.globl	C$printf.c$162$1_0$20
                            161 ;printf.c:162: if (character) {
   0045 FD 21 02 00   [14]  162 	ld	iy, #2
   0049 FD 39         [15]  163 	add	iy, sp
   004B FD 7E 00      [19]  164 	ld	a, 0 (iy)
   004E B7            [ 4]  165 	or	a, a
   004F C8            [11]  166 	ret	Z
                     0050   167 	C$printf.c$164$1_0$20	= .
                            168 	.globl	C$printf.c$164$1_0$20
                            169 ;printf.c:164: ((out_fct_wrap_type*)buffer)->fct(character, ((out_fct_wrap_type*)buffer)->arg);
   0050 FD 23         [10]  170 	inc	iy
   0052 FD 6E 00      [19]  171 	ld	l, 0 (iy)
   0055 FD 66 01      [19]  172 	ld	h, 1 (iy)
   0058 4E            [ 7]  173 	ld	c, (hl)
   0059 23            [ 6]  174 	inc	hl
   005A 46            [ 7]  175 	ld	b, (hl)
   005B 23            [ 6]  176 	inc	hl
   005C 5E            [ 7]  177 	ld	e, (hl)
   005D 23            [ 6]  178 	inc	hl
   005E 56            [ 7]  179 	ld	d, (hl)
   005F D5            [11]  180 	push	de
   0060 FD 2B         [10]  181 	dec	iy
   0062 FD 7E 00      [19]  182 	ld	a, 0 (iy)
   0065 F5            [11]  183 	push	af
   0066 33            [ 6]  184 	inc	sp
   0067 69            [ 4]  185 	ld	l, c
   0068 60            [ 4]  186 	ld	h, b
   0069 CDr00r00      [17]  187 	call	___sdcc_call_hl
   006C F1            [10]  188 	pop	af
   006D 33            [ 6]  189 	inc	sp
                     006E   190 	C$printf.c$166$1_0$20	= .
                            191 	.globl	C$printf.c$166$1_0$20
                            192 ;printf.c:166: }
                     006E   193 	C$printf.c$166$1_0$20	= .
                            194 	.globl	C$printf.c$166$1_0$20
                     006E   195 	XFprintf$_out_fct$0$0	= .
                            196 	.globl	XFprintf$_out_fct$0$0
   006E C9            [10]  197 	ret
                     006F   198 	Fprintf$_strnlen_s$0$0	= .
                            199 	.globl	Fprintf$_strnlen_s$0$0
                     006F   200 	C$printf.c$171$1_0$23	= .
                            201 	.globl	C$printf.c$171$1_0$23
                            202 ;printf.c:171: static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
                            203 ;	---------------------------------
                            204 ; Function _strnlen_s
                            205 ; ---------------------------------
   006F                     206 __strnlen_s:
   006F F5            [11]  207 	push	af
                     0070   208 	C$printf.c$174$2_0$24	= .
                            209 	.globl	C$printf.c$174$2_0$24
                            210 ;printf.c:174: for (s = str; *s && maxsize--; ++s);
   0070 FD 21 04 00   [14]  211 	ld	iy, #4
   0074 FD 39         [15]  212 	add	iy, sp
   0076 FD 4E 00      [19]  213 	ld	c, 0 (iy)
   0079 FD 46 01      [19]  214 	ld	b, 1 (iy)
   007C FD 23         [10]  215 	inc	iy
   007E FD 23         [10]  216 	inc	iy
   0080 FD 5E 00      [19]  217 	ld	e, 0 (iy)
   0083 FD 56 01      [19]  218 	ld	d, 1 (iy)
   0086                     219 00104$:
   0086 0A            [ 7]  220 	ld	a, (bc)
   0087 B7            [ 4]  221 	or	a, a
   0088 28 10         [12]  222 	jr	Z,00101$
   008A 33            [ 6]  223 	inc	sp
   008B 33            [ 6]  224 	inc	sp
   008C D5            [11]  225 	push	de
   008D 1B            [ 6]  226 	dec	de
   008E 21 01 00      [10]  227 	ld	hl, #0+1
   0091 39            [11]  228 	add	hl, sp
   0092 7E            [ 7]  229 	ld	a, (hl)
   0093 2B            [ 6]  230 	dec	hl
   0094 B6            [ 7]  231 	or	a, (hl)
   0095 28 03         [12]  232 	jr	Z,00101$
   0097 03            [ 6]  233 	inc	bc
   0098 18 EC         [12]  234 	jr	00104$
   009A                     235 00101$:
                     009A   236 	C$printf.c$175$1_0$23	= .
                            237 	.globl	C$printf.c$175$1_0$23
                            238 ;printf.c:175: return (unsigned int)(s - str);
   009A 21 04 00      [10]  239 	ld	hl, #4
   009D 39            [11]  240 	add	hl, sp
   009E 79            [ 4]  241 	ld	a, c
   009F 96            [ 7]  242 	sub	a, (hl)
   00A0 4F            [ 4]  243 	ld	c, a
   00A1 78            [ 4]  244 	ld	a, b
   00A2 23            [ 6]  245 	inc	hl
   00A3 9E            [ 7]  246 	sbc	a, (hl)
   00A4 67            [ 4]  247 	ld	h, a
   00A5 69            [ 4]  248 	ld	l, c
                     00A6   249 	C$printf.c$176$1_0$23	= .
                            250 	.globl	C$printf.c$176$1_0$23
                            251 ;printf.c:176: }
   00A6 F1            [10]  252 	pop	af
                     00A7   253 	C$printf.c$176$1_0$23	= .
                            254 	.globl	C$printf.c$176$1_0$23
                     00A7   255 	XFprintf$_strnlen_s$0$0	= .
                            256 	.globl	XFprintf$_strnlen_s$0$0
   00A7 C9            [10]  257 	ret
                     00A8   258 	Fprintf$_is_digit$0$0	= .
                            259 	.globl	Fprintf$_is_digit$0$0
                     00A8   260 	C$printf.c$181$1_0$26	= .
                            261 	.globl	C$printf.c$181$1_0$26
                            262 ;printf.c:181: static inline bool _is_digit(char ch)
                            263 ;	---------------------------------
                            264 ; Function _is_digit
                            265 ; ---------------------------------
   00A8                     266 __is_digit:
                     00A8   267 	C$printf.c$183$1_0$26	= .
                            268 	.globl	C$printf.c$183$1_0$26
                            269 ;printf.c:183: return (ch >= '0') && (ch <= '9');
   00A8 FD 21 02 00   [14]  270 	ld	iy, #2
   00AC FD 39         [15]  271 	add	iy, sp
   00AE FD 7E 00      [19]  272 	ld	a, 0 (iy)
   00B1 EE 80         [ 7]  273 	xor	a, #0x80
   00B3 D6 B0         [ 7]  274 	sub	a, #0xb0
   00B5 38 0D         [12]  275 	jr	C,00103$
   00B7 3E 39         [ 7]  276 	ld	a, #0x39
   00B9 FD 96 00      [19]  277 	sub	a, 0 (iy)
   00BC E2rC1r00      [10]  278 	jp	PO, 00111$
   00BF EE 80         [ 7]  279 	xor	a, #0x80
   00C1                     280 00111$:
   00C1 F2rC7r00      [10]  281 	jp	P, 00104$
   00C4                     282 00103$:
   00C4 2E 00         [ 7]  283 	ld	l, #0x00
   00C6 C9            [10]  284 	ret
   00C7                     285 00104$:
   00C7 2E 01         [ 7]  286 	ld	l, #0x01
                     00C9   287 	C$printf.c$184$1_0$26	= .
                            288 	.globl	C$printf.c$184$1_0$26
                            289 ;printf.c:184: }
                     00C9   290 	C$printf.c$184$1_0$26	= .
                            291 	.globl	C$printf.c$184$1_0$26
                     00C9   292 	XFprintf$_is_digit$0$0	= .
                            293 	.globl	XFprintf$_is_digit$0$0
   00C9 C9            [10]  294 	ret
                     00CA   295 	Fprintf$_atoi$0$0	= .
                            296 	.globl	Fprintf$_atoi$0$0
                     00CA   297 	C$printf.c$188$1_0$28	= .
                            298 	.globl	C$printf.c$188$1_0$28
                            299 ;printf.c:188: static unsigned int _atoi(const char** str)
                            300 ;	---------------------------------
                            301 ; Function _atoi
                            302 ; ---------------------------------
   00CA                     303 __atoi:
   00CA F5            [11]  304 	push	af
   00CB F5            [11]  305 	push	af
                     00CC   306 	C$printf.c$190$2_0$28	= .
                            307 	.globl	C$printf.c$190$2_0$28
                            308 ;printf.c:190: unsigned int i = 0U;
   00CC AF            [ 4]  309 	xor	a, a
   00CD FD 21 02 00   [14]  310 	ld	iy, #2
   00D1 FD 39         [15]  311 	add	iy, sp
   00D3 FD 77 00      [19]  312 	ld	0 (iy), a
   00D6 FD 77 01      [19]  313 	ld	1 (iy), a
                     00D9   314 	C$printf.c$191$1_0$28	= .
                            315 	.globl	C$printf.c$191$1_0$28
                            316 ;printf.c:191: while (_is_digit(**str)) {
   00D9                     317 00101$:
   00D9 21 06 00      [10]  318 	ld	hl, #6
   00DC 39            [11]  319 	add	hl, sp
   00DD 4E            [ 7]  320 	ld	c, (hl)
   00DE 23            [ 6]  321 	inc	hl
   00DF 46            [ 7]  322 	ld	b, (hl)
   00E0 69            [ 4]  323 	ld	l, c
   00E1 60            [ 4]  324 	ld	h, b
   00E2 5E            [ 7]  325 	ld	e, (hl)
   00E3 23            [ 6]  326 	inc	hl
   00E4 56            [ 7]  327 	ld	d, (hl)
   00E5 1A            [ 7]  328 	ld	a, (de)
                     00E6   329 	C$printf.c$183$4_0$32	= .
                            330 	.globl	C$printf.c$183$4_0$32
                            331 ;printf.c:183: return (ch >= '0') && (ch <= '9');
   00E6 6F            [ 4]  332 	ld	l, a
   00E7 EE 80         [ 7]  333 	xor	a, #0x80
   00E9 D6 B0         [ 7]  334 	sub	a, #0xb0
   00EB 38 4B         [12]  335 	jr	C,00103$
   00ED 3E 39         [ 7]  336 	ld	a, #0x39
   00EF 95            [ 4]  337 	sub	a, l
   00F0 E2rF5r00      [10]  338 	jp	PO, 00123$
   00F3 EE 80         [ 7]  339 	xor	a, #0x80
   00F5                     340 00123$:
   00F5 FAr38r01      [10]  341 	jp	M, 00103$
                     00F8   342 	C$printf.c$192$2_0$29	= .
                            343 	.globl	C$printf.c$192$2_0$29
                            344 ;printf.c:192: i = i * 10U + (unsigned int)(*((*str)++) - '0');
   00F8 D5            [11]  345 	push	de
   00F9 FD 21 04 00   [14]  346 	ld	iy, #4
   00FD FD 39         [15]  347 	add	iy, sp
   00FF FD 5E 00      [19]  348 	ld	e, 0 (iy)
   0102 FD 56 01      [19]  349 	ld	d, 1 (iy)
   0105 6B            [ 4]  350 	ld	l, e
   0106 62            [ 4]  351 	ld	h, d
   0107 29            [11]  352 	add	hl, hl
   0108 29            [11]  353 	add	hl, hl
   0109 19            [11]  354 	add	hl, de
   010A 29            [11]  355 	add	hl, hl
   010B D1            [10]  356 	pop	de
   010C E3            [19]  357 	ex	(sp), hl
   010D 21 01 00      [10]  358 	ld	hl, #0x0001
   0110 19            [11]  359 	add	hl, de
   0111 FD 75 00      [19]  360 	ld	0 (iy), l
   0114 FD 74 01      [19]  361 	ld	1 (iy), h
   0117 FD 7E 00      [19]  362 	ld	a, 0 (iy)
   011A 02            [ 7]  363 	ld	(bc), a
   011B 03            [ 6]  364 	inc	bc
   011C FD 7E 01      [19]  365 	ld	a, 1 (iy)
   011F 02            [ 7]  366 	ld	(bc), a
   0120 1A            [ 7]  367 	ld	a, (de)
   0121 4F            [ 4]  368 	ld	c, a
   0122 17            [ 4]  369 	rla
   0123 9F            [ 4]  370 	sbc	a, a
   0124 47            [ 4]  371 	ld	b, a
   0125 79            [ 4]  372 	ld	a, c
   0126 C6 D0         [ 7]  373 	add	a, #0xd0
   0128 4F            [ 4]  374 	ld	c, a
   0129 78            [ 4]  375 	ld	a, b
   012A CE FF         [ 7]  376 	adc	a, #0xff
   012C 47            [ 4]  377 	ld	b, a
   012D E1            [10]  378 	pop	hl
   012E E5            [11]  379 	push	hl
   012F 09            [11]  380 	add	hl, bc
   0130 FD 75 00      [19]  381 	ld	0 (iy), l
   0133 FD 74 01      [19]  382 	ld	1 (iy), h
   0136 18 A1         [12]  383 	jr	00101$
   0138                     384 00103$:
                     0138   385 	C$printf.c$194$1_0$28	= .
                            386 	.globl	C$printf.c$194$1_0$28
                            387 ;printf.c:194: return i;
   0138 C1            [10]  388 	pop	bc
   0139 E1            [10]  389 	pop	hl
   013A E5            [11]  390 	push	hl
   013B C5            [11]  391 	push	bc
                     013C   392 	C$printf.c$195$1_0$28	= .
                            393 	.globl	C$printf.c$195$1_0$28
                            394 ;printf.c:195: }
   013C F1            [10]  395 	pop	af
   013D F1            [10]  396 	pop	af
                     013E   397 	C$printf.c$195$1_0$28	= .
                            398 	.globl	C$printf.c$195$1_0$28
                     013E   399 	XFprintf$_atoi$0$0	= .
                            400 	.globl	XFprintf$_atoi$0$0
   013E C9            [10]  401 	ret
                     013F   402 	Fprintf$_out_rev$0$0	= .
                            403 	.globl	Fprintf$_out_rev$0$0
                     013F   404 	C$printf.c$199$1_0$34	= .
                            405 	.globl	C$printf.c$199$1_0$34
                            406 ;printf.c:199: static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
                            407 ;	---------------------------------
                            408 ; Function _out_rev
                            409 ; ---------------------------------
   013F                     410 __out_rev:
   013F 21 F6 FF      [10]  411 	ld	hl, #-10
   0142 39            [11]  412 	add	hl, sp
   0143 F9            [ 6]  413 	ld	sp, hl
                     0144   414 	C$printf.c$201$2_0$34	= .
                            415 	.globl	C$printf.c$201$2_0$34
                            416 ;printf.c:201: const size_t start_idx = idx;
   0144 21 10 00      [10]  417 	ld	hl, #16+0
   0147 39            [11]  418 	add	hl, sp
   0148 7E            [ 7]  419 	ld	a, (hl)
   0149 FD 21 00 00   [14]  420 	ld	iy, #0
   014D FD 39         [15]  421 	add	iy, sp
   014F FD 77 00      [19]  422 	ld	0 (iy), a
   0152 21 11 00      [10]  423 	ld	hl, #16+1
   0155 39            [11]  424 	add	hl, sp
   0156 7E            [ 7]  425 	ld	a, (hl)
   0157 FD 21 00 00   [14]  426 	ld	iy, #0
   015B FD 39         [15]  427 	add	iy, sp
   015D FD 77 01      [19]  428 	ld	1 (iy), a
                     0160   429 	C$printf.c$204$1_0$34	= .
                            430 	.globl	C$printf.c$204$1_0$34
                            431 ;printf.c:204: if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
   0160 21 1A 00      [10]  432 	ld	hl, #26+0
   0163 39            [11]  433 	add	hl, sp
   0164 7E            [ 7]  434 	ld	a, (hl)
   0165 E6 02         [ 7]  435 	and	a, #0x02
   0167 FD 21 02 00   [14]  436 	ld	iy, #2
   016B FD 39         [15]  437 	add	iy, sp
   016D FD 77 00      [19]  438 	ld	0 (iy), a
   0170 FD 36 01 00   [19]  439 	ld	1 (iy), #0x00
   0174 FD 7E 01      [19]  440 	ld	a, 1 (iy)
   0177 FD B6 00      [19]  441 	or	a, 0 (iy)
   017A C2r18r02      [10]  442 	jp	NZ, 00123$
   017D 21 1A 00      [10]  443 	ld	hl, #26+0
   0180 39            [11]  444 	add	hl, sp
   0181 7E            [ 7]  445 	ld	a, (hl)
   0182 0F            [ 4]  446 	rrca
   0183 DAr18r02      [10]  447 	jp	C,00123$
                     0186   448 	C$printf.c$205$4_0$36	= .
                            449 	.globl	C$printf.c$205$4_0$36
                            450 ;printf.c:205: for (size_t i = len; i < width; i++) {
   0186 21 16 00      [10]  451 	ld	hl, #22
   0189 39            [11]  452 	add	hl, sp
   018A 4E            [ 7]  453 	ld	c, (hl)
   018B 23            [ 6]  454 	inc	hl
   018C 46            [ 7]  455 	ld	b, (hl)
   018D D1            [10]  456 	pop	de
   018E D5            [11]  457 	push	de
   018F                     458 00114$:
   018F 21 18 00      [10]  459 	ld	hl, #24
   0192 39            [11]  460 	add	hl, sp
   0193 79            [ 4]  461 	ld	a, c
   0194 96            [ 7]  462 	sub	a, (hl)
   0195 78            [ 4]  463 	ld	a, b
   0196 23            [ 6]  464 	inc	hl
   0197 9E            [ 7]  465 	sbc	a, (hl)
   0198 30 72         [12]  466 	jr	NC,00126$
                     019A   467 	C$printf.c$206$4_0$37	= .
                            468 	.globl	C$printf.c$206$4_0$37
                            469 ;printf.c:206: out(' ', buffer, idx++, maxlen);
   019A FD 21 06 00   [14]  470 	ld	iy, #6
   019E FD 39         [15]  471 	add	iy, sp
   01A0 FD 73 00      [19]  472 	ld	0 (iy), e
   01A3 FD 72 01      [19]  473 	ld	1 (iy), d
   01A6 13            [ 6]  474 	inc	de
   01A7 FD 21 10 00   [14]  475 	ld	iy, #16
   01AB FD 39         [15]  476 	add	iy, sp
   01AD FD 73 00      [19]  477 	ld	0 (iy), e
   01B0 FD 72 01      [19]  478 	ld	1 (iy), d
   01B3 FD 2B         [10]  479 	dec	iy
   01B5 FD 2B         [10]  480 	dec	iy
   01B7 FD 7E 00      [19]  481 	ld	a, 0 (iy)
   01BA FD 21 08 00   [14]  482 	ld	iy, #8
   01BE FD 39         [15]  483 	add	iy, sp
   01C0 FD 77 00      [19]  484 	ld	0 (iy), a
   01C3 21 0F 00      [10]  485 	ld	hl, #14+1
   01C6 39            [11]  486 	add	hl, sp
   01C7 7E            [ 7]  487 	ld	a, (hl)
   01C8 FD 21 08 00   [14]  488 	ld	iy, #8
   01CC FD 39         [15]  489 	add	iy, sp
   01CE FD 77 01      [19]  490 	ld	1 (iy), a
   01D1 C5            [11]  491 	push	bc
   01D2 D5            [11]  492 	push	de
   01D3 21 16 00      [10]  493 	ld	hl, #22
   01D6 39            [11]  494 	add	hl, sp
   01D7 4E            [ 7]  495 	ld	c, (hl)
   01D8 23            [ 6]  496 	inc	hl
   01D9 46            [ 7]  497 	ld	b, (hl)
   01DA C5            [11]  498 	push	bc
   01DB FD 21 0C 00   [14]  499 	ld	iy, #12
   01DF FD 39         [15]  500 	add	iy, sp
   01E1 FD 6E 00      [19]  501 	ld	l, 0 (iy)
   01E4 FD 66 01      [19]  502 	ld	h, 1 (iy)
   01E7 E5            [11]  503 	push	hl
   01E8 FD 23         [10]  504 	inc	iy
   01EA FD 23         [10]  505 	inc	iy
   01EC FD 6E 00      [19]  506 	ld	l, 0 (iy)
   01EF FD 66 01      [19]  507 	ld	h, 1 (iy)
   01F2 E5            [11]  508 	push	hl
   01F3 3E 20         [ 7]  509 	ld	a, #0x20
   01F5 F5            [11]  510 	push	af
   01F6 33            [ 6]  511 	inc	sp
   01F7 21 17 00      [10]  512 	ld	hl, #23
   01FA 39            [11]  513 	add	hl, sp
   01FB 7E            [ 7]  514 	ld	a, (hl)
   01FC 23            [ 6]  515 	inc	hl
   01FD 66            [ 7]  516 	ld	h, (hl)
   01FE 6F            [ 4]  517 	ld	l, a
   01FF CDr00r00      [17]  518 	call	___sdcc_call_hl
   0202 21 07 00      [10]  519 	ld	hl, #7
   0205 39            [11]  520 	add	hl, sp
   0206 F9            [ 6]  521 	ld	sp, hl
   0207 D1            [10]  522 	pop	de
   0208 C1            [10]  523 	pop	bc
                     0209   524 	C$printf.c$205$3_0$36	= .
                            525 	.globl	C$printf.c$205$3_0$36
                            526 ;printf.c:205: for (size_t i = len; i < width; i++) {
   0209 03            [ 6]  527 	inc	bc
   020A 18 83         [12]  528 	jr	00114$
                     020C   529 	C$printf.c$211$1_0$34	= .
                            530 	.globl	C$printf.c$211$1_0$34
                            531 ;printf.c:211: while (len) {
   020C                     532 00126$:
   020C FD 21 10 00   [14]  533 	ld	iy, #16
   0210 FD 39         [15]  534 	add	iy, sp
   0212 FD 73 00      [19]  535 	ld	0 (iy), e
   0215 FD 72 01      [19]  536 	ld	1 (iy), d
   0218                     537 00123$:
   0218 21 10 00      [10]  538 	ld	hl, #16
   021B 39            [11]  539 	add	hl, sp
   021C 4E            [ 7]  540 	ld	c, (hl)
   021D 23            [ 6]  541 	inc	hl
   021E 46            [ 7]  542 	ld	b, (hl)
   021F 21 16 00      [10]  543 	ld	hl, #22
   0222 39            [11]  544 	add	hl, sp
   0223 5E            [ 7]  545 	ld	e, (hl)
   0224 23            [ 6]  546 	inc	hl
   0225 56            [ 7]  547 	ld	d, (hl)
   0226                     548 00105$:
   0226 7A            [ 4]  549 	ld	a, d
   0227 B3            [ 4]  550 	or	a, e
   0228 CArD0r02      [10]  551 	jp	Z, 00127$
                     022B   552 	C$printf.c$212$2_0$38	= .
                            553 	.globl	C$printf.c$212$2_0$38
                            554 ;printf.c:212: out(buf[--len], buffer, idx++, maxlen);
   022B FD 21 04 00   [14]  555 	ld	iy, #4
   022F FD 39         [15]  556 	add	iy, sp
   0231 FD 71 00      [19]  557 	ld	0 (iy), c
   0234 FD 70 01      [19]  558 	ld	1 (iy), b
   0237 03            [ 6]  559 	inc	bc
   0238 FD 21 10 00   [14]  560 	ld	iy, #16
   023C FD 39         [15]  561 	add	iy, sp
   023E FD 71 00      [19]  562 	ld	0 (iy), c
   0241 FD 70 01      [19]  563 	ld	1 (iy), b
   0244 FD 2B         [10]  564 	dec	iy
   0246 FD 2B         [10]  565 	dec	iy
   0248 FD 7E 00      [19]  566 	ld	a, 0 (iy)
   024B FD 21 06 00   [14]  567 	ld	iy, #6
   024F FD 39         [15]  568 	add	iy, sp
   0251 FD 77 00      [19]  569 	ld	0 (iy), a
   0254 21 0F 00      [10]  570 	ld	hl, #14+1
   0257 39            [11]  571 	add	hl, sp
   0258 7E            [ 7]  572 	ld	a, (hl)
   0259 FD 21 06 00   [14]  573 	ld	iy, #6
   025D FD 39         [15]  574 	add	iy, sp
   025F FD 77 01      [19]  575 	ld	1 (iy), a
   0262 1B            [ 6]  576 	dec	de
   0263 21 08 00      [10]  577 	ld	hl, #8
   0266 39            [11]  578 	add	hl, sp
   0267 FD 21 14 00   [14]  579 	ld	iy, #20
   026B FD 39         [15]  580 	add	iy, sp
   026D FD 7E 00      [19]  581 	ld	a, 0 (iy)
   0270 83            [ 4]  582 	add	a, e
   0271 77            [ 7]  583 	ld	(hl), a
   0272 FD 7E 01      [19]  584 	ld	a, 1 (iy)
   0275 8A            [ 4]  585 	adc	a, d
   0276 23            [ 6]  586 	inc	hl
   0277 77            [ 7]  587 	ld	(hl), a
   0278 FD 21 08 00   [14]  588 	ld	iy, #8
   027C FD 39         [15]  589 	add	iy, sp
   027E FD 6E 00      [19]  590 	ld	l, 0 (iy)
   0281 FD 66 01      [19]  591 	ld	h, 1 (iy)
   0284 7E            [ 7]  592 	ld	a, (hl)
   0285 FD 23         [10]  593 	inc	iy
   0287 FD 77 00      [19]  594 	ld	0 (iy), a
   028A C5            [11]  595 	push	bc
   028B D5            [11]  596 	push	de
   028C 21 16 00      [10]  597 	ld	hl, #22
   028F 39            [11]  598 	add	hl, sp
   0290 4E            [ 7]  599 	ld	c, (hl)
   0291 23            [ 6]  600 	inc	hl
   0292 46            [ 7]  601 	ld	b, (hl)
   0293 C5            [11]  602 	push	bc
   0294 FD 21 0A 00   [14]  603 	ld	iy, #10
   0298 FD 39         [15]  604 	add	iy, sp
   029A FD 6E 00      [19]  605 	ld	l, 0 (iy)
   029D FD 66 01      [19]  606 	ld	h, 1 (iy)
   02A0 E5            [11]  607 	push	hl
   02A1 FD 23         [10]  608 	inc	iy
   02A3 FD 23         [10]  609 	inc	iy
   02A5 FD 6E 00      [19]  610 	ld	l, 0 (iy)
   02A8 FD 66 01      [19]  611 	ld	h, 1 (iy)
   02AB E5            [11]  612 	push	hl
   02AC FD 23         [10]  613 	inc	iy
   02AE FD 23         [10]  614 	inc	iy
   02B0 FD 23         [10]  615 	inc	iy
   02B2 FD 7E 00      [19]  616 	ld	a, 0 (iy)
   02B5 F5            [11]  617 	push	af
   02B6 33            [ 6]  618 	inc	sp
   02B7 FD 23         [10]  619 	inc	iy
   02B9 FD 23         [10]  620 	inc	iy
   02BB FD 23         [10]  621 	inc	iy
   02BD FD 6E 00      [19]  622 	ld	l, 0 (iy)
   02C0 FD 66 01      [19]  623 	ld	h, 1 (iy)
   02C3 CDr00r00      [17]  624 	call	___sdcc_call_hl
   02C6 21 07 00      [10]  625 	ld	hl, #7
   02C9 39            [11]  626 	add	hl, sp
   02CA F9            [ 6]  627 	ld	sp, hl
   02CB D1            [10]  628 	pop	de
   02CC C1            [10]  629 	pop	bc
   02CD C3r26r02      [10]  630 	jp	00105$
   02D0                     631 00127$:
   02D0 FD 21 10 00   [14]  632 	ld	iy, #16
   02D4 FD 39         [15]  633 	add	iy, sp
   02D6 FD 71 00      [19]  634 	ld	0 (iy), c
   02D9 FD 70 01      [19]  635 	ld	1 (iy), b
                     02DC   636 	C$printf.c$216$1_0$34	= .
                            637 	.globl	C$printf.c$216$1_0$34
                            638 ;printf.c:216: if (flags & FLAGS_LEFT) {
   02DC 21 03 00      [10]  639 	ld	hl, #2+1
   02DF 39            [11]  640 	add	hl, sp
   02E0 7E            [ 7]  641 	ld	a, (hl)
   02E1 2B            [ 6]  642 	dec	hl
   02E2 B6            [ 7]  643 	or	a, (hl)
   02E3 CAr81r03      [10]  644 	jp	Z, 00112$
                     02E6   645 	C$printf.c$217$1_0$34	= .
                            646 	.globl	C$printf.c$217$1_0$34
                            647 ;printf.c:217: while (idx - start_idx < width) {
   02E6 FD 21 08 00   [14]  648 	ld	iy, #8
   02EA FD 39         [15]  649 	add	iy, sp
   02EC FD 71 00      [19]  650 	ld	0 (iy), c
   02EF FD 70 01      [19]  651 	ld	1 (iy), b
   02F2                     652 00108$:
   02F2 21 00 00      [10]  653 	ld	hl, #0
   02F5 39            [11]  654 	add	hl, sp
   02F6 FD 21 08 00   [14]  655 	ld	iy, #8
   02FA FD 39         [15]  656 	add	iy, sp
   02FC FD 7E 00      [19]  657 	ld	a, 0 (iy)
   02FF 96            [ 7]  658 	sub	a, (hl)
   0300 4F            [ 4]  659 	ld	c, a
   0301 FD 7E 01      [19]  660 	ld	a, 1 (iy)
   0304 23            [ 6]  661 	inc	hl
   0305 9E            [ 7]  662 	sbc	a, (hl)
   0306 47            [ 4]  663 	ld	b, a
   0307 21 18 00      [10]  664 	ld	hl, #24
   030A 39            [11]  665 	add	hl, sp
   030B 79            [ 4]  666 	ld	a, c
   030C 96            [ 7]  667 	sub	a, (hl)
   030D 78            [ 4]  668 	ld	a, b
   030E 23            [ 6]  669 	inc	hl
   030F 9E            [ 7]  670 	sbc	a, (hl)
   0310 30 53         [12]  671 	jr	NC,00128$
                     0312   672 	C$printf.c$218$3_0$40	= .
                            673 	.globl	C$printf.c$218$3_0$40
                            674 ;printf.c:218: out(' ', buffer, idx++, maxlen);
   0312 FD 5E 00      [19]  675 	ld	e, 0 (iy)
   0315 FD 56 01      [19]  676 	ld	d, 1 (iy)
   0318 FD 34 00      [23]  677 	inc	0 (iy)
   031B 20 03         [12]  678 	jr	NZ,00167$
   031D FD 34 01      [23]  679 	inc	1 (iy)
   0320                     680 00167$:
   0320 FD 7E 00      [19]  681 	ld	a, 0 (iy)
   0323 FD 21 10 00   [14]  682 	ld	iy, #16
   0327 FD 39         [15]  683 	add	iy, sp
   0329 FD 77 00      [19]  684 	ld	0 (iy), a
   032C 21 09 00      [10]  685 	ld	hl, #8+1
   032F 39            [11]  686 	add	hl, sp
   0330 7E            [ 7]  687 	ld	a, (hl)
   0331 FD 21 10 00   [14]  688 	ld	iy, #16
   0335 FD 39         [15]  689 	add	iy, sp
   0337 FD 77 01      [19]  690 	ld	1 (iy), a
   033A FD 2B         [10]  691 	dec	iy
   033C FD 2B         [10]  692 	dec	iy
   033E FD 4E 00      [19]  693 	ld	c, 0 (iy)
   0341 FD 46 01      [19]  694 	ld	b, 1 (iy)
   0344 21 12 00      [10]  695 	ld	hl, #18
   0347 39            [11]  696 	add	hl, sp
   0348 7E            [ 7]  697 	ld	a, (hl)
   0349 23            [ 6]  698 	inc	hl
   034A 66            [ 7]  699 	ld	h, (hl)
   034B 6F            [ 4]  700 	ld	l, a
   034C E5            [11]  701 	push	hl
   034D D5            [11]  702 	push	de
   034E C5            [11]  703 	push	bc
   034F 3E 20         [ 7]  704 	ld	a, #0x20
   0351 F5            [11]  705 	push	af
   0352 33            [ 6]  706 	inc	sp
   0353 21 13 00      [10]  707 	ld	hl, #19
   0356 39            [11]  708 	add	hl, sp
   0357 7E            [ 7]  709 	ld	a, (hl)
   0358 23            [ 6]  710 	inc	hl
   0359 66            [ 7]  711 	ld	h, (hl)
   035A 6F            [ 4]  712 	ld	l, a
   035B CDr00r00      [17]  713 	call	___sdcc_call_hl
   035E 21 07 00      [10]  714 	ld	hl, #7
   0361 39            [11]  715 	add	hl, sp
   0362 F9            [ 6]  716 	ld	sp, hl
   0363 18 8D         [12]  717 	jr	00108$
   0365                     718 00128$:
   0365 21 08 00      [10]  719 	ld	hl, #8+0
   0368 39            [11]  720 	add	hl, sp
   0369 7E            [ 7]  721 	ld	a, (hl)
   036A FD 21 10 00   [14]  722 	ld	iy, #16
   036E FD 39         [15]  723 	add	iy, sp
   0370 FD 77 00      [19]  724 	ld	0 (iy), a
   0373 21 09 00      [10]  725 	ld	hl, #8+1
   0376 39            [11]  726 	add	hl, sp
   0377 7E            [ 7]  727 	ld	a, (hl)
   0378 FD 21 10 00   [14]  728 	ld	iy, #16
   037C FD 39         [15]  729 	add	iy, sp
   037E FD 77 01      [19]  730 	ld	1 (iy), a
   0381                     731 00112$:
                     0381   732 	C$printf.c$222$1_0$34	= .
                            733 	.globl	C$printf.c$222$1_0$34
                            734 ;printf.c:222: return idx;
   0381 21 10 00      [10]  735 	ld	hl, #16
   0384 39            [11]  736 	add	hl, sp
   0385 7E            [ 7]  737 	ld	a, (hl)
   0386 23            [ 6]  738 	inc	hl
   0387 66            [ 7]  739 	ld	h, (hl)
   0388 6F            [ 4]  740 	ld	l, a
                     0389   741 	C$printf.c$223$1_0$34	= .
                            742 	.globl	C$printf.c$223$1_0$34
                            743 ;printf.c:223: }
   0389 FD 21 0A 00   [14]  744 	ld	iy, #10
   038D FD 39         [15]  745 	add	iy, sp
   038F FD F9         [10]  746 	ld	sp, iy
                     0391   747 	C$printf.c$223$1_0$34	= .
                            748 	.globl	C$printf.c$223$1_0$34
                     0391   749 	XFprintf$_out_rev$0$0	= .
                            750 	.globl	XFprintf$_out_rev$0$0
   0391 C9            [10]  751 	ret
                     0392   752 	Fprintf$_ntoa_format$0$0	= .
                            753 	.globl	Fprintf$_ntoa_format$0$0
                     0392   754 	C$printf.c$227$1_0$42	= .
                            755 	.globl	C$printf.c$227$1_0$42
                            756 ;printf.c:227: static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
                            757 ;	---------------------------------
                            758 ; Function _ntoa_format
                            759 ; ---------------------------------
   0392                     760 __ntoa_format:
   0392 F5            [11]  761 	push	af
                     0393   762 	C$printf.c$230$1_0$42	= .
                            763 	.globl	C$printf.c$230$1_0$42
                            764 ;printf.c:230: if (!(flags & FLAGS_LEFT)) {
   0393 21 17 00      [10]  765 	ld	hl, #23+0
   0396 39            [11]  766 	add	hl, sp
   0397 7E            [ 7]  767 	ld	a, (hl)
   0398 E6 02         [ 7]  768 	and	a, #0x02
   039A C2r45r04      [10]  769 	jp	NZ,00116$
                     039D   770 	C$printf.c$231$2_0$43	= .
                            771 	.globl	C$printf.c$231$2_0$43
                            772 ;printf.c:231: if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
   039D FD 21 15 00   [14]  773 	ld	iy, #21
   03A1 FD 39         [15]  774 	add	iy, sp
   03A3 FD 7E 01      [19]  775 	ld	a, 1 (iy)
   03A6 FD B6 00      [19]  776 	or	a, 0 (iy)
   03A9 28 28         [12]  777 	jr	Z,00160$
   03AB FD 23         [10]  778 	inc	iy
   03AD FD 23         [10]  779 	inc	iy
   03AF FD 7E 00      [19]  780 	ld	a, 0 (iy)
   03B2 0F            [ 4]  781 	rrca
   03B3 30 1E         [12]  782 	jr	NC,00160$
   03B5 21 10 00      [10]  783 	ld	hl, #16+0
   03B8 39            [11]  784 	add	hl, sp
   03B9 CB 46         [12]  785 	bit	0, (hl)
   03BB 20 09         [12]  786 	jr	NZ,00101$
   03BD 21 17 00      [10]  787 	ld	hl, #23+0
   03C0 39            [11]  788 	add	hl, sp
   03C1 7E            [ 7]  789 	ld	a, (hl)
   03C2 E6 0C         [ 7]  790 	and	a, #0x0c
   03C4 28 0D         [12]  791 	jr	Z,00160$
   03C6                     792 00101$:
                     03C6   793 	C$printf.c$232$3_0$44	= .
                            794 	.globl	C$printf.c$232$3_0$44
                            795 ;printf.c:232: width--;
   03C6 21 15 00      [10]  796 	ld	hl, #21
   03C9 39            [11]  797 	add	hl, sp
   03CA 7E            [ 7]  798 	ld	a, (hl)
   03CB C6 FF         [ 7]  799 	add	a, #0xff
   03CD 77            [ 7]  800 	ld	(hl), a
   03CE 23            [ 6]  801 	inc	hl
   03CF 7E            [ 7]  802 	ld	a, (hl)
   03D0 CE FF         [ 7]  803 	adc	a, #0xff
   03D2 77            [ 7]  804 	ld	(hl), a
                     03D3   805 	C$printf.c$234$1_0$42	= .
                            806 	.globl	C$printf.c$234$1_0$42
                            807 ;printf.c:234: while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
   03D3                     808 00160$:
   03D3 21 0E 00      [10]  809 	ld	hl, #14
   03D6 39            [11]  810 	add	hl, sp
   03D7 4E            [ 7]  811 	ld	c, (hl)
   03D8 23            [ 6]  812 	inc	hl
   03D9 46            [ 7]  813 	ld	b, (hl)
   03DA                     814 00107$:
   03DA 21 13 00      [10]  815 	ld	hl, #19
   03DD 39            [11]  816 	add	hl, sp
   03DE 79            [ 4]  817 	ld	a, c
   03DF 96            [ 7]  818 	sub	a, (hl)
   03E0 78            [ 4]  819 	ld	a, b
   03E1 23            [ 6]  820 	inc	hl
   03E2 9E            [ 7]  821 	sbc	a, (hl)
   03E3 30 16         [12]  822 	jr	NC,00164$
   03E5 79            [ 4]  823 	ld	a, c
   03E6 D6 20         [ 7]  824 	sub	a, #0x20
   03E8 78            [ 4]  825 	ld	a, b
   03E9 DE 00         [ 7]  826 	sbc	a, #0x00
   03EB 30 0E         [12]  827 	jr	NC,00164$
                     03ED   828 	C$printf.c$235$3_0$45	= .
                            829 	.globl	C$printf.c$235$3_0$45
                            830 ;printf.c:235: buf[len++] = '0';
   03ED 21 0C 00      [10]  831 	ld	hl, #12
   03F0 39            [11]  832 	add	hl, sp
   03F1 7E            [ 7]  833 	ld	a, (hl)
   03F2 23            [ 6]  834 	inc	hl
   03F3 66            [ 7]  835 	ld	h, (hl)
   03F4 6F            [ 4]  836 	ld	l, a
   03F5 09            [11]  837 	add	hl, bc
   03F6 03            [ 6]  838 	inc	bc
   03F7 36 30         [10]  839 	ld	(hl), #0x30
   03F9 18 DF         [12]  840 	jr	00107$
                     03FB   841 	C$printf.c$237$1_0$42	= .
                            842 	.globl	C$printf.c$237$1_0$42
                            843 ;printf.c:237: while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
   03FB                     844 00164$:
   03FB 21 17 00      [10]  845 	ld	hl, #23+0
   03FE 39            [11]  846 	add	hl, sp
   03FF 7E            [ 7]  847 	ld	a, (hl)
   0400 E6 01         [ 7]  848 	and	a, #0x01
   0402 FD 21 00 00   [14]  849 	ld	iy, #0
   0406 FD 39         [15]  850 	add	iy, sp
   0408 FD 77 00      [19]  851 	ld	0 (iy), a
   040B FD 36 01 00   [19]  852 	ld	1 (iy), #0x00
   040F                     853 00112$:
   040F 21 01 00      [10]  854 	ld	hl, #0+1
   0412 39            [11]  855 	add	hl, sp
   0413 7E            [ 7]  856 	ld	a, (hl)
   0414 2B            [ 6]  857 	dec	hl
   0415 B6            [ 7]  858 	or	a, (hl)
   0416 28 21         [12]  859 	jr	Z,00185$
   0418 21 15 00      [10]  860 	ld	hl, #21
   041B 39            [11]  861 	add	hl, sp
   041C 79            [ 4]  862 	ld	a, c
   041D 96            [ 7]  863 	sub	a, (hl)
   041E 78            [ 4]  864 	ld	a, b
   041F 23            [ 6]  865 	inc	hl
   0420 9E            [ 7]  866 	sbc	a, (hl)
   0421 30 16         [12]  867 	jr	NC,00185$
   0423 79            [ 4]  868 	ld	a, c
   0424 D6 20         [ 7]  869 	sub	a, #0x20
   0426 78            [ 4]  870 	ld	a, b
   0427 DE 00         [ 7]  871 	sbc	a, #0x00
   0429 30 0E         [12]  872 	jr	NC,00185$
                     042B   873 	C$printf.c$238$3_0$46	= .
                            874 	.globl	C$printf.c$238$3_0$46
                            875 ;printf.c:238: buf[len++] = '0';
   042B 21 0C 00      [10]  876 	ld	hl, #12
   042E 39            [11]  877 	add	hl, sp
   042F 7E            [ 7]  878 	ld	a, (hl)
   0430 23            [ 6]  879 	inc	hl
   0431 66            [ 7]  880 	ld	h, (hl)
   0432 6F            [ 4]  881 	ld	l, a
   0433 09            [11]  882 	add	hl, bc
   0434 03            [ 6]  883 	inc	bc
   0435 36 30         [10]  884 	ld	(hl), #0x30
   0437 18 D6         [12]  885 	jr	00112$
   0439                     886 00185$:
   0439 FD 21 0E 00   [14]  887 	ld	iy, #14
   043D FD 39         [15]  888 	add	iy, sp
   043F FD 71 00      [19]  889 	ld	0 (iy), c
   0442 FD 70 01      [19]  890 	ld	1 (iy), b
   0445                     891 00116$:
                     0445   892 	C$printf.c$243$1_0$42	= .
                            893 	.globl	C$printf.c$243$1_0$42
                            894 ;printf.c:243: if (flags & FLAGS_HASH) {
   0445 21 17 00      [10]  895 	ld	hl, #23+0
   0448 39            [11]  896 	add	hl, sp
   0449 7E            [ 7]  897 	ld	a, (hl)
   044A E6 10         [ 7]  898 	and	a, #0x10
   044C CArC9r05      [10]  899 	jp	Z,00141$
                     044F   900 	C$printf.c$246$1_0$42	= .
                            901 	.globl	C$printf.c$246$1_0$42
                            902 ;printf.c:246: if (len && (base == 16U)) {
   044F FD 21 11 00   [14]  903 	ld	iy, #17
   0453 FD 39         [15]  904 	add	iy, sp
   0455 FD 7E 00      [19]  905 	ld	a, 0 (iy)
   0458 D6 10         [ 7]  906 	sub	a, #0x10
   045A FD B6 01      [19]  907 	or	a, 1 (iy)
   045D 3E 01         [ 7]  908 	ld	a, #0x01
   045F 28 01         [12]  909 	jr	Z,00312$
   0461 AF            [ 4]  910 	xor	a, a
   0462                     911 00312$:
   0462 4F            [ 4]  912 	ld	c, a
                     0463   913 	C$printf.c$244$2_0$47	= .
                            914 	.globl	C$printf.c$244$2_0$47
                            915 ;printf.c:244: if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
   0463 21 18 00      [10]  916 	ld	hl, #23+1
   0466 39            [11]  917 	add	hl, sp
   0467 7E            [ 7]  918 	ld	a, (hl)
   0468 E6 04         [ 7]  919 	and	a, #0x04
   046A 20 73         [12]  920 	jr	NZ,00121$
   046C FD 21 0E 00   [14]  921 	ld	iy, #14
   0470 FD 39         [15]  922 	add	iy, sp
   0472 FD 7E 01      [19]  923 	ld	a, 1 (iy)
   0475 FD B6 00      [19]  924 	or	a, 0 (iy)
   0478 28 65         [12]  925 	jr	Z,00121$
   047A FD 7E 00      [19]  926 	ld	a, 0 (iy)
   047D FD 21 13 00   [14]  927 	ld	iy, #19
   0481 FD 39         [15]  928 	add	iy, sp
   0483 FD 96 00      [19]  929 	sub	a, 0 (iy)
   0486 20 10         [12]  930 	jr	NZ,00315$
   0488 21 0F 00      [10]  931 	ld	hl, #14+1
   048B 39            [11]  932 	add	hl, sp
   048C 7E            [ 7]  933 	ld	a, (hl)
   048D FD 21 13 00   [14]  934 	ld	iy, #19
   0491 FD 39         [15]  935 	add	iy, sp
   0493 FD 96 01      [19]  936 	sub	a, 1 (iy)
   0496 28 20         [12]  937 	jr	Z,00120$
   0498                     938 00315$:
   0498 21 0E 00      [10]  939 	ld	hl, #14+0
   049B 39            [11]  940 	add	hl, sp
   049C 7E            [ 7]  941 	ld	a, (hl)
   049D FD 21 15 00   [14]  942 	ld	iy, #21
   04A1 FD 39         [15]  943 	add	iy, sp
   04A3 FD 96 00      [19]  944 	sub	a, 0 (iy)
   04A6 20 37         [12]  945 	jr	NZ,00121$
   04A8 21 0F 00      [10]  946 	ld	hl, #14+1
   04AB 39            [11]  947 	add	hl, sp
   04AC 7E            [ 7]  948 	ld	a, (hl)
   04AD FD 21 15 00   [14]  949 	ld	iy, #21
   04B1 FD 39         [15]  950 	add	iy, sp
   04B3 FD 96 01      [19]  951 	sub	a, 1 (iy)
   04B6 20 27         [12]  952 	jr	NZ,00121$
   04B8                     953 00120$:
                     04B8   954 	C$printf.c$245$3_0$48	= .
                            955 	.globl	C$printf.c$245$3_0$48
                            956 ;printf.c:245: len--;
   04B8 21 0E 00      [10]  957 	ld	hl, #14
   04BB 39            [11]  958 	add	hl, sp
   04BC 7E            [ 7]  959 	ld	a, (hl)
   04BD C6 FF         [ 7]  960 	add	a, #0xff
   04BF 77            [ 7]  961 	ld	(hl), a
   04C0 23            [ 6]  962 	inc	hl
   04C1 7E            [ 7]  963 	ld	a, (hl)
   04C2 CE FF         [ 7]  964 	adc	a, #0xff
   04C4 77            [ 7]  965 	ld	(hl), a
                     04C5   966 	C$printf.c$246$3_0$48	= .
                            967 	.globl	C$printf.c$246$3_0$48
                            968 ;printf.c:246: if (len && (base == 16U)) {
   04C5 21 0F 00      [10]  969 	ld	hl, #14+1
   04C8 39            [11]  970 	add	hl, sp
   04C9 7E            [ 7]  971 	ld	a, (hl)
   04CA 2B            [ 6]  972 	dec	hl
   04CB B6            [ 7]  973 	or	a, (hl)
   04CC 28 11         [12]  974 	jr	Z,00121$
   04CE 79            [ 4]  975 	ld	a, c
   04CF B7            [ 4]  976 	or	a, a
   04D0 28 0D         [12]  977 	jr	Z,00121$
                     04D2   978 	C$printf.c$247$4_0$49	= .
                            979 	.globl	C$printf.c$247$4_0$49
                            980 ;printf.c:247: len--;
   04D2 21 0E 00      [10]  981 	ld	hl, #14
   04D5 39            [11]  982 	add	hl, sp
   04D6 7E            [ 7]  983 	ld	a, (hl)
   04D7 C6 FF         [ 7]  984 	add	a, #0xff
   04D9 77            [ 7]  985 	ld	(hl), a
   04DA 23            [ 6]  986 	inc	hl
   04DB 7E            [ 7]  987 	ld	a, (hl)
   04DC CE FF         [ 7]  988 	adc	a, #0xff
   04DE 77            [ 7]  989 	ld	(hl), a
   04DF                     990 00121$:
                     04DF   991 	C$printf.c$250$1_0$42	= .
                            992 	.globl	C$printf.c$250$1_0$42
                            993 ;printf.c:250: if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
   04DF FD 21 0E 00   [14]  994 	ld	iy, #14
   04E3 FD 39         [15]  995 	add	iy, sp
   04E5 FD 7E 00      [19]  996 	ld	a, 0 (iy)
   04E8 D6 20         [ 7]  997 	sub	a, #0x20
   04EA FD 7E 01      [19]  998 	ld	a, 1 (iy)
   04ED DE 00         [ 7]  999 	sbc	a, #0x00
   04EF 3E 00         [ 7] 1000 	ld	a, #0x00
   04F1 17            [ 4] 1001 	rla
   04F2 47            [ 4] 1002 	ld	b, a
   04F3 79            [ 4] 1003 	ld	a, c
   04F4 B7            [ 4] 1004 	or	a, a
   04F5 28 32         [12] 1005 	jr	Z,00134$
   04F7 21 17 00      [10] 1006 	ld	hl, #23+0
   04FA 39            [11] 1007 	add	hl, sp
   04FB 7E            [ 7] 1008 	ld	a, (hl)
   04FC E6 20         [ 7] 1009 	and	a, #0x20
   04FE 20 29         [12] 1010 	jr	NZ,00134$
   0500 78            [ 4] 1011 	ld	a, b
   0501 B7            [ 4] 1012 	or	a, a
   0502 28 25         [12] 1013 	jr	Z,00134$
                     0504  1014 	C$printf.c$251$3_0$50	= .
                           1015 	.globl	C$printf.c$251$3_0$50
                           1016 ;printf.c:251: buf[len++] = 'x';
   0504 FD 21 0E 00   [14] 1017 	ld	iy, #14
   0508 FD 39         [15] 1018 	add	iy, sp
   050A FD 4E 00      [19] 1019 	ld	c, 0 (iy)
   050D FD 46 01      [19] 1020 	ld	b, 1 (iy)
   0510 21 01 00      [10] 1021 	ld	hl, #0x0001
   0513 09            [11] 1022 	add	hl, bc
   0514 FD 75 00      [19] 1023 	ld	0 (iy), l
   0517 FD 74 01      [19] 1024 	ld	1 (iy), h
   051A FD 2B         [10] 1025 	dec	iy
   051C FD 2B         [10] 1026 	dec	iy
   051E FD 6E 00      [19] 1027 	ld	l, 0 (iy)
   0521 FD 66 01      [19] 1028 	ld	h, 1 (iy)
   0524 09            [11] 1029 	add	hl, bc
   0525 36 78         [10] 1030 	ld	(hl), #0x78
   0527 18 6D         [12] 1031 	jr	00135$
   0529                    1032 00134$:
                     0529  1033 	C$printf.c$253$2_0$47	= .
                           1034 	.globl	C$printf.c$253$2_0$47
                           1035 ;printf.c:253: else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
   0529 79            [ 4] 1036 	ld	a, c
   052A B7            [ 4] 1037 	or	a, a
   052B 28 32         [12] 1038 	jr	Z,00129$
   052D 21 17 00      [10] 1039 	ld	hl, #23+0
   0530 39            [11] 1040 	add	hl, sp
   0531 7E            [ 7] 1041 	ld	a, (hl)
   0532 E6 20         [ 7] 1042 	and	a, #0x20
   0534 28 29         [12] 1043 	jr	Z,00129$
   0536 78            [ 4] 1044 	ld	a, b
   0537 B7            [ 4] 1045 	or	a, a
   0538 28 25         [12] 1046 	jr	Z,00129$
                     053A  1047 	C$printf.c$254$3_0$51	= .
                           1048 	.globl	C$printf.c$254$3_0$51
                           1049 ;printf.c:254: buf[len++] = 'X';
   053A FD 21 0E 00   [14] 1050 	ld	iy, #14
   053E FD 39         [15] 1051 	add	iy, sp
   0540 FD 4E 00      [19] 1052 	ld	c, 0 (iy)
   0543 FD 46 01      [19] 1053 	ld	b, 1 (iy)
   0546 21 01 00      [10] 1054 	ld	hl, #0x0001
   0549 09            [11] 1055 	add	hl, bc
   054A FD 75 00      [19] 1056 	ld	0 (iy), l
   054D FD 74 01      [19] 1057 	ld	1 (iy), h
   0550 FD 2B         [10] 1058 	dec	iy
   0552 FD 2B         [10] 1059 	dec	iy
   0554 FD 6E 00      [19] 1060 	ld	l, 0 (iy)
   0557 FD 66 01      [19] 1061 	ld	h, 1 (iy)
   055A 09            [11] 1062 	add	hl, bc
   055B 36 58         [10] 1063 	ld	(hl), #0x58
   055D 18 37         [12] 1064 	jr	00135$
   055F                    1065 00129$:
                     055F  1066 	C$printf.c$256$2_0$47	= .
                           1067 	.globl	C$printf.c$256$2_0$47
                           1068 ;printf.c:256: else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
   055F FD 21 11 00   [14] 1069 	ld	iy, #17
   0563 FD 39         [15] 1070 	add	iy, sp
   0565 FD 7E 00      [19] 1071 	ld	a, 0 (iy)
   0568 D6 02         [ 7] 1072 	sub	a, #0x02
   056A FD B6 01      [19] 1073 	or	a, 1 (iy)
   056D 20 27         [12] 1074 	jr	NZ,00135$
   056F 78            [ 4] 1075 	ld	a, b
   0570 B7            [ 4] 1076 	or	a, a
   0571 28 23         [12] 1077 	jr	Z,00135$
                     0573  1078 	C$printf.c$257$3_0$52	= .
                           1079 	.globl	C$printf.c$257$3_0$52
                           1080 ;printf.c:257: buf[len++] = 'b';
   0573 FD 2B         [10] 1081 	dec	iy
   0575 FD 2B         [10] 1082 	dec	iy
   0577 FD 2B         [10] 1083 	dec	iy
   0579 FD 4E 00      [19] 1084 	ld	c, 0 (iy)
   057C FD 46 01      [19] 1085 	ld	b, 1 (iy)
   057F 21 01 00      [10] 1086 	ld	hl, #0x0001
   0582 09            [11] 1087 	add	hl, bc
   0583 FD 75 00      [19] 1088 	ld	0 (iy), l
   0586 FD 74 01      [19] 1089 	ld	1 (iy), h
   0589 FD 2B         [10] 1090 	dec	iy
   058B FD 2B         [10] 1091 	dec	iy
   058D FD 6E 00      [19] 1092 	ld	l, 0 (iy)
   0590 FD 66 01      [19] 1093 	ld	h, 1 (iy)
   0593 09            [11] 1094 	add	hl, bc
   0594 36 62         [10] 1095 	ld	(hl), #0x62
   0596                    1096 00135$:
                     0596  1097 	C$printf.c$259$2_0$47	= .
                           1098 	.globl	C$printf.c$259$2_0$47
                           1099 ;printf.c:259: if (len < PRINTF_NTOA_BUFFER_SIZE) {
   0596 FD 21 0E 00   [14] 1100 	ld	iy, #14
   059A FD 39         [15] 1101 	add	iy, sp
   059C FD 7E 00      [19] 1102 	ld	a, 0 (iy)
   059F D6 20         [ 7] 1103 	sub	a, #0x20
   05A1 FD 7E 01      [19] 1104 	ld	a, 1 (iy)
   05A4 DE 00         [ 7] 1105 	sbc	a, #0x00
   05A6 30 21         [12] 1106 	jr	NC,00141$
                     05A8  1107 	C$printf.c$260$3_0$53	= .
                           1108 	.globl	C$printf.c$260$3_0$53
                           1109 ;printf.c:260: buf[len++] = '0';
   05A8 FD 4E 00      [19] 1110 	ld	c, 0 (iy)
   05AB FD 5E 01      [19] 1111 	ld	e, 1 (iy)
   05AE 79            [ 4] 1112 	ld	a, c
   05AF 21 0E 00      [10] 1113 	ld	hl, #14
   05B2 39            [11] 1114 	add	hl, sp
   05B3 C6 01         [ 7] 1115 	add	a, #0x01
   05B5 77            [ 7] 1116 	ld	(hl), a
   05B6 7B            [ 4] 1117 	ld	a, e
   05B7 CE 00         [ 7] 1118 	adc	a, #0x00
   05B9 23            [ 6] 1119 	inc	hl
   05BA 77            [ 7] 1120 	ld	(hl), a
   05BB 79            [ 4] 1121 	ld	a, c
   05BC 21 0C 00      [10] 1122 	ld	hl, #12
   05BF 39            [11] 1123 	add	hl, sp
   05C0 86            [ 7] 1124 	add	a, (hl)
   05C1 4F            [ 4] 1125 	ld	c, a
   05C2 7B            [ 4] 1126 	ld	a, e
   05C3 23            [ 6] 1127 	inc	hl
   05C4 8E            [ 7] 1128 	adc	a, (hl)
   05C5 69            [ 4] 1129 	ld	l, c
   05C6 67            [ 4] 1130 	ld	h, a
   05C7 36 30         [10] 1131 	ld	(hl), #0x30
   05C9                    1132 00141$:
                     05C9  1133 	C$printf.c$264$1_0$42	= .
                           1134 	.globl	C$printf.c$264$1_0$42
                           1135 ;printf.c:264: if (len < PRINTF_NTOA_BUFFER_SIZE) {
   05C9 FD 21 0E 00   [14] 1136 	ld	iy, #14
   05CD FD 39         [15] 1137 	add	iy, sp
   05CF FD 7E 00      [19] 1138 	ld	a, 0 (iy)
   05D2 D6 20         [ 7] 1139 	sub	a, #0x20
   05D4 FD 7E 01      [19] 1140 	ld	a, 1 (iy)
   05D7 DE 00         [ 7] 1141 	sbc	a, #0x00
   05D9 D2r65r06      [10] 1142 	jp	NC, 00151$
                     05DC  1143 	C$printf.c$265$2_0$54	= .
                           1144 	.globl	C$printf.c$265$2_0$54
                           1145 ;printf.c:265: if (negative) {
   05DC FD 23         [10] 1146 	inc	iy
   05DE FD 23         [10] 1147 	inc	iy
   05E0 FD CB 00 46   [20] 1148 	bit	0, 0 (iy)
   05E4 28 27         [12] 1149 	jr	Z,00148$
                     05E6  1150 	C$printf.c$266$3_0$55	= .
                           1151 	.globl	C$printf.c$266$3_0$55
                           1152 ;printf.c:266: buf[len++] = '-';
   05E6 FD 2B         [10] 1153 	dec	iy
   05E8 FD 2B         [10] 1154 	dec	iy
   05EA FD 4E 00      [19] 1155 	ld	c, 0 (iy)
   05ED FD 5E 01      [19] 1156 	ld	e, 1 (iy)
   05F0 79            [ 4] 1157 	ld	a, c
   05F1 21 0E 00      [10] 1158 	ld	hl, #14
   05F4 39            [11] 1159 	add	hl, sp
   05F5 C6 01         [ 7] 1160 	add	a, #0x01
   05F7 77            [ 7] 1161 	ld	(hl), a
   05F8 7B            [ 4] 1162 	ld	a, e
   05F9 CE 00         [ 7] 1163 	adc	a, #0x00
   05FB 23            [ 6] 1164 	inc	hl
   05FC 77            [ 7] 1165 	ld	(hl), a
   05FD 79            [ 4] 1166 	ld	a, c
   05FE 21 0C 00      [10] 1167 	ld	hl, #12
   0601 39            [11] 1168 	add	hl, sp
   0602 86            [ 7] 1169 	add	a, (hl)
   0603 4F            [ 4] 1170 	ld	c, a
   0604 7B            [ 4] 1171 	ld	a, e
   0605 23            [ 6] 1172 	inc	hl
   0606 8E            [ 7] 1173 	adc	a, (hl)
   0607 69            [ 4] 1174 	ld	l, c
   0608 67            [ 4] 1175 	ld	h, a
   0609 36 2D         [10] 1176 	ld	(hl), #0x2d
   060B 18 58         [12] 1177 	jr	00151$
   060D                    1178 00148$:
                     060D  1179 	C$printf.c$268$2_0$54	= .
                           1180 	.globl	C$printf.c$268$2_0$54
                           1181 ;printf.c:268: else if (flags & FLAGS_PLUS) {
   060D 21 17 00      [10] 1182 	ld	hl, #23+0
   0610 39            [11] 1183 	add	hl, sp
   0611 7E            [ 7] 1184 	ld	a, (hl)
   0612 E6 04         [ 7] 1185 	and	a, #0x04
   0614 28 24         [12] 1186 	jr	Z,00145$
                     0616  1187 	C$printf.c$269$3_0$56	= .
                           1188 	.globl	C$printf.c$269$3_0$56
                           1189 ;printf.c:269: buf[len++] = '+';  // ignore the space if the '+' exists
   0616 21 0E 00      [10] 1190 	ld	hl, #14
   0619 39            [11] 1191 	add	hl, sp
   061A 4E            [ 7] 1192 	ld	c, (hl)
   061B 23            [ 6] 1193 	inc	hl
   061C 5E            [ 7] 1194 	ld	e, (hl)
   061D 79            [ 4] 1195 	ld	a, c
   061E 21 0E 00      [10] 1196 	ld	hl, #14
   0621 39            [11] 1197 	add	hl, sp
   0622 C6 01         [ 7] 1198 	add	a, #0x01
   0624 77            [ 7] 1199 	ld	(hl), a
   0625 7B            [ 4] 1200 	ld	a, e
   0626 CE 00         [ 7] 1201 	adc	a, #0x00
   0628 23            [ 6] 1202 	inc	hl
   0629 77            [ 7] 1203 	ld	(hl), a
   062A 79            [ 4] 1204 	ld	a, c
   062B 21 0C 00      [10] 1205 	ld	hl, #12
   062E 39            [11] 1206 	add	hl, sp
   062F 86            [ 7] 1207 	add	a, (hl)
   0630 4F            [ 4] 1208 	ld	c, a
   0631 7B            [ 4] 1209 	ld	a, e
   0632 23            [ 6] 1210 	inc	hl
   0633 8E            [ 7] 1211 	adc	a, (hl)
   0634 69            [ 4] 1212 	ld	l, c
   0635 67            [ 4] 1213 	ld	h, a
   0636 36 2B         [10] 1214 	ld	(hl), #0x2b
   0638 18 2B         [12] 1215 	jr	00151$
   063A                    1216 00145$:
                     063A  1217 	C$printf.c$271$2_0$54	= .
                           1218 	.globl	C$printf.c$271$2_0$54
                           1219 ;printf.c:271: else if (flags & FLAGS_SPACE) {
   063A 21 17 00      [10] 1220 	ld	hl, #23+0
   063D 39            [11] 1221 	add	hl, sp
   063E 7E            [ 7] 1222 	ld	a, (hl)
   063F E6 08         [ 7] 1223 	and	a, #0x08
   0641 28 22         [12] 1224 	jr	Z,00151$
                     0643  1225 	C$printf.c$272$3_0$57	= .
                           1226 	.globl	C$printf.c$272$3_0$57
                           1227 ;printf.c:272: buf[len++] = ' ';
   0643 21 0E 00      [10] 1228 	ld	hl, #14
   0646 39            [11] 1229 	add	hl, sp
   0647 4E            [ 7] 1230 	ld	c, (hl)
   0648 23            [ 6] 1231 	inc	hl
   0649 5E            [ 7] 1232 	ld	e, (hl)
   064A 79            [ 4] 1233 	ld	a, c
   064B 21 0E 00      [10] 1234 	ld	hl, #14
   064E 39            [11] 1235 	add	hl, sp
   064F C6 01         [ 7] 1236 	add	a, #0x01
   0651 77            [ 7] 1237 	ld	(hl), a
   0652 7B            [ 4] 1238 	ld	a, e
   0653 CE 00         [ 7] 1239 	adc	a, #0x00
   0655 23            [ 6] 1240 	inc	hl
   0656 77            [ 7] 1241 	ld	(hl), a
   0657 79            [ 4] 1242 	ld	a, c
   0658 21 0C 00      [10] 1243 	ld	hl, #12
   065B 39            [11] 1244 	add	hl, sp
   065C 86            [ 7] 1245 	add	a, (hl)
   065D 4F            [ 4] 1246 	ld	c, a
   065E 7B            [ 4] 1247 	ld	a, e
   065F 23            [ 6] 1248 	inc	hl
   0660 8E            [ 7] 1249 	adc	a, (hl)
   0661 69            [ 4] 1250 	ld	l, c
   0662 67            [ 4] 1251 	ld	h, a
   0663 36 20         [10] 1252 	ld	(hl), #0x20
   0665                    1253 00151$:
                     0665  1254 	C$printf.c$276$1_0$42	= .
                           1255 	.globl	C$printf.c$276$1_0$42
                           1256 ;printf.c:276: return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
   0665 FD 21 17 00   [14] 1257 	ld	iy, #23
   0669 FD 39         [15] 1258 	add	iy, sp
   066B FD 6E 00      [19] 1259 	ld	l, 0 (iy)
   066E FD 66 01      [19] 1260 	ld	h, 1 (iy)
   0671 E5            [11] 1261 	push	hl
   0672 FD 2B         [10] 1262 	dec	iy
   0674 FD 2B         [10] 1263 	dec	iy
   0676 FD 6E 00      [19] 1264 	ld	l, 0 (iy)
   0679 FD 66 01      [19] 1265 	ld	h, 1 (iy)
   067C E5            [11] 1266 	push	hl
   067D FD 21 12 00   [14] 1267 	ld	iy, #18
   0681 FD 39         [15] 1268 	add	iy, sp
   0683 FD 6E 00      [19] 1269 	ld	l, 0 (iy)
   0686 FD 66 01      [19] 1270 	ld	h, 1 (iy)
   0689 E5            [11] 1271 	push	hl
   068A FD 2B         [10] 1272 	dec	iy
   068C FD 2B         [10] 1273 	dec	iy
   068E FD 6E 00      [19] 1274 	ld	l, 0 (iy)
   0691 FD 66 01      [19] 1275 	ld	h, 1 (iy)
   0694 E5            [11] 1276 	push	hl
   0695 FD 2B         [10] 1277 	dec	iy
   0697 FD 2B         [10] 1278 	dec	iy
   0699 FD 6E 00      [19] 1279 	ld	l, 0 (iy)
   069C FD 66 01      [19] 1280 	ld	h, 1 (iy)
   069F E5            [11] 1281 	push	hl
   06A0 FD 2B         [10] 1282 	dec	iy
   06A2 FD 2B         [10] 1283 	dec	iy
   06A4 FD 6E 00      [19] 1284 	ld	l, 0 (iy)
   06A7 FD 66 01      [19] 1285 	ld	h, 1 (iy)
   06AA E5            [11] 1286 	push	hl
   06AB FD 2B         [10] 1287 	dec	iy
   06AD FD 2B         [10] 1288 	dec	iy
   06AF FD 6E 00      [19] 1289 	ld	l, 0 (iy)
   06B2 FD 66 01      [19] 1290 	ld	h, 1 (iy)
   06B5 E5            [11] 1291 	push	hl
   06B6 FD 2B         [10] 1292 	dec	iy
   06B8 FD 2B         [10] 1293 	dec	iy
   06BA FD 6E 00      [19] 1294 	ld	l, 0 (iy)
   06BD FD 66 01      [19] 1295 	ld	h, 1 (iy)
   06C0 E5            [11] 1296 	push	hl
   06C1 CDr3Fr01      [17] 1297 	call	__out_rev
   06C4 FD 21 10 00   [14] 1298 	ld	iy, #16
   06C8 FD 39         [15] 1299 	add	iy, sp
   06CA FD F9         [10] 1300 	ld	sp, iy
                     06CC  1301 	C$printf.c$277$1_0$42	= .
                           1302 	.globl	C$printf.c$277$1_0$42
                           1303 ;printf.c:277: }
   06CC F1            [10] 1304 	pop	af
                     06CD  1305 	C$printf.c$277$1_0$42	= .
                           1306 	.globl	C$printf.c$277$1_0$42
                     06CD  1307 	XFprintf$_ntoa_format$0$0	= .
                           1308 	.globl	XFprintf$_ntoa_format$0$0
   06CD C9            [10] 1309 	ret
                     06CE  1310 	Fprintf$_ntoa_long$0$0	= .
                           1311 	.globl	Fprintf$_ntoa_long$0$0
                     06CE  1312 	C$printf.c$281$1_0$59	= .
                           1313 	.globl	C$printf.c$281$1_0$59
                           1314 ;printf.c:281: static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
                           1315 ;	---------------------------------
                           1316 ; Function _ntoa_long
                           1317 ; ---------------------------------
   06CE                    1318 __ntoa_long:
   06CE 21 DA FF      [10] 1319 	ld	hl, #-38
   06D1 39            [11] 1320 	add	hl, sp
   06D2 F9            [ 6] 1321 	ld	sp, hl
                     06D3  1322 	C$printf.c$284$2_0$59	= .
                           1323 	.globl	C$printf.c$284$2_0$59
                           1324 ;printf.c:284: size_t len = 0U;
   06D3 01 00 00      [10] 1325 	ld	bc, #0x0000
                     06D6  1326 	C$printf.c$287$1_0$59	= .
                           1327 	.globl	C$printf.c$287$1_0$59
                           1328 ;printf.c:287: if (!value) {
   06D6 FD 21 30 00   [14] 1329 	ld	iy, #48
   06DA FD 39         [15] 1330 	add	iy, sp
   06DC FD 7E 03      [19] 1331 	ld	a, 3 (iy)
   06DF FD B6 02      [19] 1332 	or	a, 2 (iy)
   06E2 FD B6 01      [19] 1333 	or	a, 1 (iy)
   06E5 FD B6 00      [19] 1334 	or	a, 0 (iy)
   06E8 20 14         [12] 1335 	jr	NZ,00102$
                     06EA  1336 	C$printf.c$288$2_0$60	= .
                           1337 	.globl	C$printf.c$288$2_0$60
                           1338 ;printf.c:288: flags &= ~FLAGS_HASH;
   06EA FD 21 3D 00   [14] 1339 	ld	iy, #61
   06EE FD 39         [15] 1340 	add	iy, sp
   06F0 FD 7E 00      [19] 1341 	ld	a, 0 (iy)
   06F3 E6 EF         [ 7] 1342 	and	a, #0xef
   06F5 FD 77 00      [19] 1343 	ld	0 (iy), a
   06F8 FD 7E 01      [19] 1344 	ld	a, 1 (iy)
   06FB FD 77 01      [19] 1345 	ld	1 (iy), a
   06FE                    1346 00102$:
                     06FE  1347 	C$printf.c$292$1_0$59	= .
                           1348 	.globl	C$printf.c$292$1_0$59
                           1349 ;printf.c:292: if (!(flags & FLAGS_PRECISION) || value) {
   06FE 21 3E 00      [10] 1350 	ld	hl, #61+1
   0701 39            [11] 1351 	add	hl, sp
   0702 7E            [ 7] 1352 	ld	a, (hl)
   0703 E6 04         [ 7] 1353 	and	a, #0x04
   0705 28 15         [12] 1354 	jr	Z,00121$
   0707 FD 21 30 00   [14] 1355 	ld	iy, #48
   070B FD 39         [15] 1356 	add	iy, sp
   070D FD 7E 03      [19] 1357 	ld	a, 3 (iy)
   0710 FD B6 02      [19] 1358 	or	a, 2 (iy)
   0713 FD B6 01      [19] 1359 	or	a, 1 (iy)
   0716 FD B6 00      [19] 1360 	or	a, 0 (iy)
   0719 CAr11r08      [10] 1361 	jp	Z, 00108$
                     071C  1362 	C$printf.c$293$1_0$59	= .
                           1363 	.globl	C$printf.c$293$1_0$59
                           1364 ;printf.c:293: do {
   071C                    1365 00121$:
   071C 21 3D 00      [10] 1366 	ld	hl, #61+0
   071F 39            [11] 1367 	add	hl, sp
   0720 7E            [ 7] 1368 	ld	a, (hl)
   0721 E6 20         [ 7] 1369 	and	a, #0x20
   0723 FD 21 20 00   [14] 1370 	ld	iy, #32
   0727 FD 39         [15] 1371 	add	iy, sp
   0729 FD 77 00      [19] 1372 	ld	0 (iy), a
   072C FD 36 01 00   [19] 1373 	ld	1 (iy), #0x00
   0730 21 00 00      [10] 1374 	ld	hl, #0
   0733 39            [11] 1375 	add	hl, sp
   0734 FD 23         [10] 1376 	inc	iy
   0736 FD 23         [10] 1377 	inc	iy
   0738 FD 75 00      [19] 1378 	ld	0 (iy), l
   073B FD 74 01      [19] 1379 	ld	1 (iy), h
   073E 01 00 00      [10] 1380 	ld	bc, #0x0000
   0741                    1381 00104$:
                     0741  1382 	C$printf.c$294$1_0$59	= .
                           1383 	.globl	C$printf.c$294$1_0$59
                           1384 ;printf.c:294: const char digit = (char)(value % base);
   0741 C5            [11] 1385 	push	bc
   0742 FD 21 37 00   [14] 1386 	ld	iy, #55
   0746 FD 39         [15] 1387 	add	iy, sp
   0748 FD 6E 02      [19] 1388 	ld	l, 2 (iy)
   074B FD 66 03      [19] 1389 	ld	h, 3 (iy)
   074E E5            [11] 1390 	push	hl
   074F FD 6E 00      [19] 1391 	ld	l, 0 (iy)
   0752 FD 66 01      [19] 1392 	ld	h, 1 (iy)
   0755 E5            [11] 1393 	push	hl
   0756 FD 21 36 00   [14] 1394 	ld	iy, #54
   075A FD 39         [15] 1395 	add	iy, sp
   075C FD 6E 02      [19] 1396 	ld	l, 2 (iy)
   075F FD 66 03      [19] 1397 	ld	h, 3 (iy)
   0762 E5            [11] 1398 	push	hl
   0763 FD 6E 00      [19] 1399 	ld	l, 0 (iy)
   0766 FD 66 01      [19] 1400 	ld	h, 1 (iy)
   0769 E5            [11] 1401 	push	hl
   076A CDr00r00      [17] 1402 	call	__modulong
   076D F1            [10] 1403 	pop	af
   076E F1            [10] 1404 	pop	af
   076F F1            [10] 1405 	pop	af
   0770 F1            [10] 1406 	pop	af
   0771 EB            [ 4] 1407 	ex	de, hl
   0772 C1            [10] 1408 	pop	bc
                     0773  1409 	C$printf.c$295$3_0$62	= .
                           1410 	.globl	C$printf.c$295$3_0$62
                           1411 ;printf.c:295: buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
   0773 21 24 00      [10] 1412 	ld	hl, #36
   0776 39            [11] 1413 	add	hl, sp
   0777 FD 21 22 00   [14] 1414 	ld	iy, #34
   077B FD 39         [15] 1415 	add	iy, sp
   077D FD 7E 00      [19] 1416 	ld	a, 0 (iy)
   0780 81            [ 4] 1417 	add	a, c
   0781 77            [ 7] 1418 	ld	(hl), a
   0782 FD 7E 01      [19] 1419 	ld	a, 1 (iy)
   0785 88            [ 4] 1420 	adc	a, b
   0786 23            [ 6] 1421 	inc	hl
   0787 77            [ 7] 1422 	ld	(hl), a
   0788 03            [ 6] 1423 	inc	bc
   0789 7B            [ 4] 1424 	ld	a, e
   078A EE 80         [ 7] 1425 	xor	a, #0x80
   078C D6 8A         [ 7] 1426 	sub	a, #0x8a
   078E 30 05         [12] 1427 	jr	NC,00112$
   0790 7B            [ 4] 1428 	ld	a, e
   0791 C6 30         [ 7] 1429 	add	a, #0x30
   0793 18 15         [12] 1430 	jr	00113$
   0795                    1431 00112$:
   0795 21 21 00      [10] 1432 	ld	hl, #32+1
   0798 39            [11] 1433 	add	hl, sp
   0799 7E            [ 7] 1434 	ld	a, (hl)
   079A 2B            [ 6] 1435 	dec	hl
   079B B6            [ 7] 1436 	or	a, (hl)
   079C 28 05         [12] 1437 	jr	Z,00114$
   079E 21 41 00      [10] 1438 	ld	hl, #0x0041
   07A1 18 03         [12] 1439 	jr	00115$
   07A3                    1440 00114$:
   07A3 21 61 00      [10] 1441 	ld	hl, #0x0061
   07A6                    1442 00115$:
   07A6 7D            [ 4] 1443 	ld	a, l
   07A7 83            [ 4] 1444 	add	a, e
   07A8 C6 F6         [ 7] 1445 	add	a, #0xf6
   07AA                    1446 00113$:
   07AA FD 21 24 00   [14] 1447 	ld	iy, #36
   07AE FD 39         [15] 1448 	add	iy, sp
   07B0 FD 6E 00      [19] 1449 	ld	l, 0 (iy)
   07B3 FD 66 01      [19] 1450 	ld	h, 1 (iy)
   07B6 77            [ 7] 1451 	ld	(hl), a
                     07B7  1452 	C$printf.c$296$1_0$59	= .
                           1453 	.globl	C$printf.c$296$1_0$59
                           1454 ;printf.c:296: value /= base;
   07B7 C5            [11] 1455 	push	bc
   07B8 FD 21 37 00   [14] 1456 	ld	iy, #55
   07BC FD 39         [15] 1457 	add	iy, sp
   07BE FD 6E 02      [19] 1458 	ld	l, 2 (iy)
   07C1 FD 66 03      [19] 1459 	ld	h, 3 (iy)
   07C4 E5            [11] 1460 	push	hl
   07C5 FD 6E 00      [19] 1461 	ld	l, 0 (iy)
   07C8 FD 66 01      [19] 1462 	ld	h, 1 (iy)
   07CB E5            [11] 1463 	push	hl
   07CC FD 21 36 00   [14] 1464 	ld	iy, #54
   07D0 FD 39         [15] 1465 	add	iy, sp
   07D2 FD 6E 02      [19] 1466 	ld	l, 2 (iy)
   07D5 FD 66 03      [19] 1467 	ld	h, 3 (iy)
   07D8 E5            [11] 1468 	push	hl
   07D9 FD 6E 00      [19] 1469 	ld	l, 0 (iy)
   07DC FD 66 01      [19] 1470 	ld	h, 1 (iy)
   07DF E5            [11] 1471 	push	hl
   07E0 CDr00r00      [17] 1472 	call	__divulong
   07E3 F1            [10] 1473 	pop	af
   07E4 F1            [10] 1474 	pop	af
   07E5 F1            [10] 1475 	pop	af
   07E6 F1            [10] 1476 	pop	af
   07E7 C1            [10] 1477 	pop	bc
   07E8 FD 21 30 00   [14] 1478 	ld	iy, #48
   07EC FD 39         [15] 1479 	add	iy, sp
   07EE FD 75 00      [19] 1480 	ld	0 (iy), l
   07F1 FD 74 01      [19] 1481 	ld	1 (iy), h
   07F4 FD 73 02      [19] 1482 	ld	2 (iy), e
   07F7 FD 72 03      [19] 1483 	ld	3 (iy), d
                     07FA  1484 	C$printf.c$297$2_0$61	= .
                           1485 	.globl	C$printf.c$297$2_0$61
                           1486 ;printf.c:297: } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
   07FA FD 7E 03      [19] 1487 	ld	a, 3 (iy)
   07FD FD B6 02      [19] 1488 	or	a, 2 (iy)
   0800 FD B6 01      [19] 1489 	or	a, 1 (iy)
   0803 FD B6 00      [19] 1490 	or	a, 0 (iy)
   0806 28 09         [12] 1491 	jr	Z,00122$
   0808 79            [ 4] 1492 	ld	a, c
   0809 D6 20         [ 7] 1493 	sub	a, #0x20
   080B 78            [ 4] 1494 	ld	a, b
   080C DE 00         [ 7] 1495 	sbc	a, #0x00
   080E DAr41r07      [10] 1496 	jp	C, 00104$
   0811                    1497 00122$:
   0811                    1498 00108$:
                     0811  1499 	C$printf.c$300$1_0$59	= .
                           1500 	.globl	C$printf.c$300$1_0$59
                           1501 ;printf.c:300: return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
   0811 21 35 00      [10] 1502 	ld	hl, #53
   0814 39            [11] 1503 	add	hl, sp
   0815 5E            [ 7] 1504 	ld	e, (hl)
   0816 23            [ 6] 1505 	inc	hl
   0817 56            [ 7] 1506 	ld	d, (hl)
   0818 21 00 00      [10] 1507 	ld	hl, #0
   081B 39            [11] 1508 	add	hl, sp
   081C FD 21 24 00   [14] 1509 	ld	iy, #36
   0820 FD 39         [15] 1510 	add	iy, sp
   0822 FD 75 00      [19] 1511 	ld	0 (iy), l
   0825 FD 74 01      [19] 1512 	ld	1 (iy), h
   0828 FD 21 3D 00   [14] 1513 	ld	iy, #61
   082C FD 39         [15] 1514 	add	iy, sp
   082E FD 6E 00      [19] 1515 	ld	l, 0 (iy)
   0831 FD 66 01      [19] 1516 	ld	h, 1 (iy)
   0834 E5            [11] 1517 	push	hl
   0835 FD 2B         [10] 1518 	dec	iy
   0837 FD 2B         [10] 1519 	dec	iy
   0839 FD 6E 00      [19] 1520 	ld	l, 0 (iy)
   083C FD 66 01      [19] 1521 	ld	h, 1 (iy)
   083F E5            [11] 1522 	push	hl
   0840 FD 2B         [10] 1523 	dec	iy
   0842 FD 2B         [10] 1524 	dec	iy
   0844 FD 6E 00      [19] 1525 	ld	l, 0 (iy)
   0847 FD 66 01      [19] 1526 	ld	h, 1 (iy)
   084A E5            [11] 1527 	push	hl
   084B D5            [11] 1528 	push	de
   084C 21 3C 00      [10] 1529 	ld	hl, #60+0
   084F 39            [11] 1530 	add	hl, sp
   0850 7E            [ 7] 1531 	ld	a, (hl)
   0851 F5            [11] 1532 	push	af
   0852 33            [ 6] 1533 	inc	sp
   0853 C5            [11] 1534 	push	bc
   0854 21 2F 00      [10] 1535 	ld	hl, #47
   0857 39            [11] 1536 	add	hl, sp
   0858 4E            [ 7] 1537 	ld	c, (hl)
   0859 23            [ 6] 1538 	inc	hl
   085A 46            [ 7] 1539 	ld	b, (hl)
   085B C5            [11] 1540 	push	bc
   085C FD 21 3B 00   [14] 1541 	ld	iy, #59
   0860 FD 39         [15] 1542 	add	iy, sp
   0862 FD 6E 00      [19] 1543 	ld	l, 0 (iy)
   0865 FD 66 01      [19] 1544 	ld	h, 1 (iy)
   0868 E5            [11] 1545 	push	hl
   0869 FD 2B         [10] 1546 	dec	iy
   086B FD 2B         [10] 1547 	dec	iy
   086D FD 6E 00      [19] 1548 	ld	l, 0 (iy)
   0870 FD 66 01      [19] 1549 	ld	h, 1 (iy)
   0873 E5            [11] 1550 	push	hl
   0874 FD 2B         [10] 1551 	dec	iy
   0876 FD 2B         [10] 1552 	dec	iy
   0878 FD 6E 00      [19] 1553 	ld	l, 0 (iy)
   087B FD 66 01      [19] 1554 	ld	h, 1 (iy)
   087E E5            [11] 1555 	push	hl
   087F FD 2B         [10] 1556 	dec	iy
   0881 FD 2B         [10] 1557 	dec	iy
   0883 FD 6E 00      [19] 1558 	ld	l, 0 (iy)
   0886 FD 66 01      [19] 1559 	ld	h, 1 (iy)
   0889 E5            [11] 1560 	push	hl
   088A CDr92r03      [17] 1561 	call	__ntoa_format
   088D FD 21 15 00   [14] 1562 	ld	iy, #21
   0891 FD 39         [15] 1563 	add	iy, sp
   0893 FD F9         [10] 1564 	ld	sp, iy
                     0895  1565 	C$printf.c$301$1_0$59	= .
                           1566 	.globl	C$printf.c$301$1_0$59
                           1567 ;printf.c:301: }
   0895 FD 21 26 00   [14] 1568 	ld	iy, #38
   0899 FD 39         [15] 1569 	add	iy, sp
   089B FD F9         [10] 1570 	ld	sp, iy
                     089D  1571 	C$printf.c$301$1_0$59	= .
                           1572 	.globl	C$printf.c$301$1_0$59
                     089D  1573 	XFprintf$_ntoa_long$0$0	= .
                           1574 	.globl	XFprintf$_ntoa_long$0$0
   089D C9            [10] 1575 	ret
                     089E  1576 	Fprintf$_vsnprintf$0$0	= .
                           1577 	.globl	Fprintf$_vsnprintf$0$0
                     089E  1578 	C$printf.c$577$1_0$64	= .
                           1579 	.globl	C$printf.c$577$1_0$64
                           1580 ;printf.c:577: static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
                           1581 ;	---------------------------------
                           1582 ; Function _vsnprintf
                           1583 ; ---------------------------------
   089E                    1584 __vsnprintf:
   089E 21 EC FF      [10] 1585 	ld	hl, #-20
   08A1 39            [11] 1586 	add	hl, sp
   08A2 F9            [ 6] 1587 	ld	sp, hl
                     08A3  1588 	C$printf.c$580$2_0$64	= .
                           1589 	.globl	C$printf.c$580$2_0$64
                           1590 ;printf.c:580: size_t idx = 0U;
   08A3 AF            [ 4] 1591 	xor	a, a
   08A4 FD 21 10 00   [14] 1592 	ld	iy, #16
   08A8 FD 39         [15] 1593 	add	iy, sp
   08AA FD 77 00      [19] 1594 	ld	0 (iy), a
   08AD FD 77 01      [19] 1595 	ld	1 (iy), a
                     08B0  1596 	C$printf.c$582$1_0$64	= .
                           1597 	.globl	C$printf.c$582$1_0$64
                           1598 ;printf.c:582: if (!buffer) {
   08B0 FD 21 18 00   [14] 1599 	ld	iy, #24
   08B4 FD 39         [15] 1600 	add	iy, sp
   08B6 FD 7E 01      [19] 1601 	ld	a, 1 (iy)
   08B9 FD B6 00      [19] 1602 	or	a, 0 (iy)
   08BC 20 0C         [12] 1603 	jr	NZ,00215$
                     08BE  1604 	C$printf.c$584$2_0$65	= .
                           1605 	.globl	C$printf.c$584$2_0$65
                           1606 ;printf.c:584: out = _out_null;
   08BE FD 2B         [10] 1607 	dec	iy
   08C0 FD 2B         [10] 1608 	dec	iy
   08C2 FD 36 00r2F   [19] 1609 	ld	0 (iy), #<(__out_null)
   08C6 FD 36 01s00   [19] 1610 	ld	1 (iy), #>(__out_null)
                     08CA  1611 	C$printf.c$587$1_0$64	= .
                           1612 	.globl	C$printf.c$587$1_0$64
                           1613 ;printf.c:587: while (*format)
   08CA                    1614 00215$:
   08CA 21 1C 00      [10] 1615 	ld	hl, #28+0
   08CD 39            [11] 1616 	add	hl, sp
   08CE 7E            [ 7] 1617 	ld	a, (hl)
   08CF FD 21 0E 00   [14] 1618 	ld	iy, #14
   08D3 FD 39         [15] 1619 	add	iy, sp
   08D5 FD 77 00      [19] 1620 	ld	0 (iy), a
   08D8 21 1D 00      [10] 1621 	ld	hl, #28+1
   08DB 39            [11] 1622 	add	hl, sp
   08DC 7E            [ 7] 1623 	ld	a, (hl)
   08DD FD 21 0E 00   [14] 1624 	ld	iy, #14
   08E1 FD 39         [15] 1625 	add	iy, sp
   08E3 FD 77 01      [19] 1626 	ld	1 (iy), a
   08E6 FD 6E 00      [19] 1627 	ld	l, 0 (iy)
   08E9 FD 66 01      [19] 1628 	ld	h, 1 (iy)
   08EC 7E            [ 7] 1629 	ld	a, (hl)
   08ED FD 21 13 00   [14] 1630 	ld	iy, #19
   08F1 FD 39         [15] 1631 	add	iy, sp
   08F3 FD 77 00      [19] 1632 	ld	0 (iy), a
   08F6 FD 7E 00      [19] 1633 	ld	a, 0 (iy)
   08F9 B7            [ 4] 1634 	or	a, a
   08FA CArBEr1A      [10] 1635 	jp	Z, 00217$
                     08FD  1636 	C$printf.c$590$2_0$66	= .
                           1637 	.globl	C$printf.c$590$2_0$66
                           1638 ;printf.c:590: if (*format != '%') {
   08FD FD 7E 00      [19] 1639 	ld	a, 0 (iy)
   0900 D6 25         [ 7] 1640 	sub	a, #0x25
   0902 28 5E         [12] 1641 	jr	Z,00104$
                     0904  1642 	C$printf.c$592$3_0$67	= .
                           1643 	.globl	C$printf.c$592$3_0$67
                           1644 ;printf.c:592: out(*format, buffer, idx++, maxlen);
   0904 FD 2B         [10] 1645 	dec	iy
   0906 FD 2B         [10] 1646 	dec	iy
   0908 FD 2B         [10] 1647 	dec	iy
   090A FD 5E 00      [19] 1648 	ld	e, 0 (iy)
   090D FD 56 01      [19] 1649 	ld	d, 1 (iy)
   0910 FD 34 00      [23] 1650 	inc	0 (iy)
   0913 20 03         [12] 1651 	jr	NZ,00638$
   0915 FD 34 01      [23] 1652 	inc	1 (iy)
   0918                    1653 00638$:
   0918 FD 21 18 00   [14] 1654 	ld	iy, #24
   091C FD 39         [15] 1655 	add	iy, sp
   091E FD 4E 00      [19] 1656 	ld	c, 0 (iy)
   0921 FD 46 01      [19] 1657 	ld	b, 1 (iy)
   0924 FD 23         [10] 1658 	inc	iy
   0926 FD 23         [10] 1659 	inc	iy
   0928 FD 6E 00      [19] 1660 	ld	l, 0 (iy)
   092B FD 66 01      [19] 1661 	ld	h, 1 (iy)
   092E E5            [11] 1662 	push	hl
   092F D5            [11] 1663 	push	de
   0930 C5            [11] 1664 	push	bc
   0931 FD 21 19 00   [14] 1665 	ld	iy, #25
   0935 FD 39         [15] 1666 	add	iy, sp
   0937 FD 7E 00      [19] 1667 	ld	a, 0 (iy)
   093A F5            [11] 1668 	push	af
   093B 33            [ 6] 1669 	inc	sp
   093C FD 23         [10] 1670 	inc	iy
   093E FD 23         [10] 1671 	inc	iy
   0940 FD 23         [10] 1672 	inc	iy
   0942 FD 6E 00      [19] 1673 	ld	l, 0 (iy)
   0945 FD 66 01      [19] 1674 	ld	h, 1 (iy)
   0948 CDr00r00      [17] 1675 	call	___sdcc_call_hl
   094B 21 07 00      [10] 1676 	ld	hl, #7
   094E 39            [11] 1677 	add	hl, sp
   094F F9            [ 6] 1678 	ld	sp, hl
                     0950  1679 	C$printf.c$593$3_0$67	= .
                           1680 	.globl	C$printf.c$593$3_0$67
                           1681 ;printf.c:593: format++;
   0950 FD 21 1C 00   [14] 1682 	ld	iy, #28
   0954 FD 39         [15] 1683 	add	iy, sp
   0956 FD 34 00      [23] 1684 	inc	0 (iy)
   0959 C2rCAr08      [10] 1685 	jp	NZ,00215$
   095C FD 34 01      [23] 1686 	inc	1 (iy)
                     095F  1687 	C$printf.c$594$3_0$67	= .
                           1688 	.globl	C$printf.c$594$3_0$67
                           1689 ;printf.c:594: continue;
   095F C3rCAr08      [10] 1690 	jp	00215$
   0962                    1691 00104$:
                     0962  1692 	C$printf.c$598$3_0$68	= .
                           1693 	.globl	C$printf.c$598$3_0$68
                           1694 ;printf.c:598: format++;
   0962 21 1C 00      [10] 1695 	ld	hl, #28
   0965 39            [11] 1696 	add	hl, sp
   0966 FD 21 0E 00   [14] 1697 	ld	iy, #14
   096A FD 39         [15] 1698 	add	iy, sp
   096C FD 7E 00      [19] 1699 	ld	a, 0 (iy)
   096F C6 01         [ 7] 1700 	add	a, #0x01
   0971 77            [ 7] 1701 	ld	(hl), a
   0972 FD 7E 01      [19] 1702 	ld	a, 1 (iy)
   0975 CE 00         [ 7] 1703 	adc	a, #0x00
   0977 23            [ 6] 1704 	inc	hl
   0978 77            [ 7] 1705 	ld	(hl), a
                     0979  1706 	C$printf.c$602$2_0$66	= .
                           1707 	.globl	C$printf.c$602$2_0$66
                           1708 ;printf.c:602: flags = 0U;
   0979 AF            [ 4] 1709 	xor	a, a
   097A FD 21 04 00   [14] 1710 	ld	iy, #4
   097E FD 39         [15] 1711 	add	iy, sp
   0980 FD 77 00      [19] 1712 	ld	0 (iy), a
   0983 FD 77 01      [19] 1713 	ld	1 (iy), a
                     0986  1714 	C$printf.c$603$2_0$66	= .
                           1715 	.globl	C$printf.c$603$2_0$66
                           1716 ;printf.c:603: do {
   0986                    1717 00113$:
                     0986  1718 	C$printf.c$604$3_0$69	= .
                           1719 	.globl	C$printf.c$604$3_0$69
                           1720 ;printf.c:604: switch (*format) {
   0986 21 1C 00      [10] 1721 	ld	hl, #28+0
   0989 39            [11] 1722 	add	hl, sp
   098A 7E            [ 7] 1723 	ld	a, (hl)
   098B FD 21 12 00   [14] 1724 	ld	iy, #18
   098F FD 39         [15] 1725 	add	iy, sp
   0991 FD 77 00      [19] 1726 	ld	0 (iy), a
   0994 21 1D 00      [10] 1727 	ld	hl, #28+1
   0997 39            [11] 1728 	add	hl, sp
   0998 7E            [ 7] 1729 	ld	a, (hl)
   0999 FD 21 12 00   [14] 1730 	ld	iy, #18
   099D FD 39         [15] 1731 	add	iy, sp
   099F FD 77 01      [19] 1732 	ld	1 (iy), a
   09A2 FD 6E 00      [19] 1733 	ld	l, 0 (iy)
   09A5 FD 66 01      [19] 1734 	ld	h, 1 (iy)
   09A8 7E            [ 7] 1735 	ld	a, (hl)
   09A9 FE 20         [ 7] 1736 	cp	a,#0x20
   09AB CAr61r0A      [10] 1737 	jp	Z,00109$
   09AE FE 23         [ 7] 1738 	cp	a,#0x23
   09B0 CAr96r0A      [10] 1739 	jp	Z,00110$
   09B3 FE 2B         [ 7] 1740 	cp	a,#0x2b
   09B5 28 75         [12] 1741 	jr	Z,00108$
   09B7 FE 2D         [ 7] 1742 	cp	a,#0x2d
   09B9 28 3B         [12] 1743 	jr	Z,00107$
   09BB D6 30         [ 7] 1744 	sub	a, #0x30
   09BD C2rCBr0A      [10] 1745 	jp	NZ,00111$
                     09C0  1746 	C$printf.c$605$4_0$70	= .
                           1747 	.globl	C$printf.c$605$4_0$70
                           1748 ;printf.c:605: case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
   09C0 FD 21 04 00   [14] 1749 	ld	iy, #4
   09C4 FD 39         [15] 1750 	add	iy, sp
   09C6 FD 7E 00      [19] 1751 	ld	a, 0 (iy)
   09C9 F6 01         [ 7] 1752 	or	a, #0x01
   09CB FD 77 00      [19] 1753 	ld	0 (iy), a
   09CE FD 7E 01      [19] 1754 	ld	a, 1 (iy)
   09D1 FD 77 01      [19] 1755 	ld	1 (iy), a
   09D4 21 1C 00      [10] 1756 	ld	hl, #28
   09D7 39            [11] 1757 	add	hl, sp
   09D8 FD 21 12 00   [14] 1758 	ld	iy, #18
   09DC FD 39         [15] 1759 	add	iy, sp
   09DE FD 7E 00      [19] 1760 	ld	a, 0 (iy)
   09E1 C6 01         [ 7] 1761 	add	a, #0x01
   09E3 77            [ 7] 1762 	ld	(hl), a
   09E4 FD 7E 01      [19] 1763 	ld	a, 1 (iy)
   09E7 CE 00         [ 7] 1764 	adc	a, #0x00
   09E9 23            [ 6] 1765 	inc	hl
   09EA 77            [ 7] 1766 	ld	(hl), a
   09EB FD 36 00 01   [19] 1767 	ld	0 (iy), #0x01
   09EF AF            [ 4] 1768 	xor	a, a
   09F0 FD 77 01      [19] 1769 	ld	1 (iy), a
   09F3 C3rD8r0A      [10] 1770 	jp	00114$
                     09F6  1771 	C$printf.c$606$4_0$70	= .
                           1772 	.globl	C$printf.c$606$4_0$70
                           1773 ;printf.c:606: case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
   09F6                    1774 00107$:
   09F6 FD 21 04 00   [14] 1775 	ld	iy, #4
   09FA FD 39         [15] 1776 	add	iy, sp
   09FC FD 7E 00      [19] 1777 	ld	a, 0 (iy)
   09FF F6 02         [ 7] 1778 	or	a, #0x02
   0A01 FD 77 00      [19] 1779 	ld	0 (iy), a
   0A04 FD 7E 01      [19] 1780 	ld	a, 1 (iy)
   0A07 FD 77 01      [19] 1781 	ld	1 (iy), a
   0A0A 21 1C 00      [10] 1782 	ld	hl, #28
   0A0D 39            [11] 1783 	add	hl, sp
   0A0E FD 21 12 00   [14] 1784 	ld	iy, #18
   0A12 FD 39         [15] 1785 	add	iy, sp
   0A14 FD 7E 00      [19] 1786 	ld	a, 0 (iy)
   0A17 C6 01         [ 7] 1787 	add	a, #0x01
   0A19 77            [ 7] 1788 	ld	(hl), a
   0A1A FD 7E 01      [19] 1789 	ld	a, 1 (iy)
   0A1D CE 00         [ 7] 1790 	adc	a, #0x00
   0A1F 23            [ 6] 1791 	inc	hl
   0A20 77            [ 7] 1792 	ld	(hl), a
   0A21 FD 36 00 01   [19] 1793 	ld	0 (iy), #0x01
   0A25 AF            [ 4] 1794 	xor	a, a
   0A26 FD 77 01      [19] 1795 	ld	1 (iy), a
   0A29 C3rD8r0A      [10] 1796 	jp	00114$
                     0A2C  1797 	C$printf.c$607$4_0$70	= .
                           1798 	.globl	C$printf.c$607$4_0$70
                           1799 ;printf.c:607: case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
   0A2C                    1800 00108$:
   0A2C FD 21 04 00   [14] 1801 	ld	iy, #4
   0A30 FD 39         [15] 1802 	add	iy, sp
   0A32 FD 7E 00      [19] 1803 	ld	a, 0 (iy)
   0A35 F6 04         [ 7] 1804 	or	a, #0x04
   0A37 FD 77 00      [19] 1805 	ld	0 (iy), a
   0A3A FD 7E 01      [19] 1806 	ld	a, 1 (iy)
   0A3D FD 77 01      [19] 1807 	ld	1 (iy), a
   0A40 21 1C 00      [10] 1808 	ld	hl, #28
   0A43 39            [11] 1809 	add	hl, sp
   0A44 FD 21 12 00   [14] 1810 	ld	iy, #18
   0A48 FD 39         [15] 1811 	add	iy, sp
   0A4A FD 7E 00      [19] 1812 	ld	a, 0 (iy)
   0A4D C6 01         [ 7] 1813 	add	a, #0x01
   0A4F 77            [ 7] 1814 	ld	(hl), a
   0A50 FD 7E 01      [19] 1815 	ld	a, 1 (iy)
   0A53 CE 00         [ 7] 1816 	adc	a, #0x00
   0A55 23            [ 6] 1817 	inc	hl
   0A56 77            [ 7] 1818 	ld	(hl), a
   0A57 FD 36 00 01   [19] 1819 	ld	0 (iy), #0x01
   0A5B AF            [ 4] 1820 	xor	a, a
   0A5C FD 77 01      [19] 1821 	ld	1 (iy), a
   0A5F 18 77         [12] 1822 	jr	00114$
                     0A61  1823 	C$printf.c$608$4_0$70	= .
                           1824 	.globl	C$printf.c$608$4_0$70
                           1825 ;printf.c:608: case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
   0A61                    1826 00109$:
   0A61 FD 21 04 00   [14] 1827 	ld	iy, #4
   0A65 FD 39         [15] 1828 	add	iy, sp
   0A67 FD 7E 00      [19] 1829 	ld	a, 0 (iy)
   0A6A F6 08         [ 7] 1830 	or	a, #0x08
   0A6C FD 77 00      [19] 1831 	ld	0 (iy), a
   0A6F FD 7E 01      [19] 1832 	ld	a, 1 (iy)
   0A72 FD 77 01      [19] 1833 	ld	1 (iy), a
   0A75 21 1C 00      [10] 1834 	ld	hl, #28
   0A78 39            [11] 1835 	add	hl, sp
   0A79 FD 21 12 00   [14] 1836 	ld	iy, #18
   0A7D FD 39         [15] 1837 	add	iy, sp
   0A7F FD 7E 00      [19] 1838 	ld	a, 0 (iy)
   0A82 C6 01         [ 7] 1839 	add	a, #0x01
   0A84 77            [ 7] 1840 	ld	(hl), a
   0A85 FD 7E 01      [19] 1841 	ld	a, 1 (iy)
   0A88 CE 00         [ 7] 1842 	adc	a, #0x00
   0A8A 23            [ 6] 1843 	inc	hl
   0A8B 77            [ 7] 1844 	ld	(hl), a
   0A8C FD 36 00 01   [19] 1845 	ld	0 (iy), #0x01
   0A90 AF            [ 4] 1846 	xor	a, a
   0A91 FD 77 01      [19] 1847 	ld	1 (iy), a
   0A94 18 42         [12] 1848 	jr	00114$
                     0A96  1849 	C$printf.c$609$4_0$70	= .
                           1850 	.globl	C$printf.c$609$4_0$70
                           1851 ;printf.c:609: case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
   0A96                    1852 00110$:
   0A96 FD 21 04 00   [14] 1853 	ld	iy, #4
   0A9A FD 39         [15] 1854 	add	iy, sp
   0A9C FD 7E 00      [19] 1855 	ld	a, 0 (iy)
   0A9F F6 10         [ 7] 1856 	or	a, #0x10
   0AA1 FD 77 00      [19] 1857 	ld	0 (iy), a
   0AA4 FD 7E 01      [19] 1858 	ld	a, 1 (iy)
   0AA7 FD 77 01      [19] 1859 	ld	1 (iy), a
   0AAA 21 1C 00      [10] 1860 	ld	hl, #28
   0AAD 39            [11] 1861 	add	hl, sp
   0AAE FD 21 12 00   [14] 1862 	ld	iy, #18
   0AB2 FD 39         [15] 1863 	add	iy, sp
   0AB4 FD 7E 00      [19] 1864 	ld	a, 0 (iy)
   0AB7 C6 01         [ 7] 1865 	add	a, #0x01
   0AB9 77            [ 7] 1866 	ld	(hl), a
   0ABA FD 7E 01      [19] 1867 	ld	a, 1 (iy)
   0ABD CE 00         [ 7] 1868 	adc	a, #0x00
   0ABF 23            [ 6] 1869 	inc	hl
   0AC0 77            [ 7] 1870 	ld	(hl), a
   0AC1 FD 36 00 01   [19] 1871 	ld	0 (iy), #0x01
   0AC5 AF            [ 4] 1872 	xor	a, a
   0AC6 FD 77 01      [19] 1873 	ld	1 (iy), a
   0AC9 18 0D         [12] 1874 	jr	00114$
                     0ACB  1875 	C$printf.c$610$4_0$70	= .
                           1876 	.globl	C$printf.c$610$4_0$70
                           1877 ;printf.c:610: default :                                   n = 0U; break;
   0ACB                    1878 00111$:
   0ACB AF            [ 4] 1879 	xor	a, a
   0ACC FD 21 12 00   [14] 1880 	ld	iy, #18
   0AD0 FD 39         [15] 1881 	add	iy, sp
   0AD2 FD 77 00      [19] 1882 	ld	0 (iy), a
   0AD5 FD 77 01      [19] 1883 	ld	1 (iy), a
                     0AD8  1884 	C$printf.c$611$2_0$66	= .
                           1885 	.globl	C$printf.c$611$2_0$66
                           1886 ;printf.c:611: }
   0AD8                    1887 00114$:
                     0AD8  1888 	C$printf.c$612$2_0$66	= .
                           1889 	.globl	C$printf.c$612$2_0$66
                           1890 ;printf.c:612: } while (n);
   0AD8 21 13 00      [10] 1891 	ld	hl, #18+1
   0ADB 39            [11] 1892 	add	hl, sp
   0ADC 7E            [ 7] 1893 	ld	a, (hl)
   0ADD 2B            [ 6] 1894 	dec	hl
   0ADE B6            [ 7] 1895 	or	a, (hl)
   0ADF C2r86r09      [10] 1896 	jp	NZ, 00113$
                     0AE2  1897 	C$printf.c$615$2_0$66	= .
                           1898 	.globl	C$printf.c$615$2_0$66
                           1899 ;printf.c:615: width = 0U;
   0AE2 AF            [ 4] 1900 	xor	a, a
   0AE3 FD 21 06 00   [14] 1901 	ld	iy, #6
   0AE7 FD 39         [15] 1902 	add	iy, sp
   0AE9 FD 77 00      [19] 1903 	ld	0 (iy), a
   0AEC FD 77 01      [19] 1904 	ld	1 (iy), a
                     0AEF  1905 	C$printf.c$587$1_0$64	= .
                           1906 	.globl	C$printf.c$587$1_0$64
                           1907 ;printf.c:587: while (*format)
   0AEF 21 1C 00      [10] 1908 	ld	hl, #28+0
   0AF2 39            [11] 1909 	add	hl, sp
   0AF3 7E            [ 7] 1910 	ld	a, (hl)
   0AF4 FD 21 0E 00   [14] 1911 	ld	iy, #14
   0AF8 FD 39         [15] 1912 	add	iy, sp
   0AFA FD 77 00      [19] 1913 	ld	0 (iy), a
   0AFD 21 1D 00      [10] 1914 	ld	hl, #28+1
   0B00 39            [11] 1915 	add	hl, sp
   0B01 7E            [ 7] 1916 	ld	a, (hl)
   0B02 FD 21 0E 00   [14] 1917 	ld	iy, #14
   0B06 FD 39         [15] 1918 	add	iy, sp
   0B08 FD 77 01      [19] 1919 	ld	1 (iy), a
                     0B0B  1920 	C$printf.c$616$1_0$64	= .
                           1921 	.globl	C$printf.c$616$1_0$64
                           1922 ;printf.c:616: if (_is_digit(*format)) {
   0B0B FD 6E 00      [19] 1923 	ld	l, 0 (iy)
   0B0E FD 66 01      [19] 1924 	ld	h, 1 (iy)
   0B11 7E            [ 7] 1925 	ld	a, (hl)
   0B12 FD 21 12 00   [14] 1926 	ld	iy, #18
   0B16 FD 39         [15] 1927 	add	iy, sp
   0B18 FD 77 00      [19] 1928 	ld	0 (iy), a
   0B1B FD 7E 00      [19] 1929 	ld	a, 0 (iy)
   0B1E FD 23         [10] 1930 	inc	iy
   0B20 FD 77 00      [19] 1931 	ld	0 (iy), a
                     0B23  1932 	C$printf.c$183$5_0$113	= .
                           1933 	.globl	C$printf.c$183$5_0$113
                           1934 ;printf.c:183: return (ch >= '0') && (ch <= '9');
   0B23 FD 7E 00      [19] 1935 	ld	a, 0 (iy)
   0B26 EE 80         [ 7] 1936 	xor	a, #0x80
   0B28 D6 B0         [ 7] 1937 	sub	a, #0xb0
   0B2A 38 53         [12] 1938 	jr	C,00122$
   0B2C 3E 39         [ 7] 1939 	ld	a, #0x39
   0B2E FD 96 00      [19] 1940 	sub	a, 0 (iy)
   0B31 E2r36r0B      [10] 1941 	jp	PO, 00646$
   0B34 EE 80         [ 7] 1942 	xor	a, #0x80
   0B36                    1943 00646$:
   0B36 FAr7Fr0B      [10] 1944 	jp	M, 00122$
                     0B39  1945 	C$printf.c$617$3_0$71	= .
                           1946 	.globl	C$printf.c$617$3_0$71
                           1947 ;printf.c:617: width = _atoi(&format);
   0B39 21 1C 00      [10] 1948 	ld	hl, #28
   0B3C 39            [11] 1949 	add	hl, sp
   0B3D FD 21 12 00   [14] 1950 	ld	iy, #18
   0B41 FD 39         [15] 1951 	add	iy, sp
   0B43 FD 75 00      [19] 1952 	ld	0 (iy), l
   0B46 FD 74 01      [19] 1953 	ld	1 (iy), h
   0B49 FD 6E 00      [19] 1954 	ld	l, 0 (iy)
   0B4C FD 66 01      [19] 1955 	ld	h, 1 (iy)
   0B4F E5            [11] 1956 	push	hl
   0B50 CDrCAr00      [17] 1957 	call	__atoi
   0B53 F1            [10] 1958 	pop	af
   0B54 FD 21 12 00   [14] 1959 	ld	iy, #18
   0B58 FD 39         [15] 1960 	add	iy, sp
   0B5A FD 75 00      [19] 1961 	ld	0 (iy), l
   0B5D FD 74 01      [19] 1962 	ld	1 (iy), h
   0B60 21 12 00      [10] 1963 	ld	hl, #18+0
   0B63 39            [11] 1964 	add	hl, sp
   0B64 7E            [ 7] 1965 	ld	a, (hl)
   0B65 FD 21 06 00   [14] 1966 	ld	iy, #6
   0B69 FD 39         [15] 1967 	add	iy, sp
   0B6B FD 77 00      [19] 1968 	ld	0 (iy), a
   0B6E 21 13 00      [10] 1969 	ld	hl, #18+1
   0B71 39            [11] 1970 	add	hl, sp
   0B72 7E            [ 7] 1971 	ld	a, (hl)
   0B73 FD 21 06 00   [14] 1972 	ld	iy, #6
   0B77 FD 39         [15] 1973 	add	iy, sp
   0B79 FD 77 01      [19] 1974 	ld	1 (iy), a
   0B7C C3r64r0C      [10] 1975 	jp	00123$
   0B7F                    1976 00122$:
                     0B7F  1977 	C$printf.c$619$2_0$66	= .
                           1978 	.globl	C$printf.c$619$2_0$66
                           1979 ;printf.c:619: else if (*format == '*') {
   0B7F 21 12 00      [10] 1980 	ld	hl, #18+0
   0B82 39            [11] 1981 	add	hl, sp
   0B83 7E            [ 7] 1982 	ld	a, (hl)
   0B84 D6 2A         [ 7] 1983 	sub	a, #0x2a
   0B86 C2r64r0C      [10] 1984 	jp	NZ,00123$
                     0B89  1985 	C$printf.c$620$3_0$72	= .
                           1986 	.globl	C$printf.c$620$3_0$72
                           1987 ;printf.c:620: const int w = va_arg(va, int);
   0B89 21 0E 00      [10] 1988 	ld	hl, #14
   0B8C 39            [11] 1989 	add	hl, sp
   0B8D FD 21 1E 00   [14] 1990 	ld	iy, #30
   0B91 FD 39         [15] 1991 	add	iy, sp
   0B93 FD 7E 00      [19] 1992 	ld	a, 0 (iy)
   0B96 C6 02         [ 7] 1993 	add	a, #0x02
   0B98 77            [ 7] 1994 	ld	(hl), a
   0B99 FD 7E 01      [19] 1995 	ld	a, 1 (iy)
   0B9C CE 00         [ 7] 1996 	adc	a, #0x00
   0B9E 23            [ 6] 1997 	inc	hl
   0B9F 77            [ 7] 1998 	ld	(hl), a
   0BA0 21 0E 00      [10] 1999 	ld	hl, #14+0
   0BA3 39            [11] 2000 	add	hl, sp
   0BA4 7E            [ 7] 2001 	ld	a, (hl)
   0BA5 FD 21 1E 00   [14] 2002 	ld	iy, #30
   0BA9 FD 39         [15] 2003 	add	iy, sp
   0BAB FD 77 00      [19] 2004 	ld	0 (iy), a
   0BAE 21 0F 00      [10] 2005 	ld	hl, #14+1
   0BB1 39            [11] 2006 	add	hl, sp
   0BB2 7E            [ 7] 2007 	ld	a, (hl)
   0BB3 FD 21 1E 00   [14] 2008 	ld	iy, #30
   0BB7 FD 39         [15] 2009 	add	iy, sp
   0BB9 FD 77 01      [19] 2010 	ld	1 (iy), a
   0BBC 21 12 00      [10] 2011 	ld	hl, #18
   0BBF 39            [11] 2012 	add	hl, sp
   0BC0 FD 21 0E 00   [14] 2013 	ld	iy, #14
   0BC4 FD 39         [15] 2014 	add	iy, sp
   0BC6 FD 7E 00      [19] 2015 	ld	a, 0 (iy)
   0BC9 C6 FE         [ 7] 2016 	add	a, #0xfe
   0BCB 77            [ 7] 2017 	ld	(hl), a
   0BCC FD 7E 01      [19] 2018 	ld	a, 1 (iy)
   0BCF CE FF         [ 7] 2019 	adc	a, #0xff
   0BD1 23            [ 6] 2020 	inc	hl
   0BD2 77            [ 7] 2021 	ld	(hl), a
   0BD3 21 12 00      [10] 2022 	ld	hl, #18
   0BD6 39            [11] 2023 	add	hl, sp
   0BD7 7E            [ 7] 2024 	ld	a, (hl)
   0BD8 23            [ 6] 2025 	inc	hl
   0BD9 66            [ 7] 2026 	ld	h, (hl)
   0BDA 6F            [ 4] 2027 	ld	l, a
   0BDB 7E            [ 7] 2028 	ld	a, (hl)
   0BDC FD 21 0E 00   [14] 2029 	ld	iy, #14
   0BE0 FD 39         [15] 2030 	add	iy, sp
   0BE2 FD 77 00      [19] 2031 	ld	0 (iy), a
   0BE5 23            [ 6] 2032 	inc	hl
   0BE6 7E            [ 7] 2033 	ld	a, (hl)
   0BE7 FD 77 01      [19] 2034 	ld	1 (iy), a
                     0BEA  2035 	C$printf.c$621$3_0$72	= .
                           2036 	.globl	C$printf.c$621$3_0$72
                           2037 ;printf.c:621: if (w < 0) {
   0BEA FD CB 01 7E   [20] 2038 	bit	7,1 (iy)
   0BEE 28 4A         [12] 2039 	jr	Z,00117$
                     0BF0  2040 	C$printf.c$622$4_0$73	= .
                           2041 	.globl	C$printf.c$622$4_0$73
                           2042 ;printf.c:622: flags |= FLAGS_LEFT;    // reverse padding
   0BF0 FD 21 04 00   [14] 2043 	ld	iy, #4
   0BF4 FD 39         [15] 2044 	add	iy, sp
   0BF6 FD 7E 00      [19] 2045 	ld	a, 0 (iy)
   0BF9 F6 02         [ 7] 2046 	or	a, #0x02
   0BFB FD 77 00      [19] 2047 	ld	0 (iy), a
   0BFE FD 7E 01      [19] 2048 	ld	a, 1 (iy)
   0C01 FD 77 01      [19] 2049 	ld	1 (iy), a
                     0C04  2050 	C$printf.c$623$4_0$73	= .
                           2051 	.globl	C$printf.c$623$4_0$73
                           2052 ;printf.c:623: width = (unsigned int)-w;
   0C04 21 0E 00      [10] 2053 	ld	hl, #14
   0C07 39            [11] 2054 	add	hl, sp
   0C08 FD 21 12 00   [14] 2055 	ld	iy, #18
   0C0C FD 39         [15] 2056 	add	iy, sp
   0C0E AF            [ 4] 2057 	xor	a, a
   0C0F 96            [ 7] 2058 	sub	a, (hl)
   0C10 FD 77 00      [19] 2059 	ld	0 (iy), a
   0C13 3E 00         [ 7] 2060 	ld	a, #0x00
   0C15 23            [ 6] 2061 	inc	hl
   0C16 9E            [ 7] 2062 	sbc	a, (hl)
   0C17 FD 23         [10] 2063 	inc	iy
   0C19 FD 77 00      [19] 2064 	ld	0 (iy), a
   0C1C 21 12 00      [10] 2065 	ld	hl, #18+0
   0C1F 39            [11] 2066 	add	hl, sp
   0C20 7E            [ 7] 2067 	ld	a, (hl)
   0C21 FD 21 06 00   [14] 2068 	ld	iy, #6
   0C25 FD 39         [15] 2069 	add	iy, sp
   0C27 FD 77 00      [19] 2070 	ld	0 (iy), a
   0C2A 21 13 00      [10] 2071 	ld	hl, #18+1
   0C2D 39            [11] 2072 	add	hl, sp
   0C2E 7E            [ 7] 2073 	ld	a, (hl)
   0C2F FD 21 06 00   [14] 2074 	ld	iy, #6
   0C33 FD 39         [15] 2075 	add	iy, sp
   0C35 FD 77 01      [19] 2076 	ld	1 (iy), a
   0C38 18 1C         [12] 2077 	jr	00118$
   0C3A                    2078 00117$:
                     0C3A  2079 	C$printf.c$626$4_0$74	= .
                           2080 	.globl	C$printf.c$626$4_0$74
                           2081 ;printf.c:626: width = (unsigned int)w;
   0C3A 21 0E 00      [10] 2082 	ld	hl, #14+0
   0C3D 39            [11] 2083 	add	hl, sp
   0C3E 7E            [ 7] 2084 	ld	a, (hl)
   0C3F FD 21 06 00   [14] 2085 	ld	iy, #6
   0C43 FD 39         [15] 2086 	add	iy, sp
   0C45 FD 77 00      [19] 2087 	ld	0 (iy), a
   0C48 21 0F 00      [10] 2088 	ld	hl, #14+1
   0C4B 39            [11] 2089 	add	hl, sp
   0C4C 7E            [ 7] 2090 	ld	a, (hl)
   0C4D FD 21 06 00   [14] 2091 	ld	iy, #6
   0C51 FD 39         [15] 2092 	add	iy, sp
   0C53 FD 77 01      [19] 2093 	ld	1 (iy), a
   0C56                    2094 00118$:
                     0C56  2095 	C$printf.c$628$3_0$72	= .
                           2096 	.globl	C$printf.c$628$3_0$72
                           2097 ;printf.c:628: format++;
   0C56 FD 21 1C 00   [14] 2098 	ld	iy, #28
   0C5A FD 39         [15] 2099 	add	iy, sp
   0C5C FD 34 00      [23] 2100 	inc	0 (iy)
   0C5F 20 03         [12] 2101 	jr	NZ,00649$
   0C61 FD 34 01      [23] 2102 	inc	1 (iy)
   0C64                    2103 00649$:
   0C64                    2104 00123$:
                     0C64  2105 	C$printf.c$632$2_0$66	= .
                           2106 	.globl	C$printf.c$632$2_0$66
                           2107 ;printf.c:632: precision = 0U;
   0C64 AF            [ 4] 2108 	xor	a, a
   0C65 FD 21 08 00   [14] 2109 	ld	iy, #8
   0C69 FD 39         [15] 2110 	add	iy, sp
   0C6B FD 77 00      [19] 2111 	ld	0 (iy), a
   0C6E FD 77 01      [19] 2112 	ld	1 (iy), a
                     0C71  2113 	C$printf.c$633$2_0$66	= .
                           2114 	.globl	C$printf.c$633$2_0$66
                           2115 ;printf.c:633: if (*format == '.') {
   0C71 21 1C 00      [10] 2116 	ld	hl, #28+0
   0C74 39            [11] 2117 	add	hl, sp
   0C75 7E            [ 7] 2118 	ld	a, (hl)
   0C76 FD 21 12 00   [14] 2119 	ld	iy, #18
   0C7A FD 39         [15] 2120 	add	iy, sp
   0C7C FD 77 00      [19] 2121 	ld	0 (iy), a
   0C7F 21 1D 00      [10] 2122 	ld	hl, #28+1
   0C82 39            [11] 2123 	add	hl, sp
   0C83 7E            [ 7] 2124 	ld	a, (hl)
   0C84 FD 21 12 00   [14] 2125 	ld	iy, #18
   0C88 FD 39         [15] 2126 	add	iy, sp
   0C8A FD 77 01      [19] 2127 	ld	1 (iy), a
   0C8D FD 6E 00      [19] 2128 	ld	l, 0 (iy)
   0C90 FD 66 01      [19] 2129 	ld	h, 1 (iy)
   0C93 7E            [ 7] 2130 	ld	a, (hl)
   0C94 D6 2E         [ 7] 2131 	sub	a, #0x2e
   0C96 C2rCFr0D      [10] 2132 	jp	NZ,00130$
                     0C99  2133 	C$printf.c$634$3_0$75	= .
                           2134 	.globl	C$printf.c$634$3_0$75
                           2135 ;printf.c:634: flags |= FLAGS_PRECISION;
   0C99 FD 21 04 00   [14] 2136 	ld	iy, #4
   0C9D FD 39         [15] 2137 	add	iy, sp
   0C9F FD 7E 00      [19] 2138 	ld	a, 0 (iy)
   0CA2 FD 77 00      [19] 2139 	ld	0 (iy), a
   0CA5 FD 7E 01      [19] 2140 	ld	a, 1 (iy)
   0CA8 F6 04         [ 7] 2141 	or	a, #0x04
   0CAA FD 77 01      [19] 2142 	ld	1 (iy), a
                     0CAD  2143 	C$printf.c$635$3_0$75	= .
                           2144 	.globl	C$printf.c$635$3_0$75
                           2145 ;printf.c:635: format++;
   0CAD 21 1C 00      [10] 2146 	ld	hl, #28
   0CB0 39            [11] 2147 	add	hl, sp
   0CB1 FD 21 12 00   [14] 2148 	ld	iy, #18
   0CB5 FD 39         [15] 2149 	add	iy, sp
   0CB7 FD 7E 00      [19] 2150 	ld	a, 0 (iy)
   0CBA C6 01         [ 7] 2151 	add	a, #0x01
   0CBC 77            [ 7] 2152 	ld	(hl), a
   0CBD FD 7E 01      [19] 2153 	ld	a, 1 (iy)
   0CC0 CE 00         [ 7] 2154 	adc	a, #0x00
   0CC2 23            [ 6] 2155 	inc	hl
   0CC3 77            [ 7] 2156 	ld	(hl), a
                     0CC4  2157 	C$printf.c$587$1_0$64	= .
                           2158 	.globl	C$printf.c$587$1_0$64
                           2159 ;printf.c:587: while (*format)
   0CC4 21 1C 00      [10] 2160 	ld	hl, #28+0
   0CC7 39            [11] 2161 	add	hl, sp
   0CC8 7E            [ 7] 2162 	ld	a, (hl)
   0CC9 FD 21 12 00   [14] 2163 	ld	iy, #18
   0CCD FD 39         [15] 2164 	add	iy, sp
   0CCF FD 77 00      [19] 2165 	ld	0 (iy), a
   0CD2 21 1D 00      [10] 2166 	ld	hl, #28+1
   0CD5 39            [11] 2167 	add	hl, sp
   0CD6 7E            [ 7] 2168 	ld	a, (hl)
   0CD7 FD 21 12 00   [14] 2169 	ld	iy, #18
   0CDB FD 39         [15] 2170 	add	iy, sp
   0CDD FD 77 01      [19] 2171 	ld	1 (iy), a
                     0CE0  2172 	C$printf.c$616$1_0$64	= .
                           2173 	.globl	C$printf.c$616$1_0$64
                           2174 ;printf.c:616: if (_is_digit(*format)) {
   0CE0 FD 6E 00      [19] 2175 	ld	l, 0 (iy)
   0CE3 FD 66 01      [19] 2176 	ld	h, 1 (iy)
   0CE6 7E            [ 7] 2177 	ld	a, (hl)
   0CE7 FD 23         [10] 2178 	inc	iy
   0CE9 FD 77 00      [19] 2179 	ld	0 (iy), a
                     0CEC  2180 	C$printf.c$636$4_0$114	= .
                           2181 	.globl	C$printf.c$636$4_0$114
                           2182 ;printf.c:636: if (_is_digit(*format)) {
   0CEC FD 4E 00      [19] 2183 	ld	c, 0 (iy)
                     0CEF  2184 	C$printf.c$183$6_0$116	= .
                           2185 	.globl	C$printf.c$183$6_0$116
                           2186 ;printf.c:183: return (ch >= '0') && (ch <= '9');
   0CEF 79            [ 4] 2187 	ld	a, c
   0CF0 EE 80         [ 7] 2188 	xor	a, #0x80
   0CF2 D6 B0         [ 7] 2189 	sub	a, #0xb0
   0CF4 38 51         [12] 2190 	jr	C,00127$
   0CF6 3E 39         [ 7] 2191 	ld	a, #0x39
   0CF8 91            [ 4] 2192 	sub	a, c
   0CF9 E2rFEr0C      [10] 2193 	jp	PO, 00652$
   0CFC EE 80         [ 7] 2194 	xor	a, #0x80
   0CFE                    2195 00652$:
   0CFE FAr47r0D      [10] 2196 	jp	M, 00127$
                     0D01  2197 	C$printf.c$637$4_0$76	= .
                           2198 	.globl	C$printf.c$637$4_0$76
                           2199 ;printf.c:637: precision = _atoi(&format);
   0D01 21 1C 00      [10] 2200 	ld	hl, #28
   0D04 39            [11] 2201 	add	hl, sp
   0D05 FD 21 12 00   [14] 2202 	ld	iy, #18
   0D09 FD 39         [15] 2203 	add	iy, sp
   0D0B FD 75 00      [19] 2204 	ld	0 (iy), l
   0D0E FD 74 01      [19] 2205 	ld	1 (iy), h
   0D11 FD 6E 00      [19] 2206 	ld	l, 0 (iy)
   0D14 FD 66 01      [19] 2207 	ld	h, 1 (iy)
   0D17 E5            [11] 2208 	push	hl
   0D18 CDrCAr00      [17] 2209 	call	__atoi
   0D1B F1            [10] 2210 	pop	af
   0D1C FD 21 12 00   [14] 2211 	ld	iy, #18
   0D20 FD 39         [15] 2212 	add	iy, sp
   0D22 FD 75 00      [19] 2213 	ld	0 (iy), l
   0D25 FD 74 01      [19] 2214 	ld	1 (iy), h
   0D28 21 12 00      [10] 2215 	ld	hl, #18+0
   0D2B 39            [11] 2216 	add	hl, sp
   0D2C 7E            [ 7] 2217 	ld	a, (hl)
   0D2D FD 21 08 00   [14] 2218 	ld	iy, #8
   0D31 FD 39         [15] 2219 	add	iy, sp
   0D33 FD 77 00      [19] 2220 	ld	0 (iy), a
   0D36 21 13 00      [10] 2221 	ld	hl, #18+1
   0D39 39            [11] 2222 	add	hl, sp
   0D3A 7E            [ 7] 2223 	ld	a, (hl)
   0D3B FD 21 08 00   [14] 2224 	ld	iy, #8
   0D3F FD 39         [15] 2225 	add	iy, sp
   0D41 FD 77 01      [19] 2226 	ld	1 (iy), a
   0D44 C3rCFr0D      [10] 2227 	jp	00130$
   0D47                    2228 00127$:
                     0D47  2229 	C$printf.c$639$3_0$75	= .
                           2230 	.globl	C$printf.c$639$3_0$75
                           2231 ;printf.c:639: else if (*format == '*') {
   0D47 21 13 00      [10] 2232 	ld	hl, #19+0
   0D4A 39            [11] 2233 	add	hl, sp
   0D4B 7E            [ 7] 2234 	ld	a, (hl)
   0D4C D6 2A         [ 7] 2235 	sub	a, #0x2a
   0D4E C2rCFr0D      [10] 2236 	jp	NZ,00130$
                     0D51  2237 	C$printf.c$640$4_0$77	= .
                           2238 	.globl	C$printf.c$640$4_0$77
                           2239 ;printf.c:640: const int prec = (int)va_arg(va, int);
   0D51 FD 21 1E 00   [14] 2240 	ld	iy, #30
   0D55 FD 39         [15] 2241 	add	iy, sp
   0D57 FD 4E 00      [19] 2242 	ld	c, 0 (iy)
   0D5A FD 46 01      [19] 2243 	ld	b, 1 (iy)
   0D5D 03            [ 6] 2244 	inc	bc
   0D5E 03            [ 6] 2245 	inc	bc
   0D5F FD 71 00      [19] 2246 	ld	0 (iy), c
   0D62 FD 70 01      [19] 2247 	ld	1 (iy), b
   0D65 21 12 00      [10] 2248 	ld	hl, #18
   0D68 39            [11] 2249 	add	hl, sp
   0D69 79            [ 4] 2250 	ld	a, c
   0D6A C6 FE         [ 7] 2251 	add	a, #0xfe
   0D6C 77            [ 7] 2252 	ld	(hl), a
   0D6D 78            [ 4] 2253 	ld	a, b
   0D6E CE FF         [ 7] 2254 	adc	a, #0xff
   0D70 23            [ 6] 2255 	inc	hl
   0D71 77            [ 7] 2256 	ld	(hl), a
   0D72 FD 21 12 00   [14] 2257 	ld	iy, #18
   0D76 FD 39         [15] 2258 	add	iy, sp
   0D78 FD 6E 00      [19] 2259 	ld	l, 0 (iy)
   0D7B FD 66 01      [19] 2260 	ld	h, 1 (iy)
   0D7E 7E            [ 7] 2261 	ld	a, (hl)
   0D7F FD 77 00      [19] 2262 	ld	0 (iy), a
   0D82 23            [ 6] 2263 	inc	hl
   0D83 7E            [ 7] 2264 	ld	a, (hl)
   0D84 FD 77 01      [19] 2265 	ld	1 (iy), a
                     0D87  2266 	C$printf.c$641$4_0$77	= .
                           2267 	.globl	C$printf.c$641$4_0$77
                           2268 ;printf.c:641: precision = prec > 0 ? (unsigned int)prec : 0U;
   0D87 AF            [ 4] 2269 	xor	a, a
   0D88 FD BE 00      [19] 2270 	cp	a, 0 (iy)
   0D8B FD 9E 01      [19] 2271 	sbc	a, 1 (iy)
   0D8E E2r93r0D      [10] 2272 	jp	PO, 00655$
   0D91 EE 80         [ 7] 2273 	xor	a, #0x80
   0D93                    2274 00655$:
   0D93 F2r98r0D      [10] 2275 	jp	P, 00234$
   0D96 18 0D         [12] 2276 	jr	00235$
   0D98                    2277 00234$:
   0D98 AF            [ 4] 2278 	xor	a, a
   0D99 FD 21 12 00   [14] 2279 	ld	iy, #18
   0D9D FD 39         [15] 2280 	add	iy, sp
   0D9F FD 77 00      [19] 2281 	ld	0 (iy), a
   0DA2 FD 77 01      [19] 2282 	ld	1 (iy), a
   0DA5                    2283 00235$:
   0DA5 21 12 00      [10] 2284 	ld	hl, #18+0
   0DA8 39            [11] 2285 	add	hl, sp
   0DA9 7E            [ 7] 2286 	ld	a, (hl)
   0DAA FD 21 08 00   [14] 2287 	ld	iy, #8
   0DAE FD 39         [15] 2288 	add	iy, sp
   0DB0 FD 77 00      [19] 2289 	ld	0 (iy), a
   0DB3 21 13 00      [10] 2290 	ld	hl, #18+1
   0DB6 39            [11] 2291 	add	hl, sp
   0DB7 7E            [ 7] 2292 	ld	a, (hl)
   0DB8 FD 21 08 00   [14] 2293 	ld	iy, #8
   0DBC FD 39         [15] 2294 	add	iy, sp
   0DBE FD 77 01      [19] 2295 	ld	1 (iy), a
                     0DC1  2296 	C$printf.c$642$4_0$77	= .
                           2297 	.globl	C$printf.c$642$4_0$77
                           2298 ;printf.c:642: format++;
   0DC1 FD 21 1C 00   [14] 2299 	ld	iy, #28
   0DC5 FD 39         [15] 2300 	add	iy, sp
   0DC7 FD 34 00      [23] 2301 	inc	0 (iy)
   0DCA 20 03         [12] 2302 	jr	NZ,00656$
   0DCC FD 34 01      [23] 2303 	inc	1 (iy)
   0DCF                    2304 00656$:
   0DCF                    2305 00130$:
                     0DCF  2306 	C$printf.c$647$2_0$66	= .
                           2307 	.globl	C$printf.c$647$2_0$66
                           2308 ;printf.c:647: switch (*format) {
   0DCF 21 1C 00      [10] 2309 	ld	hl, #28
   0DD2 39            [11] 2310 	add	hl, sp
   0DD3 4E            [ 7] 2311 	ld	c, (hl)
   0DD4 23            [ 6] 2312 	inc	hl
   0DD5 56            [ 7] 2313 	ld	d, (hl)
   0DD6 69            [ 4] 2314 	ld	l, c
   0DD7 62            [ 4] 2315 	ld	h, d
   0DD8 7E            [ 7] 2316 	ld	a, (hl)
   0DD9 FE 68         [ 7] 2317 	cp	a,#0x68
   0DDB 28 6A         [12] 2318 	jr	Z,00134$
   0DDD FE 6A         [ 7] 2319 	cp	a,#0x6a
   0DDF CArBBr0E      [10] 2320 	jp	Z,00138$
   0DE2 FE 6C         [ 7] 2321 	cp	a,#0x6c
   0DE4 28 0D         [12] 2322 	jr	Z,00131$
   0DE6 FE 74         [ 7] 2323 	cp	a,#0x74
   0DE8 CAr98r0E      [10] 2324 	jp	Z,00137$
   0DEB D6 7A         [ 7] 2325 	sub	a, #0x7a
   0DED CArDEr0E      [10] 2326 	jp	Z,00139$
   0DF0 C3rFFr0E      [10] 2327 	jp	00141$
                     0DF3  2328 	C$printf.c$648$3_0$78	= .
                           2329 	.globl	C$printf.c$648$3_0$78
                           2330 ;printf.c:648: case 'l' :
   0DF3                    2331 00131$:
                     0DF3  2332 	C$printf.c$649$3_0$78	= .
                           2333 	.globl	C$printf.c$649$3_0$78
                           2334 ;printf.c:649: flags |= FLAGS_LONG;
   0DF3 FD 21 04 00   [14] 2335 	ld	iy, #4
   0DF7 FD 39         [15] 2336 	add	iy, sp
   0DF9 FD 7E 00      [19] 2337 	ld	a, 0 (iy)
   0DFC FD 77 00      [19] 2338 	ld	0 (iy), a
   0DFF FD 7E 01      [19] 2339 	ld	a, 1 (iy)
   0E02 F6 01         [ 7] 2340 	or	a, #0x01
   0E04 FD 77 01      [19] 2341 	ld	1 (iy), a
                     0E07  2342 	C$printf.c$650$3_0$78	= .
                           2343 	.globl	C$printf.c$650$3_0$78
                           2344 ;printf.c:650: format++;
   0E07 79            [ 4] 2345 	ld	a, c
   0E08 21 1C 00      [10] 2346 	ld	hl, #28
   0E0B 39            [11] 2347 	add	hl, sp
   0E0C C6 01         [ 7] 2348 	add	a, #0x01
   0E0E 77            [ 7] 2349 	ld	(hl), a
   0E0F 7A            [ 4] 2350 	ld	a, d
   0E10 CE 00         [ 7] 2351 	adc	a, #0x00
   0E12 23            [ 6] 2352 	inc	hl
   0E13 77            [ 7] 2353 	ld	(hl), a
                     0E14  2354 	C$printf.c$651$3_0$78	= .
                           2355 	.globl	C$printf.c$651$3_0$78
                           2356 ;printf.c:651: if (*format == 'l') {
   0E14 21 1C 00      [10] 2357 	ld	hl, #28
   0E17 39            [11] 2358 	add	hl, sp
   0E18 4E            [ 7] 2359 	ld	c, (hl)
   0E19 23            [ 6] 2360 	inc	hl
   0E1A 5E            [ 7] 2361 	ld	e, (hl)
   0E1B 69            [ 4] 2362 	ld	l, c
   0E1C 63            [ 4] 2363 	ld	h, e
   0E1D 7E            [ 7] 2364 	ld	a, (hl)
   0E1E D6 6C         [ 7] 2365 	sub	a, #0x6c
   0E20 C2rFFr0E      [10] 2366 	jp	NZ,00141$
                     0E23  2367 	C$printf.c$652$4_0$79	= .
                           2368 	.globl	C$printf.c$652$4_0$79
                           2369 ;printf.c:652: flags |= FLAGS_LONG_LONG;
   0E23 FD 21 04 00   [14] 2370 	ld	iy, #4
   0E27 FD 39         [15] 2371 	add	iy, sp
   0E29 FD 7E 00      [19] 2372 	ld	a, 0 (iy)
   0E2C FD 77 00      [19] 2373 	ld	0 (iy), a
   0E2F FD 7E 01      [19] 2374 	ld	a, 1 (iy)
   0E32 F6 02         [ 7] 2375 	or	a, #0x02
   0E34 FD 77 01      [19] 2376 	ld	1 (iy), a
                     0E37  2377 	C$printf.c$653$4_0$79	= .
                           2378 	.globl	C$printf.c$653$4_0$79
                           2379 ;printf.c:653: format++;
   0E37 79            [ 4] 2380 	ld	a, c
   0E38 21 1C 00      [10] 2381 	ld	hl, #28
   0E3B 39            [11] 2382 	add	hl, sp
   0E3C C6 01         [ 7] 2383 	add	a, #0x01
   0E3E 77            [ 7] 2384 	ld	(hl), a
   0E3F 7B            [ 4] 2385 	ld	a, e
   0E40 CE 00         [ 7] 2386 	adc	a, #0x00
   0E42 23            [ 6] 2387 	inc	hl
   0E43 77            [ 7] 2388 	ld	(hl), a
                     0E44  2389 	C$printf.c$655$3_0$78	= .
                           2390 	.globl	C$printf.c$655$3_0$78
                           2391 ;printf.c:655: break;
   0E44 C3rFFr0E      [10] 2392 	jp	00141$
                     0E47  2393 	C$printf.c$656$3_0$78	= .
                           2394 	.globl	C$printf.c$656$3_0$78
                           2395 ;printf.c:656: case 'h' :
   0E47                    2396 00134$:
                     0E47  2397 	C$printf.c$657$3_0$78	= .
                           2398 	.globl	C$printf.c$657$3_0$78
                           2399 ;printf.c:657: flags |= FLAGS_SHORT;
   0E47 FD 21 04 00   [14] 2400 	ld	iy, #4
   0E4B FD 39         [15] 2401 	add	iy, sp
   0E4D FD 7E 00      [19] 2402 	ld	a, 0 (iy)
   0E50 F6 80         [ 7] 2403 	or	a, #0x80
   0E52 FD 77 00      [19] 2404 	ld	0 (iy), a
   0E55 FD 7E 01      [19] 2405 	ld	a, 1 (iy)
   0E58 FD 77 01      [19] 2406 	ld	1 (iy), a
                     0E5B  2407 	C$printf.c$658$3_0$78	= .
                           2408 	.globl	C$printf.c$658$3_0$78
                           2409 ;printf.c:658: format++;
   0E5B 79            [ 4] 2410 	ld	a, c
   0E5C 21 1C 00      [10] 2411 	ld	hl, #28
   0E5F 39            [11] 2412 	add	hl, sp
   0E60 C6 01         [ 7] 2413 	add	a, #0x01
   0E62 77            [ 7] 2414 	ld	(hl), a
   0E63 7A            [ 4] 2415 	ld	a, d
   0E64 CE 00         [ 7] 2416 	adc	a, #0x00
   0E66 23            [ 6] 2417 	inc	hl
   0E67 77            [ 7] 2418 	ld	(hl), a
                     0E68  2419 	C$printf.c$659$3_0$78	= .
                           2420 	.globl	C$printf.c$659$3_0$78
                           2421 ;printf.c:659: if (*format == 'h') {
   0E68 21 1C 00      [10] 2422 	ld	hl, #28
   0E6B 39            [11] 2423 	add	hl, sp
   0E6C 4E            [ 7] 2424 	ld	c, (hl)
   0E6D 23            [ 6] 2425 	inc	hl
   0E6E 46            [ 7] 2426 	ld	b, (hl)
   0E6F 0A            [ 7] 2427 	ld	a, (bc)
   0E70 D6 68         [ 7] 2428 	sub	a, #0x68
   0E72 C2rFFr0E      [10] 2429 	jp	NZ,00141$
                     0E75  2430 	C$printf.c$660$4_0$80	= .
                           2431 	.globl	C$printf.c$660$4_0$80
                           2432 ;printf.c:660: flags |= FLAGS_CHAR;
   0E75 FD 21 04 00   [14] 2433 	ld	iy, #4
   0E79 FD 39         [15] 2434 	add	iy, sp
   0E7B FD 7E 00      [19] 2435 	ld	a, 0 (iy)
   0E7E F6 40         [ 7] 2436 	or	a, #0x40
   0E80 FD 77 00      [19] 2437 	ld	0 (iy), a
   0E83 FD 7E 01      [19] 2438 	ld	a, 1 (iy)
   0E86 FD 77 01      [19] 2439 	ld	1 (iy), a
                     0E89  2440 	C$printf.c$661$4_0$80	= .
                           2441 	.globl	C$printf.c$661$4_0$80
                           2442 ;printf.c:661: format++;
   0E89 03            [ 6] 2443 	inc	bc
   0E8A FD 21 1C 00   [14] 2444 	ld	iy, #28
   0E8E FD 39         [15] 2445 	add	iy, sp
   0E90 FD 71 00      [19] 2446 	ld	0 (iy), c
   0E93 FD 70 01      [19] 2447 	ld	1 (iy), b
                     0E96  2448 	C$printf.c$663$3_0$78	= .
                           2449 	.globl	C$printf.c$663$3_0$78
                           2450 ;printf.c:663: break;
   0E96 18 67         [12] 2451 	jr	00141$
                     0E98  2452 	C$printf.c$665$3_0$78	= .
                           2453 	.globl	C$printf.c$665$3_0$78
                           2454 ;printf.c:665: case 't' :
   0E98                    2455 00137$:
                     0E98  2456 	C$printf.c$666$3_0$78	= .
                           2457 	.globl	C$printf.c$666$3_0$78
                           2458 ;printf.c:666: flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
   0E98 FD 21 04 00   [14] 2459 	ld	iy, #4
   0E9C FD 39         [15] 2460 	add	iy, sp
   0E9E FD 7E 00      [19] 2461 	ld	a, 0 (iy)
   0EA1 FD 77 00      [19] 2462 	ld	0 (iy), a
   0EA4 FD 7E 01      [19] 2463 	ld	a, 1 (iy)
   0EA7 F6 02         [ 7] 2464 	or	a, #0x02
   0EA9 FD 77 01      [19] 2465 	ld	1 (iy), a
                     0EAC  2466 	C$printf.c$667$3_0$78	= .
                           2467 	.globl	C$printf.c$667$3_0$78
                           2468 ;printf.c:667: format++;
   0EAC 79            [ 4] 2469 	ld	a, c
   0EAD 21 1C 00      [10] 2470 	ld	hl, #28
   0EB0 39            [11] 2471 	add	hl, sp
   0EB1 C6 01         [ 7] 2472 	add	a, #0x01
   0EB3 77            [ 7] 2473 	ld	(hl), a
   0EB4 7A            [ 4] 2474 	ld	a, d
   0EB5 CE 00         [ 7] 2475 	adc	a, #0x00
   0EB7 23            [ 6] 2476 	inc	hl
   0EB8 77            [ 7] 2477 	ld	(hl), a
                     0EB9  2478 	C$printf.c$668$3_0$78	= .
                           2479 	.globl	C$printf.c$668$3_0$78
                           2480 ;printf.c:668: break;
   0EB9 18 44         [12] 2481 	jr	00141$
                     0EBB  2482 	C$printf.c$670$3_0$78	= .
                           2483 	.globl	C$printf.c$670$3_0$78
                           2484 ;printf.c:670: case 'j' :
   0EBB                    2485 00138$:
                     0EBB  2486 	C$printf.c$671$3_0$78	= .
                           2487 	.globl	C$printf.c$671$3_0$78
                           2488 ;printf.c:671: flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
   0EBB FD 21 04 00   [14] 2489 	ld	iy, #4
   0EBF FD 39         [15] 2490 	add	iy, sp
   0EC1 FD 7E 00      [19] 2491 	ld	a, 0 (iy)
   0EC4 FD 77 00      [19] 2492 	ld	0 (iy), a
   0EC7 FD 7E 01      [19] 2493 	ld	a, 1 (iy)
   0ECA F6 02         [ 7] 2494 	or	a, #0x02
   0ECC FD 77 01      [19] 2495 	ld	1 (iy), a
                     0ECF  2496 	C$printf.c$672$3_0$78	= .
                           2497 	.globl	C$printf.c$672$3_0$78
                           2498 ;printf.c:672: format++;
   0ECF 79            [ 4] 2499 	ld	a, c
   0ED0 21 1C 00      [10] 2500 	ld	hl, #28
   0ED3 39            [11] 2501 	add	hl, sp
   0ED4 C6 01         [ 7] 2502 	add	a, #0x01
   0ED6 77            [ 7] 2503 	ld	(hl), a
   0ED7 7A            [ 4] 2504 	ld	a, d
   0ED8 CE 00         [ 7] 2505 	adc	a, #0x00
   0EDA 23            [ 6] 2506 	inc	hl
   0EDB 77            [ 7] 2507 	ld	(hl), a
                     0EDC  2508 	C$printf.c$673$3_0$78	= .
                           2509 	.globl	C$printf.c$673$3_0$78
                           2510 ;printf.c:673: break;
   0EDC 18 21         [12] 2511 	jr	00141$
                     0EDE  2512 	C$printf.c$674$3_0$78	= .
                           2513 	.globl	C$printf.c$674$3_0$78
                           2514 ;printf.c:674: case 'z' :
   0EDE                    2515 00139$:
                     0EDE  2516 	C$printf.c$675$3_0$78	= .
                           2517 	.globl	C$printf.c$675$3_0$78
                           2518 ;printf.c:675: flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
   0EDE FD 21 04 00   [14] 2519 	ld	iy, #4
   0EE2 FD 39         [15] 2520 	add	iy, sp
   0EE4 FD 7E 00      [19] 2521 	ld	a, 0 (iy)
   0EE7 FD 77 00      [19] 2522 	ld	0 (iy), a
   0EEA FD 7E 01      [19] 2523 	ld	a, 1 (iy)
   0EED F6 02         [ 7] 2524 	or	a, #0x02
   0EEF FD 77 01      [19] 2525 	ld	1 (iy), a
                     0EF2  2526 	C$printf.c$676$3_0$78	= .
                           2527 	.globl	C$printf.c$676$3_0$78
                           2528 ;printf.c:676: format++;
   0EF2 79            [ 4] 2529 	ld	a, c
   0EF3 21 1C 00      [10] 2530 	ld	hl, #28
   0EF6 39            [11] 2531 	add	hl, sp
   0EF7 C6 01         [ 7] 2532 	add	a, #0x01
   0EF9 77            [ 7] 2533 	ld	(hl), a
   0EFA 7A            [ 4] 2534 	ld	a, d
   0EFB CE 00         [ 7] 2535 	adc	a, #0x00
   0EFD 23            [ 6] 2536 	inc	hl
   0EFE 77            [ 7] 2537 	ld	(hl), a
                     0EFF  2538 	C$printf.c$680$2_0$66	= .
                           2539 	.globl	C$printf.c$680$2_0$66
                           2540 ;printf.c:680: }
   0EFF                    2541 00141$:
                     0EFF  2542 	C$printf.c$587$1_0$64	= .
                           2543 	.globl	C$printf.c$587$1_0$64
                           2544 ;printf.c:587: while (*format)
   0EFF 21 1C 00      [10] 2545 	ld	hl, #28
   0F02 39            [11] 2546 	add	hl, sp
   0F03 7E            [ 7] 2547 	ld	a, (hl)
   0F04 23            [ 6] 2548 	inc	hl
   0F05 66            [ 7] 2549 	ld	h, (hl)
   0F06 6F            [ 4] 2550 	ld	l, a
                     0F07  2551 	C$printf.c$616$1_0$64	= .
                           2552 	.globl	C$printf.c$616$1_0$64
                           2553 ;printf.c:616: if (_is_digit(*format)) {
   0F07 7E            [ 7] 2554 	ld	a, (hl)
   0F08 FD 21 0F 00   [14] 2555 	ld	iy, #15
   0F0C FD 39         [15] 2556 	add	iy, sp
   0F0E FD 77 00      [19] 2557 	ld	0 (iy), a
                     0F11  2558 	C$printf.c$683$2_0$66	= .
                           2559 	.globl	C$printf.c$683$2_0$66
                           2560 ;printf.c:683: switch (*format) {
   0F11 FD 7E 00      [19] 2561 	ld	a, 0 (iy)
   0F14 D6 25         [ 7] 2562 	sub	a, #0x25
   0F16 CAr15r1A      [10] 2563 	jp	Z,00212$
   0F19 FD 7E 00      [19] 2564 	ld	a, 0 (iy)
   0F1C D6 58         [ 7] 2565 	sub	a, #0x58
   0F1E 3E 01         [ 7] 2566 	ld	a, #0x01
   0F20 28 01         [12] 2567 	jr	Z,00668$
   0F22 AF            [ 4] 2568 	xor	a, a
   0F23                    2569 00668$:
   0F23 4F            [ 4] 2570 	ld	c, a
   0F24 B7            [ 4] 2571 	or	a, a
   0F25 20 49         [12] 2572 	jr	NZ,00148$
   0F27 FD 21 0F 00   [14] 2573 	ld	iy, #15
   0F2B FD 39         [15] 2574 	add	iy, sp
   0F2D FD 7E 00      [19] 2575 	ld	a, 0 (iy)
   0F30 D6 62         [ 7] 2576 	sub	a, #0x62
   0F32 28 3C         [12] 2577 	jr	Z,00148$
   0F34 FD 7E 00      [19] 2578 	ld	a, 0 (iy)
   0F37 D6 63         [ 7] 2579 	sub	a, #0x63
   0F39 CArDAr14      [10] 2580 	jp	Z,00182$
   0F3C FD 7E 00      [19] 2581 	ld	a, 0 (iy)
   0F3F D6 64         [ 7] 2582 	sub	a, #0x64
   0F41 28 2D         [12] 2583 	jr	Z,00148$
   0F43 FD 7E 00      [19] 2584 	ld	a, 0 (iy)
   0F46 D6 69         [ 7] 2585 	sub	a, #0x69
   0F48 28 26         [12] 2586 	jr	Z,00148$
   0F4A FD 7E 00      [19] 2587 	ld	a, 0 (iy)
   0F4D D6 6F         [ 7] 2588 	sub	a, #0x6f
   0F4F 28 1F         [12] 2589 	jr	Z,00148$
   0F51 FD 7E 00      [19] 2590 	ld	a, 0 (iy)
   0F54 D6 70         [ 7] 2591 	sub	a, #0x70
   0F56 CAr65r19      [10] 2592 	jp	Z,00211$
   0F59 FD 7E 00      [19] 2593 	ld	a, 0 (iy)
   0F5C D6 73         [ 7] 2594 	sub	a, #0x73
   0F5E CAr5Ar16      [10] 2595 	jp	Z,00193$
   0F61 FD 7E 00      [19] 2596 	ld	a, 0 (iy)
   0F64 D6 75         [ 7] 2597 	sub	a, #0x75
   0F66 28 08         [12] 2598 	jr	Z,00148$
   0F68 FD 7E 00      [19] 2599 	ld	a, 0 (iy)
   0F6B D6 78         [ 7] 2600 	sub	a, #0x78
   0F6D C2r68r1A      [10] 2601 	jp	NZ,00213$
                     0F70  2602 	C$printf.c$690$3_0$81	= .
                           2603 	.globl	C$printf.c$690$3_0$81
                           2604 ;printf.c:690: case 'b' : {
   0F70                    2605 00148$:
                     0F70  2606 	C$printf.c$693$4_0$82	= .
                           2607 	.globl	C$printf.c$693$4_0$82
                           2608 ;printf.c:693: if (*format == 'x' || *format == 'X') {
   0F70 21 0F 00      [10] 2609 	ld	hl, #15+0
   0F73 39            [11] 2610 	add	hl, sp
   0F74 7E            [ 7] 2611 	ld	a, (hl)
   0F75 D6 78         [ 7] 2612 	sub	a, #0x78
   0F77 28 04         [12] 2613 	jr	Z,00155$
   0F79 79            [ 4] 2614 	ld	a, c
   0F7A B7            [ 4] 2615 	or	a, a
   0F7B 28 10         [12] 2616 	jr	Z,00156$
   0F7D                    2617 00155$:
                     0F7D  2618 	C$printf.c$694$5_0$83	= .
                           2619 	.globl	C$printf.c$694$5_0$83
                           2620 ;printf.c:694: base = 16U;
   0F7D FD 21 12 00   [14] 2621 	ld	iy, #18
   0F81 FD 39         [15] 2622 	add	iy, sp
   0F83 FD 36 00 10   [19] 2623 	ld	0 (iy), #0x10
   0F87 AF            [ 4] 2624 	xor	a, a
   0F88 FD 77 01      [19] 2625 	ld	1 (iy), a
   0F8B 18 5C         [12] 2626 	jr	00157$
   0F8D                    2627 00156$:
                     0F8D  2628 	C$printf.c$696$4_0$82	= .
                           2629 	.globl	C$printf.c$696$4_0$82
                           2630 ;printf.c:696: else if (*format == 'o') {
   0F8D FD 21 0F 00   [14] 2631 	ld	iy, #15
   0F91 FD 39         [15] 2632 	add	iy, sp
   0F93 FD 7E 00      [19] 2633 	ld	a, 0 (iy)
   0F96 D6 6F         [ 7] 2634 	sub	a, #0x6f
   0F98 20 10         [12] 2635 	jr	NZ,00153$
                     0F9A  2636 	C$printf.c$697$5_0$84	= .
                           2637 	.globl	C$printf.c$697$5_0$84
                           2638 ;printf.c:697: base =  8U;
   0F9A FD 23         [10] 2639 	inc	iy
   0F9C FD 23         [10] 2640 	inc	iy
   0F9E FD 23         [10] 2641 	inc	iy
   0FA0 FD 36 00 08   [19] 2642 	ld	0 (iy), #0x08
   0FA4 AF            [ 4] 2643 	xor	a, a
   0FA5 FD 77 01      [19] 2644 	ld	1 (iy), a
   0FA8 18 3F         [12] 2645 	jr	00157$
   0FAA                    2646 00153$:
                     0FAA  2647 	C$printf.c$699$4_0$82	= .
                           2648 	.globl	C$printf.c$699$4_0$82
                           2649 ;printf.c:699: else if (*format == 'b') {
   0FAA FD 21 0F 00   [14] 2650 	ld	iy, #15
   0FAE FD 39         [15] 2651 	add	iy, sp
   0FB0 FD 7E 00      [19] 2652 	ld	a, 0 (iy)
   0FB3 D6 62         [ 7] 2653 	sub	a, #0x62
   0FB5 20 10         [12] 2654 	jr	NZ,00150$
                     0FB7  2655 	C$printf.c$700$5_0$85	= .
                           2656 	.globl	C$printf.c$700$5_0$85
                           2657 ;printf.c:700: base =  2U;
   0FB7 FD 23         [10] 2658 	inc	iy
   0FB9 FD 23         [10] 2659 	inc	iy
   0FBB FD 23         [10] 2660 	inc	iy
   0FBD FD 36 00 02   [19] 2661 	ld	0 (iy), #0x02
   0FC1 AF            [ 4] 2662 	xor	a, a
   0FC2 FD 77 01      [19] 2663 	ld	1 (iy), a
   0FC5 18 22         [12] 2664 	jr	00157$
   0FC7                    2665 00150$:
                     0FC7  2666 	C$printf.c$703$5_0$86	= .
                           2667 	.globl	C$printf.c$703$5_0$86
                           2668 ;printf.c:703: base = 10U;
   0FC7 FD 21 12 00   [14] 2669 	ld	iy, #18
   0FCB FD 39         [15] 2670 	add	iy, sp
   0FCD FD 36 00 0A   [19] 2671 	ld	0 (iy), #0x0a
   0FD1 AF            [ 4] 2672 	xor	a, a
   0FD2 FD 77 01      [19] 2673 	ld	1 (iy), a
                     0FD5  2674 	C$printf.c$704$5_0$86	= .
                           2675 	.globl	C$printf.c$704$5_0$86
                           2676 ;printf.c:704: flags &= ~FLAGS_HASH;   // no hash for dec format
   0FD5 FD 21 04 00   [14] 2677 	ld	iy, #4
   0FD9 FD 39         [15] 2678 	add	iy, sp
   0FDB FD 7E 00      [19] 2679 	ld	a, 0 (iy)
   0FDE E6 EF         [ 7] 2680 	and	a, #0xef
   0FE0 FD 77 00      [19] 2681 	ld	0 (iy), a
   0FE3 FD 7E 01      [19] 2682 	ld	a, 1 (iy)
   0FE6 FD 77 01      [19] 2683 	ld	1 (iy), a
   0FE9                    2684 00157$:
                     0FE9  2685 	C$printf.c$707$4_0$82	= .
                           2686 	.globl	C$printf.c$707$4_0$82
                           2687 ;printf.c:707: if (*format == 'X') {
   0FE9 79            [ 4] 2688 	ld	a, c
   0FEA B7            [ 4] 2689 	or	a, a
   0FEB 28 14         [12] 2690 	jr	Z,00160$
                     0FED  2691 	C$printf.c$708$5_0$87	= .
                           2692 	.globl	C$printf.c$708$5_0$87
                           2693 ;printf.c:708: flags |= FLAGS_UPPERCASE;
   0FED FD 21 04 00   [14] 2694 	ld	iy, #4
   0FF1 FD 39         [15] 2695 	add	iy, sp
   0FF3 FD 7E 00      [19] 2696 	ld	a, 0 (iy)
   0FF6 F6 20         [ 7] 2697 	or	a, #0x20
   0FF8 FD 77 00      [19] 2698 	ld	0 (iy), a
   0FFB FD 7E 01      [19] 2699 	ld	a, 1 (iy)
   0FFE FD 77 01      [19] 2700 	ld	1 (iy), a
   1001                    2701 00160$:
                     1001  2702 	C$printf.c$683$1_0$64	= .
                           2703 	.globl	C$printf.c$683$1_0$64
                           2704 ;printf.c:683: switch (*format) {
   1001 21 0F 00      [10] 2705 	ld	hl, #15+0
   1004 39            [11] 2706 	add	hl, sp
   1005 7E            [ 7] 2707 	ld	a, (hl)
   1006 D6 69         [ 7] 2708 	sub	a, #0x69
   1008 3E 01         [ 7] 2709 	ld	a, #0x01
   100A 28 01         [12] 2710 	jr	Z,00685$
   100C AF            [ 4] 2711 	xor	a, a
   100D                    2712 00685$:
   100D 4F            [ 4] 2713 	ld	c, a
                     100E  2714 	C$printf.c$712$4_0$82	= .
                           2715 	.globl	C$printf.c$712$4_0$82
                           2716 ;printf.c:712: if ((*format != 'i') && (*format != 'd')) {
   100E CB 41         [ 8] 2717 	bit	0,c
   1010 20 1D         [12] 2718 	jr	NZ,00162$
   1012 21 0F 00      [10] 2719 	ld	hl, #15+0
   1015 39            [11] 2720 	add	hl, sp
   1016 7E            [ 7] 2721 	ld	a, (hl)
   1017 D6 64         [ 7] 2722 	sub	a, #0x64
   1019 28 14         [12] 2723 	jr	Z,00162$
                     101B  2724 	C$printf.c$713$5_0$88	= .
                           2725 	.globl	C$printf.c$713$5_0$88
                           2726 ;printf.c:713: flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
   101B FD 21 04 00   [14] 2727 	ld	iy, #4
   101F FD 39         [15] 2728 	add	iy, sp
   1021 FD 7E 00      [19] 2729 	ld	a, 0 (iy)
   1024 E6 F3         [ 7] 2730 	and	a, #0xf3
   1026 FD 77 00      [19] 2731 	ld	0 (iy), a
   1029 FD 7E 01      [19] 2732 	ld	a, 1 (iy)
   102C FD 77 01      [19] 2733 	ld	1 (iy), a
   102F                    2734 00162$:
                     102F  2735 	C$printf.c$717$4_0$82	= .
                           2736 	.globl	C$printf.c$717$4_0$82
                           2737 ;printf.c:717: if (flags & FLAGS_PRECISION) {
   102F 21 05 00      [10] 2738 	ld	hl, #4+1
   1032 39            [11] 2739 	add	hl, sp
   1033 7E            [ 7] 2740 	ld	a, (hl)
   1034 E6 04         [ 7] 2741 	and	a, #0x04
   1036 28 14         [12] 2742 	jr	Z,00165$
                     1038  2743 	C$printf.c$718$5_0$89	= .
                           2744 	.globl	C$printf.c$718$5_0$89
                           2745 ;printf.c:718: flags &= ~FLAGS_ZEROPAD;
   1038 FD 21 04 00   [14] 2746 	ld	iy, #4
   103C FD 39         [15] 2747 	add	iy, sp
   103E FD 7E 00      [19] 2748 	ld	a, 0 (iy)
   1041 E6 FE         [ 7] 2749 	and	a, #0xfe
   1043 FD 77 00      [19] 2750 	ld	0 (iy), a
   1046 FD 7E 01      [19] 2751 	ld	a, 1 (iy)
   1049 FD 77 01      [19] 2752 	ld	1 (iy), a
   104C                    2753 00165$:
                     104C  2754 	C$printf.c$724$1_0$64	= .
                           2755 	.globl	C$printf.c$724$1_0$64
                           2756 ;printf.c:724: if (flags & FLAGS_LONG_LONG) {
   104C 1E 00         [ 7] 2757 	ld	e, #0x00
   104E 21 05 00      [10] 2758 	ld	hl, #4+1
   1051 39            [11] 2759 	add	hl, sp
   1052 7E            [ 7] 2760 	ld	a, (hl)
   1053 E6 02         [ 7] 2761 	and	a, #0x02
   1055 57            [ 4] 2762 	ld	d, a
                     1056  2763 	C$printf.c$722$4_0$82	= .
                           2764 	.globl	C$printf.c$722$4_0$82
                           2765 ;printf.c:722: if ((*format == 'i') || (*format == 'd')) {
   1056 79            [ 4] 2766 	ld	a, c
   1057 B7            [ 4] 2767 	or	a, a
   1058 20 0A         [12] 2768 	jr	NZ,00178$
   105A 21 0F 00      [10] 2769 	ld	hl, #15+0
   105D 39            [11] 2770 	add	hl, sp
   105E 7E            [ 7] 2771 	ld	a, (hl)
   105F D6 64         [ 7] 2772 	sub	a, #0x64
   1061 C2rE3r12      [10] 2773 	jp	NZ,00179$
   1064                    2774 00178$:
                     1064  2775 	C$printf.c$724$5_0$90	= .
                           2776 	.globl	C$printf.c$724$5_0$90
                           2777 ;printf.c:724: if (flags & FLAGS_LONG_LONG) {
   1064 7A            [ 4] 2778 	ld	a, d
   1065 B3            [ 4] 2779 	or	a, e
   1066 C2rC8r14      [10] 2780 	jp	NZ, 00180$
                     1069  2781 	C$printf.c$732$1_0$64	= .
                           2782 	.globl	C$printf.c$732$1_0$64
                           2783 ;printf.c:732: idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
   1069 21 12 00      [10] 2784 	ld	hl, #18+0
   106C 39            [11] 2785 	add	hl, sp
   106D 7E            [ 7] 2786 	ld	a, (hl)
   106E FD 21 0A 00   [14] 2787 	ld	iy, #10
   1072 FD 39         [15] 2788 	add	iy, sp
   1074 FD 77 00      [19] 2789 	ld	0 (iy), a
   1077 21 13 00      [10] 2790 	ld	hl, #18+1
   107A 39            [11] 2791 	add	hl, sp
   107B 7E            [ 7] 2792 	ld	a, (hl)
   107C FD 21 0A 00   [14] 2793 	ld	iy, #10
   1080 FD 39         [15] 2794 	add	iy, sp
   1082 FD 77 01      [19] 2795 	ld	1 (iy), a
   1085 AF            [ 4] 2796 	xor	a, a
   1086 FD 77 02      [19] 2797 	ld	2 (iy), a
   1089 FD 77 03      [19] 2798 	ld	3 (iy), a
                     108C  2799 	C$printf.c$730$5_0$90	= .
                           2800 	.globl	C$printf.c$730$5_0$90
                           2801 ;printf.c:730: else if (flags & FLAGS_LONG) {
   108C 21 05 00      [10] 2802 	ld	hl, #4+1
   108F 39            [11] 2803 	add	hl, sp
   1090 7E            [ 7] 2804 	ld	a, (hl)
   1091 0F            [ 4] 2805 	rrca
   1092 D2r93r11      [10] 2806 	jp	NC,00167$
                     1095  2807 	C$printf.c$731$6_0$92	= .
                           2808 	.globl	C$printf.c$731$6_0$92
                           2809 ;printf.c:731: const long value = va_arg(va, long);
   1095 FD 21 1E 00   [14] 2810 	ld	iy, #30
   1099 FD 39         [15] 2811 	add	iy, sp
   109B FD 7E 00      [19] 2812 	ld	a, 0 (iy)
   109E C6 04         [ 7] 2813 	add	a, #0x04
   10A0 4F            [ 4] 2814 	ld	c, a
   10A1 FD 7E 01      [19] 2815 	ld	a, 1 (iy)
   10A4 CE 00         [ 7] 2816 	adc	a, #0x00
   10A6 47            [ 4] 2817 	ld	b, a
   10A7 FD 71 00      [19] 2818 	ld	0 (iy), c
   10AA FD 70 01      [19] 2819 	ld	1 (iy), b
   10AD 79            [ 4] 2820 	ld	a, c
   10AE C6 FC         [ 7] 2821 	add	a, #0xfc
   10B0 5F            [ 4] 2822 	ld	e, a
   10B1 78            [ 4] 2823 	ld	a, b
   10B2 CE FF         [ 7] 2824 	adc	a, #0xff
   10B4 57            [ 4] 2825 	ld	d, a
   10B5 21 00 00      [10] 2826 	ld	hl, #0x0000
   10B8 39            [11] 2827 	add	hl, sp
   10B9 EB            [ 4] 2828 	ex	de, hl
   10BA 01 04 00      [10] 2829 	ld	bc, #0x0004
   10BD ED B0         [21] 2830 	ldir
                     10BF  2831 	C$printf.c$732$6_0$92	= .
                           2832 	.globl	C$printf.c$732$6_0$92
                           2833 ;printf.c:732: idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
   10BF 21 13 00      [10] 2834 	ld	hl, #19
   10C2 39            [11] 2835 	add	hl, sp
   10C3 FD 21 00 00   [14] 2836 	ld	iy, #0
   10C7 FD 39         [15] 2837 	add	iy, sp
   10C9 FD 7E 03      [19] 2838 	ld	a, 3 (iy)
   10CC 07            [ 4] 2839 	rlca
   10CD E6 01         [ 7] 2840 	and	a,#0x01
   10CF 77            [ 7] 2841 	ld	(hl), a
   10D0 AF            [ 4] 2842 	xor	a, a
   10D1 FD BE 00      [19] 2843 	cp	a, 0 (iy)
   10D4 FD 9E 01      [19] 2844 	sbc	a, 1 (iy)
   10D7 3E 00         [ 7] 2845 	ld	a, #0x00
   10D9 FD 9E 02      [19] 2846 	sbc	a, 2 (iy)
   10DC 3E 00         [ 7] 2847 	ld	a, #0x00
   10DE FD 9E 03      [19] 2848 	sbc	a, 3 (iy)
   10E1 E2rE6r10      [10] 2849 	jp	PO, 00691$
   10E4 EE 80         [ 7] 2850 	xor	a, #0x80
   10E6                    2851 00691$:
   10E6 F2rFDr10      [10] 2852 	jp	P, 00236$
   10E9 FD 21 00 00   [14] 2853 	ld	iy, #0
   10ED FD 39         [15] 2854 	add	iy, sp
   10EF FD 4E 00      [19] 2855 	ld	c, 0 (iy)
   10F2 FD 46 01      [19] 2856 	ld	b, 1 (iy)
   10F5 FD 5E 02      [19] 2857 	ld	e, 2 (iy)
   10F8 FD 56 03      [19] 2858 	ld	d, 3 (iy)
   10FB 18 16         [12] 2859 	jr	00237$
   10FD                    2860 00236$:
   10FD 21 00 00      [10] 2861 	ld	hl, #0
   1100 39            [11] 2862 	add	hl, sp
   1101 AF            [ 4] 2863 	xor	a, a
   1102 96            [ 7] 2864 	sub	a, (hl)
   1103 4F            [ 4] 2865 	ld	c, a
   1104 3E 00         [ 7] 2866 	ld	a, #0x00
   1106 23            [ 6] 2867 	inc	hl
   1107 9E            [ 7] 2868 	sbc	a, (hl)
   1108 47            [ 4] 2869 	ld	b, a
   1109 3E 00         [ 7] 2870 	ld	a, #0x00
   110B 23            [ 6] 2871 	inc	hl
   110C 9E            [ 7] 2872 	sbc	a, (hl)
   110D 5F            [ 4] 2873 	ld	e, a
   110E 3E 00         [ 7] 2874 	ld	a, #0x00
   1110 23            [ 6] 2875 	inc	hl
   1111 9E            [ 7] 2876 	sbc	a, (hl)
   1112 57            [ 4] 2877 	ld	d, a
   1113                    2878 00237$:
   1113 FD 21 04 00   [14] 2879 	ld	iy, #4
   1117 FD 39         [15] 2880 	add	iy, sp
   1119 FD 6E 00      [19] 2881 	ld	l, 0 (iy)
   111C FD 66 01      [19] 2882 	ld	h, 1 (iy)
   111F E5            [11] 2883 	push	hl
   1120 FD 23         [10] 2884 	inc	iy
   1122 FD 23         [10] 2885 	inc	iy
   1124 FD 6E 00      [19] 2886 	ld	l, 0 (iy)
   1127 FD 66 01      [19] 2887 	ld	h, 1 (iy)
   112A E5            [11] 2888 	push	hl
   112B FD 23         [10] 2889 	inc	iy
   112D FD 23         [10] 2890 	inc	iy
   112F FD 6E 00      [19] 2891 	ld	l, 0 (iy)
   1132 FD 66 01      [19] 2892 	ld	h, 1 (iy)
   1135 E5            [11] 2893 	push	hl
   1136 FD 23         [10] 2894 	inc	iy
   1138 FD 23         [10] 2895 	inc	iy
   113A FD 6E 02      [19] 2896 	ld	l, 2 (iy)
   113D FD 66 03      [19] 2897 	ld	h, 3 (iy)
   1140 E5            [11] 2898 	push	hl
   1141 FD 6E 00      [19] 2899 	ld	l, 0 (iy)
   1144 FD 66 01      [19] 2900 	ld	h, 1 (iy)
   1147 E5            [11] 2901 	push	hl
   1148 21 1D 00      [10] 2902 	ld	hl, #29+0
   114B 39            [11] 2903 	add	hl, sp
   114C 7E            [ 7] 2904 	ld	a, (hl)
   114D F5            [11] 2905 	push	af
   114E 33            [ 6] 2906 	inc	sp
   114F D5            [11] 2907 	push	de
   1150 C5            [11] 2908 	push	bc
   1151 21 29 00      [10] 2909 	ld	hl, #41
   1154 39            [11] 2910 	add	hl, sp
   1155 4E            [ 7] 2911 	ld	c, (hl)
   1156 23            [ 6] 2912 	inc	hl
   1157 46            [ 7] 2913 	ld	b, (hl)
   1158 C5            [11] 2914 	push	bc
   1159 21 21 00      [10] 2915 	ld	hl, #33
   115C 39            [11] 2916 	add	hl, sp
   115D 4E            [ 7] 2917 	ld	c, (hl)
   115E 23            [ 6] 2918 	inc	hl
   115F 46            [ 7] 2919 	ld	b, (hl)
   1160 C5            [11] 2920 	push	bc
   1161 FD 21 2B 00   [14] 2921 	ld	iy, #43
   1165 FD 39         [15] 2922 	add	iy, sp
   1167 FD 6E 00      [19] 2923 	ld	l, 0 (iy)
   116A FD 66 01      [19] 2924 	ld	h, 1 (iy)
   116D E5            [11] 2925 	push	hl
   116E FD 2B         [10] 2926 	dec	iy
   1170 FD 2B         [10] 2927 	dec	iy
   1172 FD 6E 00      [19] 2928 	ld	l, 0 (iy)
   1175 FD 66 01      [19] 2929 	ld	h, 1 (iy)
   1178 E5            [11] 2930 	push	hl
   1179 CDrCEr06      [17] 2931 	call	__ntoa_long
   117C FD 21 17 00   [14] 2932 	ld	iy, #23
   1180 FD 39         [15] 2933 	add	iy, sp
   1182 FD F9         [10] 2934 	ld	sp, iy
   1184 FD 21 10 00   [14] 2935 	ld	iy, #16
   1188 FD 39         [15] 2936 	add	iy, sp
   118A FD 75 00      [19] 2937 	ld	0 (iy), l
   118D FD 74 01      [19] 2938 	ld	1 (iy), h
   1190 C3rC8r14      [10] 2939 	jp	00180$
   1193                    2940 00167$:
                     1193  2941 	C$printf.c$620$1_0$64	= .
                           2942 	.globl	C$printf.c$620$1_0$64
                           2943 ;printf.c:620: const int w = va_arg(va, int);
   1193 21 12 00      [10] 2944 	ld	hl, #18
   1196 39            [11] 2945 	add	hl, sp
   1197 FD 21 1E 00   [14] 2946 	ld	iy, #30
   119B FD 39         [15] 2947 	add	iy, sp
   119D FD 7E 00      [19] 2948 	ld	a, 0 (iy)
   11A0 C6 02         [ 7] 2949 	add	a, #0x02
   11A2 77            [ 7] 2950 	ld	(hl), a
   11A3 FD 7E 01      [19] 2951 	ld	a, 1 (iy)
   11A6 CE 00         [ 7] 2952 	adc	a, #0x00
   11A8 23            [ 6] 2953 	inc	hl
   11A9 77            [ 7] 2954 	ld	(hl), a
                     11AA  2955 	C$printf.c$735$1_0$64	= .
                           2956 	.globl	C$printf.c$735$1_0$64
                           2957 ;printf.c:735: const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
   11AA 21 12 00      [10] 2958 	ld	hl, #18
   11AD 39            [11] 2959 	add	hl, sp
   11AE 4E            [ 7] 2960 	ld	c, (hl)
   11AF 23            [ 6] 2961 	inc	hl
   11B0 46            [ 7] 2962 	ld	b, (hl)
   11B1 0B            [ 6] 2963 	dec	bc
   11B2 0B            [ 6] 2964 	dec	bc
   11B3 69            [ 4] 2965 	ld	l, c
   11B4 60            [ 4] 2966 	ld	h, b
   11B5 4E            [ 7] 2967 	ld	c, (hl)
   11B6 23            [ 6] 2968 	inc	hl
   11B7 46            [ 7] 2969 	ld	b, (hl)
   11B8 21 04 00      [10] 2970 	ld	hl, #4+0
   11BB 39            [11] 2971 	add	hl, sp
   11BC 7E            [ 7] 2972 	ld	a, (hl)
   11BD E6 40         [ 7] 2973 	and	a, #0x40
   11BF 28 22         [12] 2974 	jr	Z,00238$
   11C1 21 12 00      [10] 2975 	ld	hl, #18+0
   11C4 39            [11] 2976 	add	hl, sp
   11C5 7E            [ 7] 2977 	ld	a, (hl)
   11C6 FD 21 1E 00   [14] 2978 	ld	iy, #30
   11CA FD 39         [15] 2979 	add	iy, sp
   11CC FD 77 00      [19] 2980 	ld	0 (iy), a
   11CF 21 13 00      [10] 2981 	ld	hl, #18+1
   11D2 39            [11] 2982 	add	hl, sp
   11D3 7E            [ 7] 2983 	ld	a, (hl)
   11D4 FD 21 1E 00   [14] 2984 	ld	iy, #30
   11D8 FD 39         [15] 2985 	add	iy, sp
   11DA FD 77 01      [19] 2986 	ld	1 (iy), a
   11DD 79            [ 4] 2987 	ld	a, c
   11DE 17            [ 4] 2988 	rla
   11DF 9F            [ 4] 2989 	sbc	a, a
   11E0 47            [ 4] 2990 	ld	b, a
   11E1 18 42         [12] 2991 	jr	00239$
   11E3                    2992 00238$:
   11E3 21 04 00      [10] 2993 	ld	hl, #4+0
   11E6 39            [11] 2994 	add	hl, sp
   11E7 7E            [ 7] 2995 	ld	a, (hl)
   11E8 07            [ 4] 2996 	rlca
   11E9 30 1E         [12] 2997 	jr	NC,00240$
   11EB 21 12 00      [10] 2998 	ld	hl, #18+0
   11EE 39            [11] 2999 	add	hl, sp
   11EF 7E            [ 7] 3000 	ld	a, (hl)
   11F0 FD 21 1E 00   [14] 3001 	ld	iy, #30
   11F4 FD 39         [15] 3002 	add	iy, sp
   11F6 FD 77 00      [19] 3003 	ld	0 (iy), a
   11F9 21 13 00      [10] 3004 	ld	hl, #18+1
   11FC 39            [11] 3005 	add	hl, sp
   11FD 7E            [ 7] 3006 	ld	a, (hl)
   11FE FD 21 1E 00   [14] 3007 	ld	iy, #30
   1202 FD 39         [15] 3008 	add	iy, sp
   1204 FD 77 01      [19] 3009 	ld	1 (iy), a
   1207 18 1C         [12] 3010 	jr	00241$
   1209                    3011 00240$:
   1209 21 12 00      [10] 3012 	ld	hl, #18+0
   120C 39            [11] 3013 	add	hl, sp
   120D 7E            [ 7] 3014 	ld	a, (hl)
   120E FD 21 1E 00   [14] 3015 	ld	iy, #30
   1212 FD 39         [15] 3016 	add	iy, sp
   1214 FD 77 00      [19] 3017 	ld	0 (iy), a
   1217 21 13 00      [10] 3018 	ld	hl, #18+1
   121A 39            [11] 3019 	add	hl, sp
   121B 7E            [ 7] 3020 	ld	a, (hl)
   121C FD 21 1E 00   [14] 3021 	ld	iy, #30
   1220 FD 39         [15] 3022 	add	iy, sp
   1222 FD 77 01      [19] 3023 	ld	1 (iy), a
   1225                    3024 00241$:
   1225                    3025 00239$:
   1225 FD 21 0E 00   [14] 3026 	ld	iy, #14
   1229 FD 39         [15] 3027 	add	iy, sp
   122B FD 71 00      [19] 3028 	ld	0 (iy), c
   122E FD 70 01      [19] 3029 	ld	1 (iy), b
                     1231  3030 	C$printf.c$736$6_0$93	= .
                           3031 	.globl	C$printf.c$736$6_0$93
                           3032 ;printf.c:736: idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
   1231 21 13 00      [10] 3033 	ld	hl, #19
   1234 39            [11] 3034 	add	hl, sp
   1235 FD 7E 01      [19] 3035 	ld	a, 1 (iy)
   1238 07            [ 4] 3036 	rlca
   1239 E6 01         [ 7] 3037 	and	a,#0x01
   123B 77            [ 7] 3038 	ld	(hl), a
   123C AF            [ 4] 3039 	xor	a, a
   123D FD BE 00      [19] 3040 	cp	a, 0 (iy)
   1240 FD 9E 01      [19] 3041 	sbc	a, 1 (iy)
   1243 E2r48r12      [10] 3042 	jp	PO, 00694$
   1246 EE 80         [ 7] 3043 	xor	a, #0x80
   1248                    3044 00694$:
   1248 F2r54r12      [10] 3045 	jp	P, 00242$
   124B 21 0E 00      [10] 3046 	ld	hl, #14
   124E 39            [11] 3047 	add	hl, sp
   124F 4E            [ 7] 3048 	ld	c, (hl)
   1250 23            [ 6] 3049 	inc	hl
   1251 46            [ 7] 3050 	ld	b, (hl)
   1252 18 0C         [12] 3051 	jr	00243$
   1254                    3052 00242$:
   1254 21 0E 00      [10] 3053 	ld	hl, #14
   1257 39            [11] 3054 	add	hl, sp
   1258 AF            [ 4] 3055 	xor	a, a
   1259 96            [ 7] 3056 	sub	a, (hl)
   125A 4F            [ 4] 3057 	ld	c, a
   125B 3E 00         [ 7] 3058 	ld	a, #0x00
   125D 23            [ 6] 3059 	inc	hl
   125E 9E            [ 7] 3060 	sbc	a, (hl)
   125F 47            [ 4] 3061 	ld	b, a
   1260                    3062 00243$:
   1260 11 00 00      [10] 3063 	ld	de, #0x0000
   1263 FD 21 04 00   [14] 3064 	ld	iy, #4
   1267 FD 39         [15] 3065 	add	iy, sp
   1269 FD 6E 00      [19] 3066 	ld	l, 0 (iy)
   126C FD 66 01      [19] 3067 	ld	h, 1 (iy)
   126F E5            [11] 3068 	push	hl
   1270 FD 23         [10] 3069 	inc	iy
   1272 FD 23         [10] 3070 	inc	iy
   1274 FD 6E 00      [19] 3071 	ld	l, 0 (iy)
   1277 FD 66 01      [19] 3072 	ld	h, 1 (iy)
   127A E5            [11] 3073 	push	hl
   127B FD 23         [10] 3074 	inc	iy
   127D FD 23         [10] 3075 	inc	iy
   127F FD 6E 00      [19] 3076 	ld	l, 0 (iy)
   1282 FD 66 01      [19] 3077 	ld	h, 1 (iy)
   1285 E5            [11] 3078 	push	hl
   1286 FD 23         [10] 3079 	inc	iy
   1288 FD 23         [10] 3080 	inc	iy
   128A FD 6E 02      [19] 3081 	ld	l, 2 (iy)
   128D FD 66 03      [19] 3082 	ld	h, 3 (iy)
   1290 E5            [11] 3083 	push	hl
   1291 FD 6E 00      [19] 3084 	ld	l, 0 (iy)
   1294 FD 66 01      [19] 3085 	ld	h, 1 (iy)
   1297 E5            [11] 3086 	push	hl
   1298 21 1D 00      [10] 3087 	ld	hl, #29+0
   129B 39            [11] 3088 	add	hl, sp
   129C 7E            [ 7] 3089 	ld	a, (hl)
   129D F5            [11] 3090 	push	af
   129E 33            [ 6] 3091 	inc	sp
   129F D5            [11] 3092 	push	de
   12A0 C5            [11] 3093 	push	bc
   12A1 21 29 00      [10] 3094 	ld	hl, #41
   12A4 39            [11] 3095 	add	hl, sp
   12A5 4E            [ 7] 3096 	ld	c, (hl)
   12A6 23            [ 6] 3097 	inc	hl
   12A7 46            [ 7] 3098 	ld	b, (hl)
   12A8 C5            [11] 3099 	push	bc
   12A9 21 21 00      [10] 3100 	ld	hl, #33
   12AC 39            [11] 3101 	add	hl, sp
   12AD 4E            [ 7] 3102 	ld	c, (hl)
   12AE 23            [ 6] 3103 	inc	hl
   12AF 46            [ 7] 3104 	ld	b, (hl)
   12B0 C5            [11] 3105 	push	bc
   12B1 FD 21 2B 00   [14] 3106 	ld	iy, #43
   12B5 FD 39         [15] 3107 	add	iy, sp
   12B7 FD 6E 00      [19] 3108 	ld	l, 0 (iy)
   12BA FD 66 01      [19] 3109 	ld	h, 1 (iy)
   12BD E5            [11] 3110 	push	hl
   12BE FD 2B         [10] 3111 	dec	iy
   12C0 FD 2B         [10] 3112 	dec	iy
   12C2 FD 6E 00      [19] 3113 	ld	l, 0 (iy)
   12C5 FD 66 01      [19] 3114 	ld	h, 1 (iy)
   12C8 E5            [11] 3115 	push	hl
   12C9 CDrCEr06      [17] 3116 	call	__ntoa_long
   12CC FD 21 17 00   [14] 3117 	ld	iy, #23
   12D0 FD 39         [15] 3118 	add	iy, sp
   12D2 FD F9         [10] 3119 	ld	sp, iy
   12D4 FD 21 10 00   [14] 3120 	ld	iy, #16
   12D8 FD 39         [15] 3121 	add	iy, sp
   12DA FD 75 00      [19] 3122 	ld	0 (iy), l
   12DD FD 74 01      [19] 3123 	ld	1 (iy), h
   12E0 C3rC8r14      [10] 3124 	jp	00180$
   12E3                    3125 00179$:
                     12E3  3126 	C$printf.c$741$5_0$94	= .
                           3127 	.globl	C$printf.c$741$5_0$94
                           3128 ;printf.c:741: if (flags & FLAGS_LONG_LONG) {
   12E3 7A            [ 4] 3129 	ld	a, d
   12E4 B3            [ 4] 3130 	or	a, e
   12E5 C2rC8r14      [10] 3131 	jp	NZ, 00180$
                     12E8  3132 	C$printf.c$732$1_0$64	= .
                           3133 	.globl	C$printf.c$732$1_0$64
                           3134 ;printf.c:732: idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
   12E8 21 12 00      [10] 3135 	ld	hl, #18+0
   12EB 39            [11] 3136 	add	hl, sp
   12EC 7E            [ 7] 3137 	ld	a, (hl)
   12ED FD 21 0C 00   [14] 3138 	ld	iy, #12
   12F1 FD 39         [15] 3139 	add	iy, sp
   12F3 FD 77 00      [19] 3140 	ld	0 (iy), a
   12F6 21 13 00      [10] 3141 	ld	hl, #18+1
   12F9 39            [11] 3142 	add	hl, sp
   12FA 7E            [ 7] 3143 	ld	a, (hl)
   12FB FD 21 0C 00   [14] 3144 	ld	iy, #12
   12FF FD 39         [15] 3145 	add	iy, sp
   1301 FD 77 01      [19] 3146 	ld	1 (iy), a
   1304 AF            [ 4] 3147 	xor	a, a
   1305 FD 77 02      [19] 3148 	ld	2 (iy), a
   1308 FD 77 03      [19] 3149 	ld	3 (iy), a
                     130B  3150 	C$printf.c$746$5_0$94	= .
                           3151 	.globl	C$printf.c$746$5_0$94
                           3152 ;printf.c:746: else if (flags & FLAGS_LONG) {
   130B 21 05 00      [10] 3153 	ld	hl, #4+1
   130E 39            [11] 3154 	add	hl, sp
   130F 7E            [ 7] 3155 	ld	a, (hl)
   1310 0F            [ 4] 3156 	rrca
   1311 D2rBAr13      [10] 3157 	jp	NC,00173$
                     1314  3158 	C$printf.c$747$6_0$96	= .
                           3159 	.globl	C$printf.c$747$6_0$96
                           3160 ;printf.c:747: idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
   1314 FD 21 1E 00   [14] 3161 	ld	iy, #30
   1318 FD 39         [15] 3162 	add	iy, sp
   131A FD 7E 00      [19] 3163 	ld	a, 0 (iy)
   131D C6 04         [ 7] 3164 	add	a, #0x04
   131F 4F            [ 4] 3165 	ld	c, a
   1320 FD 7E 01      [19] 3166 	ld	a, 1 (iy)
   1323 CE 00         [ 7] 3167 	adc	a, #0x00
   1325 47            [ 4] 3168 	ld	b, a
   1326 FD 71 00      [19] 3169 	ld	0 (iy), c
   1329 FD 70 01      [19] 3170 	ld	1 (iy), b
   132C 79            [ 4] 3171 	ld	a, c
   132D C6 FC         [ 7] 3172 	add	a, #0xfc
   132F 4F            [ 4] 3173 	ld	c, a
   1330 78            [ 4] 3174 	ld	a, b
   1331 CE FF         [ 7] 3175 	adc	a, #0xff
   1333 69            [ 4] 3176 	ld	l, c
   1334 67            [ 4] 3177 	ld	h, a
   1335 4E            [ 7] 3178 	ld	c, (hl)
   1336 23            [ 6] 3179 	inc	hl
   1337 46            [ 7] 3180 	ld	b, (hl)
   1338 23            [ 6] 3181 	inc	hl
   1339 5E            [ 7] 3182 	ld	e, (hl)
   133A 23            [ 6] 3183 	inc	hl
   133B 56            [ 7] 3184 	ld	d, (hl)
   133C FD 21 04 00   [14] 3185 	ld	iy, #4
   1340 FD 39         [15] 3186 	add	iy, sp
   1342 FD 6E 00      [19] 3187 	ld	l, 0 (iy)
   1345 FD 66 01      [19] 3188 	ld	h, 1 (iy)
   1348 E5            [11] 3189 	push	hl
   1349 FD 23         [10] 3190 	inc	iy
   134B FD 23         [10] 3191 	inc	iy
   134D FD 6E 00      [19] 3192 	ld	l, 0 (iy)
   1350 FD 66 01      [19] 3193 	ld	h, 1 (iy)
   1353 E5            [11] 3194 	push	hl
   1354 FD 23         [10] 3195 	inc	iy
   1356 FD 23         [10] 3196 	inc	iy
   1358 FD 6E 00      [19] 3197 	ld	l, 0 (iy)
   135B FD 66 01      [19] 3198 	ld	h, 1 (iy)
   135E E5            [11] 3199 	push	hl
   135F FD 21 12 00   [14] 3200 	ld	iy, #18
   1363 FD 39         [15] 3201 	add	iy, sp
   1365 FD 6E 02      [19] 3202 	ld	l, 2 (iy)
   1368 FD 66 03      [19] 3203 	ld	h, 3 (iy)
   136B E5            [11] 3204 	push	hl
   136C FD 6E 00      [19] 3205 	ld	l, 0 (iy)
   136F FD 66 01      [19] 3206 	ld	h, 1 (iy)
   1372 E5            [11] 3207 	push	hl
   1373 AF            [ 4] 3208 	xor	a, a
   1374 F5            [11] 3209 	push	af
   1375 33            [ 6] 3210 	inc	sp
   1376 D5            [11] 3211 	push	de
   1377 C5            [11] 3212 	push	bc
   1378 21 29 00      [10] 3213 	ld	hl, #41
   137B 39            [11] 3214 	add	hl, sp
   137C 4E            [ 7] 3215 	ld	c, (hl)
   137D 23            [ 6] 3216 	inc	hl
   137E 46            [ 7] 3217 	ld	b, (hl)
   137F C5            [11] 3218 	push	bc
   1380 21 21 00      [10] 3219 	ld	hl, #33
   1383 39            [11] 3220 	add	hl, sp
   1384 4E            [ 7] 3221 	ld	c, (hl)
   1385 23            [ 6] 3222 	inc	hl
   1386 46            [ 7] 3223 	ld	b, (hl)
   1387 C5            [11] 3224 	push	bc
   1388 FD 21 2B 00   [14] 3225 	ld	iy, #43
   138C FD 39         [15] 3226 	add	iy, sp
   138E FD 6E 00      [19] 3227 	ld	l, 0 (iy)
   1391 FD 66 01      [19] 3228 	ld	h, 1 (iy)
   1394 E5            [11] 3229 	push	hl
   1395 FD 2B         [10] 3230 	dec	iy
   1397 FD 2B         [10] 3231 	dec	iy
   1399 FD 6E 00      [19] 3232 	ld	l, 0 (iy)
   139C FD 66 01      [19] 3233 	ld	h, 1 (iy)
   139F E5            [11] 3234 	push	hl
   13A0 CDrCEr06      [17] 3235 	call	__ntoa_long
   13A3 FD 21 17 00   [14] 3236 	ld	iy, #23
   13A7 FD 39         [15] 3237 	add	iy, sp
   13A9 FD F9         [10] 3238 	ld	sp, iy
   13AB FD 21 10 00   [14] 3239 	ld	iy, #16
   13AF FD 39         [15] 3240 	add	iy, sp
   13B1 FD 75 00      [19] 3241 	ld	0 (iy), l
   13B4 FD 74 01      [19] 3242 	ld	1 (iy), h
   13B7 C3rC8r14      [10] 3243 	jp	00180$
   13BA                    3244 00173$:
                     13BA  3245 	C$printf.c$620$1_0$64	= .
                           3246 	.globl	C$printf.c$620$1_0$64
                           3247 ;printf.c:620: const int w = va_arg(va, int);
   13BA 21 12 00      [10] 3248 	ld	hl, #18
   13BD 39            [11] 3249 	add	hl, sp
   13BE FD 21 1E 00   [14] 3250 	ld	iy, #30
   13C2 FD 39         [15] 3251 	add	iy, sp
   13C4 FD 7E 00      [19] 3252 	ld	a, 0 (iy)
   13C7 C6 02         [ 7] 3253 	add	a, #0x02
   13C9 77            [ 7] 3254 	ld	(hl), a
   13CA FD 7E 01      [19] 3255 	ld	a, 1 (iy)
   13CD CE 00         [ 7] 3256 	adc	a, #0x00
   13CF 23            [ 6] 3257 	inc	hl
   13D0 77            [ 7] 3258 	ld	(hl), a
                     13D1  3259 	C$printf.c$735$1_0$64	= .
                           3260 	.globl	C$printf.c$735$1_0$64
                           3261 ;printf.c:735: const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
   13D1 21 12 00      [10] 3262 	ld	hl, #18
   13D4 39            [11] 3263 	add	hl, sp
   13D5 4E            [ 7] 3264 	ld	c, (hl)
   13D6 23            [ 6] 3265 	inc	hl
   13D7 46            [ 7] 3266 	ld	b, (hl)
   13D8 0B            [ 6] 3267 	dec	bc
   13D9 0B            [ 6] 3268 	dec	bc
                     13DA  3269 	C$printf.c$750$1_0$64	= .
                           3270 	.globl	C$printf.c$750$1_0$64
                           3271 ;printf.c:750: const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
   13DA 69            [ 4] 3272 	ld	l, c
   13DB 60            [ 4] 3273 	ld	h, b
   13DC 4E            [ 7] 3274 	ld	c, (hl)
   13DD 23            [ 6] 3275 	inc	hl
   13DE 46            [ 7] 3276 	ld	b, (hl)
   13DF 21 04 00      [10] 3277 	ld	hl, #4+0
   13E2 39            [11] 3278 	add	hl, sp
   13E3 7E            [ 7] 3279 	ld	a, (hl)
   13E4 E6 40         [ 7] 3280 	and	a, #0x40
   13E6 28 20         [12] 3281 	jr	Z,00244$
   13E8 21 12 00      [10] 3282 	ld	hl, #18+0
   13EB 39            [11] 3283 	add	hl, sp
   13EC 7E            [ 7] 3284 	ld	a, (hl)
   13ED FD 21 1E 00   [14] 3285 	ld	iy, #30
   13F1 FD 39         [15] 3286 	add	iy, sp
   13F3 FD 77 00      [19] 3287 	ld	0 (iy), a
   13F6 21 13 00      [10] 3288 	ld	hl, #18+1
   13F9 39            [11] 3289 	add	hl, sp
   13FA 7E            [ 7] 3290 	ld	a, (hl)
   13FB FD 21 1E 00   [14] 3291 	ld	iy, #30
   13FF FD 39         [15] 3292 	add	iy, sp
   1401 FD 77 01      [19] 3293 	ld	1 (iy), a
   1404 06 00         [ 7] 3294 	ld	b, #0x00
   1406 18 42         [12] 3295 	jr	00245$
   1408                    3296 00244$:
   1408 21 04 00      [10] 3297 	ld	hl, #4+0
   140B 39            [11] 3298 	add	hl, sp
   140C 7E            [ 7] 3299 	ld	a, (hl)
   140D 07            [ 4] 3300 	rlca
   140E 30 1E         [12] 3301 	jr	NC,00246$
   1410 21 12 00      [10] 3302 	ld	hl, #18+0
   1413 39            [11] 3303 	add	hl, sp
   1414 7E            [ 7] 3304 	ld	a, (hl)
   1415 FD 21 1E 00   [14] 3305 	ld	iy, #30
   1419 FD 39         [15] 3306 	add	iy, sp
   141B FD 77 00      [19] 3307 	ld	0 (iy), a
   141E 21 13 00      [10] 3308 	ld	hl, #18+1
   1421 39            [11] 3309 	add	hl, sp
   1422 7E            [ 7] 3310 	ld	a, (hl)
   1423 FD 21 1E 00   [14] 3311 	ld	iy, #30
   1427 FD 39         [15] 3312 	add	iy, sp
   1429 FD 77 01      [19] 3313 	ld	1 (iy), a
   142C 18 1C         [12] 3314 	jr	00247$
   142E                    3315 00246$:
   142E 21 12 00      [10] 3316 	ld	hl, #18+0
   1431 39            [11] 3317 	add	hl, sp
   1432 7E            [ 7] 3318 	ld	a, (hl)
   1433 FD 21 1E 00   [14] 3319 	ld	iy, #30
   1437 FD 39         [15] 3320 	add	iy, sp
   1439 FD 77 00      [19] 3321 	ld	0 (iy), a
   143C 21 13 00      [10] 3322 	ld	hl, #18+1
   143F 39            [11] 3323 	add	hl, sp
   1440 7E            [ 7] 3324 	ld	a, (hl)
   1441 FD 21 1E 00   [14] 3325 	ld	iy, #30
   1445 FD 39         [15] 3326 	add	iy, sp
   1447 FD 77 01      [19] 3327 	ld	1 (iy), a
   144A                    3328 00247$:
   144A                    3329 00245$:
                     144A  3330 	C$printf.c$751$6_0$97	= .
                           3331 	.globl	C$printf.c$751$6_0$97
                           3332 ;printf.c:751: idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
   144A 11 00 00      [10] 3333 	ld	de, #0x0000
   144D FD 21 04 00   [14] 3334 	ld	iy, #4
   1451 FD 39         [15] 3335 	add	iy, sp
   1453 FD 6E 00      [19] 3336 	ld	l, 0 (iy)
   1456 FD 66 01      [19] 3337 	ld	h, 1 (iy)
   1459 E5            [11] 3338 	push	hl
   145A FD 23         [10] 3339 	inc	iy
   145C FD 23         [10] 3340 	inc	iy
   145E FD 6E 00      [19] 3341 	ld	l, 0 (iy)
   1461 FD 66 01      [19] 3342 	ld	h, 1 (iy)
   1464 E5            [11] 3343 	push	hl
   1465 FD 23         [10] 3344 	inc	iy
   1467 FD 23         [10] 3345 	inc	iy
   1469 FD 6E 00      [19] 3346 	ld	l, 0 (iy)
   146C FD 66 01      [19] 3347 	ld	h, 1 (iy)
   146F E5            [11] 3348 	push	hl
   1470 FD 21 12 00   [14] 3349 	ld	iy, #18
   1474 FD 39         [15] 3350 	add	iy, sp
   1476 FD 6E 02      [19] 3351 	ld	l, 2 (iy)
   1479 FD 66 03      [19] 3352 	ld	h, 3 (iy)
   147C E5            [11] 3353 	push	hl
   147D FD 6E 00      [19] 3354 	ld	l, 0 (iy)
   1480 FD 66 01      [19] 3355 	ld	h, 1 (iy)
   1483 E5            [11] 3356 	push	hl
   1484 AF            [ 4] 3357 	xor	a, a
   1485 F5            [11] 3358 	push	af
   1486 33            [ 6] 3359 	inc	sp
   1487 D5            [11] 3360 	push	de
   1488 C5            [11] 3361 	push	bc
   1489 21 29 00      [10] 3362 	ld	hl, #41
   148C 39            [11] 3363 	add	hl, sp
   148D 4E            [ 7] 3364 	ld	c, (hl)
   148E 23            [ 6] 3365 	inc	hl
   148F 46            [ 7] 3366 	ld	b, (hl)
   1490 C5            [11] 3367 	push	bc
   1491 21 21 00      [10] 3368 	ld	hl, #33
   1494 39            [11] 3369 	add	hl, sp
   1495 4E            [ 7] 3370 	ld	c, (hl)
   1496 23            [ 6] 3371 	inc	hl
   1497 46            [ 7] 3372 	ld	b, (hl)
   1498 C5            [11] 3373 	push	bc
   1499 FD 21 2B 00   [14] 3374 	ld	iy, #43
   149D FD 39         [15] 3375 	add	iy, sp
   149F FD 6E 00      [19] 3376 	ld	l, 0 (iy)
   14A2 FD 66 01      [19] 3377 	ld	h, 1 (iy)
   14A5 E5            [11] 3378 	push	hl
   14A6 FD 2B         [10] 3379 	dec	iy
   14A8 FD 2B         [10] 3380 	dec	iy
   14AA FD 6E 00      [19] 3381 	ld	l, 0 (iy)
   14AD FD 66 01      [19] 3382 	ld	h, 1 (iy)
   14B0 E5            [11] 3383 	push	hl
   14B1 CDrCEr06      [17] 3384 	call	__ntoa_long
   14B4 FD 21 17 00   [14] 3385 	ld	iy, #23
   14B8 FD 39         [15] 3386 	add	iy, sp
   14BA FD F9         [10] 3387 	ld	sp, iy
   14BC FD 21 10 00   [14] 3388 	ld	iy, #16
   14C0 FD 39         [15] 3389 	add	iy, sp
   14C2 FD 75 00      [19] 3390 	ld	0 (iy), l
   14C5 FD 74 01      [19] 3391 	ld	1 (iy), h
   14C8                    3392 00180$:
                     14C8  3393 	C$printf.c$754$4_0$82	= .
                           3394 	.globl	C$printf.c$754$4_0$82
                           3395 ;printf.c:754: format++;
   14C8 FD 21 1C 00   [14] 3396 	ld	iy, #28
   14CC FD 39         [15] 3397 	add	iy, sp
   14CE FD 34 00      [23] 3398 	inc	0 (iy)
   14D1 C2rCAr08      [10] 3399 	jp	NZ,00215$
   14D4 FD 34 01      [23] 3400 	inc	1 (iy)
                     14D7  3401 	C$printf.c$755$4_0$82	= .
                           3402 	.globl	C$printf.c$755$4_0$82
                           3403 ;printf.c:755: break;
   14D7 C3rCAr08      [10] 3404 	jp	00215$
                     14DA  3405 	C$printf.c$776$3_0$81	= .
                           3406 	.globl	C$printf.c$776$3_0$81
                           3407 ;printf.c:776: case 'c' : {
   14DA                    3408 00182$:
                     14DA  3409 	C$printf.c$777$5_0$98	= .
                           3410 	.globl	C$printf.c$777$5_0$98
                           3411 ;printf.c:777: unsigned int l = 1U;
   14DA FD 21 12 00   [14] 3412 	ld	iy, #18
   14DE FD 39         [15] 3413 	add	iy, sp
   14E0 FD 36 00 01   [19] 3414 	ld	0 (iy), #0x01
   14E4 AF            [ 4] 3415 	xor	a, a
   14E5 FD 77 01      [19] 3416 	ld	1 (iy), a
                     14E8  3417 	C$printf.c$779$4_0$98	= .
                           3418 	.globl	C$printf.c$779$4_0$98
                           3419 ;printf.c:779: if (!(flags & FLAGS_LEFT)) {
   14E8 21 04 00      [10] 3420 	ld	hl, #4+0
   14EB 39            [11] 3421 	add	hl, sp
   14EC 7E            [ 7] 3422 	ld	a, (hl)
   14ED E6 02         [ 7] 3423 	and	a, #0x02
   14EF FD 21 0E 00   [14] 3424 	ld	iy, #14
   14F3 FD 39         [15] 3425 	add	iy, sp
   14F5 FD 77 00      [19] 3426 	ld	0 (iy), a
   14F8 FD 36 01 00   [19] 3427 	ld	1 (iy), #0x00
                     14FC  3428 	C$printf.c$592$1_0$64	= .
                           3429 	.globl	C$printf.c$592$1_0$64
                           3430 ;printf.c:592: out(*format, buffer, idx++, maxlen);
   14FC 21 18 00      [10] 3431 	ld	hl, #24+0
   14FF 39            [11] 3432 	add	hl, sp
   1500 7E            [ 7] 3433 	ld	a, (hl)
   1501 FD 21 0C 00   [14] 3434 	ld	iy, #12
   1505 FD 39         [15] 3435 	add	iy, sp
   1507 FD 77 00      [19] 3436 	ld	0 (iy), a
   150A 21 19 00      [10] 3437 	ld	hl, #24+1
   150D 39            [11] 3438 	add	hl, sp
   150E 7E            [ 7] 3439 	ld	a, (hl)
   150F FD 21 0C 00   [14] 3440 	ld	iy, #12
   1513 FD 39         [15] 3441 	add	iy, sp
   1515 FD 77 01      [19] 3442 	ld	1 (iy), a
                     1518  3443 	C$printf.c$779$4_0$98	= .
                           3444 	.globl	C$printf.c$779$4_0$98
                           3445 ;printf.c:779: if (!(flags & FLAGS_LEFT)) {
   1518 FD 23         [10] 3446 	inc	iy
   151A FD 23         [10] 3447 	inc	iy
   151C FD 7E 01      [19] 3448 	ld	a, 1 (iy)
   151F FD B6 00      [19] 3449 	or	a, 0 (iy)
   1522 20 67         [12] 3450 	jr	NZ,00187$
                     1524  3451 	C$printf.c$780$1_0$64	= .
                           3452 	.globl	C$printf.c$780$1_0$64
                           3453 ;printf.c:780: while (l++ < width) {
   1524 FD 21 12 00   [14] 3454 	ld	iy, #18
   1528 FD 39         [15] 3455 	add	iy, sp
   152A FD 36 00 01   [19] 3456 	ld	0 (iy), #0x01
   152E AF            [ 4] 3457 	xor	a, a
   152F FD 77 01      [19] 3458 	ld	1 (iy), a
   1532                    3459 00183$:
   1532 FD 21 12 00   [14] 3460 	ld	iy, #18
   1536 FD 39         [15] 3461 	add	iy, sp
   1538 FD 4E 00      [19] 3462 	ld	c, 0 (iy)
   153B FD 46 01      [19] 3463 	ld	b, 1 (iy)
   153E FD 34 00      [23] 3464 	inc	0 (iy)
   1541 20 03         [12] 3465 	jr	NZ,00699$
   1543 FD 34 01      [23] 3466 	inc	1 (iy)
   1546                    3467 00699$:
   1546 21 06 00      [10] 3468 	ld	hl, #6
   1549 39            [11] 3469 	add	hl, sp
   154A 79            [ 4] 3470 	ld	a, c
   154B 96            [ 7] 3471 	sub	a, (hl)
   154C 78            [ 4] 3472 	ld	a, b
   154D 23            [ 6] 3473 	inc	hl
   154E 9E            [ 7] 3474 	sbc	a, (hl)
   154F 30 3A         [12] 3475 	jr	NC,00327$
                     1551  3476 	C$printf.c$781$6_0$100	= .
                           3477 	.globl	C$printf.c$781$6_0$100
                           3478 ;printf.c:781: out(' ', buffer, idx++, maxlen);
   1551 FD 2B         [10] 3479 	dec	iy
   1553 FD 2B         [10] 3480 	dec	iy
   1555 FD 4E 00      [19] 3481 	ld	c, 0 (iy)
   1558 FD 46 01      [19] 3482 	ld	b, 1 (iy)
   155B FD 34 00      [23] 3483 	inc	0 (iy)
   155E 20 03         [12] 3484 	jr	NZ,00700$
   1560 FD 34 01      [23] 3485 	inc	1 (iy)
   1563                    3486 00700$:
   1563 21 1A 00      [10] 3487 	ld	hl, #26
   1566 39            [11] 3488 	add	hl, sp
   1567 7E            [ 7] 3489 	ld	a, (hl)
   1568 23            [ 6] 3490 	inc	hl
   1569 66            [ 7] 3491 	ld	h, (hl)
   156A 6F            [ 4] 3492 	ld	l, a
   156B E5            [11] 3493 	push	hl
   156C C5            [11] 3494 	push	bc
   156D 21 10 00      [10] 3495 	ld	hl, #16
   1570 39            [11] 3496 	add	hl, sp
   1571 4E            [ 7] 3497 	ld	c, (hl)
   1572 23            [ 6] 3498 	inc	hl
   1573 46            [ 7] 3499 	ld	b, (hl)
   1574 C5            [11] 3500 	push	bc
   1575 3E 20         [ 7] 3501 	ld	a, #0x20
   1577 F5            [11] 3502 	push	af
   1578 33            [ 6] 3503 	inc	sp
   1579 21 1D 00      [10] 3504 	ld	hl, #29
   157C 39            [11] 3505 	add	hl, sp
   157D 7E            [ 7] 3506 	ld	a, (hl)
   157E 23            [ 6] 3507 	inc	hl
   157F 66            [ 7] 3508 	ld	h, (hl)
   1580 6F            [ 4] 3509 	ld	l, a
   1581 CDr00r00      [17] 3510 	call	___sdcc_call_hl
   1584 21 07 00      [10] 3511 	ld	hl, #7
   1587 39            [11] 3512 	add	hl, sp
   1588 F9            [ 6] 3513 	ld	sp, hl
   1589 18 A7         [12] 3514 	jr	00183$
   158B                    3515 00327$:
   158B                    3516 00187$:
                     158B  3517 	C$printf.c$785$4_0$98	= .
                           3518 	.globl	C$printf.c$785$4_0$98
                           3519 ;printf.c:785: out((char)va_arg(va, int), buffer, idx++, maxlen);
   158B FD 21 10 00   [14] 3520 	ld	iy, #16
   158F FD 39         [15] 3521 	add	iy, sp
   1591 FD 4E 00      [19] 3522 	ld	c, 0 (iy)
   1594 FD 46 01      [19] 3523 	ld	b, 1 (iy)
   1597 FD 34 00      [23] 3524 	inc	0 (iy)
   159A 20 03         [12] 3525 	jr	NZ,00701$
   159C FD 34 01      [23] 3526 	inc	1 (iy)
   159F                    3527 00701$:
   159F FD 21 1E 00   [14] 3528 	ld	iy, #30
   15A3 FD 39         [15] 3529 	add	iy, sp
   15A5 FD 5E 00      [19] 3530 	ld	e, 0 (iy)
   15A8 FD 56 01      [19] 3531 	ld	d, 1 (iy)
   15AB 13            [ 6] 3532 	inc	de
   15AC 13            [ 6] 3533 	inc	de
   15AD FD 73 00      [19] 3534 	ld	0 (iy), e
   15B0 FD 72 01      [19] 3535 	ld	1 (iy), d
   15B3 1B            [ 6] 3536 	dec	de
   15B4 1B            [ 6] 3537 	dec	de
   15B5 1A            [ 7] 3538 	ld	a, (de)
   15B6 57            [ 4] 3539 	ld	d, a
   15B7 21 1A 00      [10] 3540 	ld	hl, #26
   15BA 39            [11] 3541 	add	hl, sp
   15BB 7E            [ 7] 3542 	ld	a, (hl)
   15BC 23            [ 6] 3543 	inc	hl
   15BD 66            [ 7] 3544 	ld	h, (hl)
   15BE 6F            [ 4] 3545 	ld	l, a
   15BF E5            [11] 3546 	push	hl
   15C0 C5            [11] 3547 	push	bc
   15C1 21 10 00      [10] 3548 	ld	hl, #16
   15C4 39            [11] 3549 	add	hl, sp
   15C5 4E            [ 7] 3550 	ld	c, (hl)
   15C6 23            [ 6] 3551 	inc	hl
   15C7 46            [ 7] 3552 	ld	b, (hl)
   15C8 C5            [11] 3553 	push	bc
   15C9 D5            [11] 3554 	push	de
   15CA 33            [ 6] 3555 	inc	sp
   15CB 21 1D 00      [10] 3556 	ld	hl, #29
   15CE 39            [11] 3557 	add	hl, sp
   15CF 7E            [ 7] 3558 	ld	a, (hl)
   15D0 23            [ 6] 3559 	inc	hl
   15D1 66            [ 7] 3560 	ld	h, (hl)
   15D2 6F            [ 4] 3561 	ld	l, a
   15D3 CDr00r00      [17] 3562 	call	___sdcc_call_hl
   15D6 21 07 00      [10] 3563 	ld	hl, #7
   15D9 39            [11] 3564 	add	hl, sp
   15DA F9            [ 6] 3565 	ld	sp, hl
                     15DB  3566 	C$printf.c$787$4_0$98	= .
                           3567 	.globl	C$printf.c$787$4_0$98
                           3568 ;printf.c:787: if (flags & FLAGS_LEFT) {
   15DB FD 21 0E 00   [14] 3569 	ld	iy, #14
   15DF FD 39         [15] 3570 	add	iy, sp
   15E1 FD 7E 01      [19] 3571 	ld	a, 1 (iy)
   15E4 FD B6 00      [19] 3572 	or	a, 0 (iy)
   15E7 28 5F         [12] 3573 	jr	Z,00192$
                     15E9  3574 	C$printf.c$788$1_0$64	= .
                           3575 	.globl	C$printf.c$788$1_0$64
                           3576 ;printf.c:788: while (l++ < width) {
   15E9 FD 23         [10] 3577 	inc	iy
   15EB FD 23         [10] 3578 	inc	iy
   15ED FD 4E 00      [19] 3579 	ld	c, 0 (iy)
   15F0 FD 46 01      [19] 3580 	ld	b, 1 (iy)
   15F3                    3581 00188$:
   15F3 21 06 00      [10] 3582 	ld	hl, #6
   15F6 39            [11] 3583 	add	hl, sp
   15F7 FD 21 12 00   [14] 3584 	ld	iy, #18
   15FB FD 39         [15] 3585 	add	iy, sp
   15FD FD 7E 00      [19] 3586 	ld	a, 0 (iy)
   1600 96            [ 7] 3587 	sub	a, (hl)
   1601 FD 7E 01      [19] 3588 	ld	a, 1 (iy)
   1604 23            [ 6] 3589 	inc	hl
   1605 9E            [ 7] 3590 	sbc	a, (hl)
   1606 30 34         [12] 3591 	jr	NC,00328$
   1608 FD 34 00      [23] 3592 	inc	0 (iy)
   160B 20 03         [12] 3593 	jr	NZ,00702$
   160D FD 34 01      [23] 3594 	inc	1 (iy)
   1610                    3595 00702$:
                     1610  3596 	C$printf.c$789$6_0$102	= .
                           3597 	.globl	C$printf.c$789$6_0$102
                           3598 ;printf.c:789: out(' ', buffer, idx++, maxlen);
   1610 59            [ 4] 3599 	ld	e, c
   1611 50            [ 4] 3600 	ld	d, b
   1612 03            [ 6] 3601 	inc	bc
   1613 C5            [11] 3602 	push	bc
   1614 21 1C 00      [10] 3603 	ld	hl, #28
   1617 39            [11] 3604 	add	hl, sp
   1618 4E            [ 7] 3605 	ld	c, (hl)
   1619 23            [ 6] 3606 	inc	hl
   161A 46            [ 7] 3607 	ld	b, (hl)
   161B C5            [11] 3608 	push	bc
   161C D5            [11] 3609 	push	de
   161D 21 12 00      [10] 3610 	ld	hl, #18
   1620 39            [11] 3611 	add	hl, sp
   1621 4E            [ 7] 3612 	ld	c, (hl)
   1622 23            [ 6] 3613 	inc	hl
   1623 46            [ 7] 3614 	ld	b, (hl)
   1624 C5            [11] 3615 	push	bc
   1625 3E 20         [ 7] 3616 	ld	a, #0x20
   1627 F5            [11] 3617 	push	af
   1628 33            [ 6] 3618 	inc	sp
   1629 21 1F 00      [10] 3619 	ld	hl, #31
   162C 39            [11] 3620 	add	hl, sp
   162D 7E            [ 7] 3621 	ld	a, (hl)
   162E 23            [ 6] 3622 	inc	hl
   162F 66            [ 7] 3623 	ld	h, (hl)
   1630 6F            [ 4] 3624 	ld	l, a
   1631 CDr00r00      [17] 3625 	call	___sdcc_call_hl
   1634 21 07 00      [10] 3626 	ld	hl, #7
   1637 39            [11] 3627 	add	hl, sp
   1638 F9            [ 6] 3628 	ld	sp, hl
   1639 C1            [10] 3629 	pop	bc
   163A 18 B7         [12] 3630 	jr	00188$
   163C                    3631 00328$:
   163C FD 21 10 00   [14] 3632 	ld	iy, #16
   1640 FD 39         [15] 3633 	add	iy, sp
   1642 FD 71 00      [19] 3634 	ld	0 (iy), c
   1645 FD 70 01      [19] 3635 	ld	1 (iy), b
   1648                    3636 00192$:
                     1648  3637 	C$printf.c$792$4_0$98	= .
                           3638 	.globl	C$printf.c$792$4_0$98
                           3639 ;printf.c:792: format++;
   1648 FD 21 1C 00   [14] 3640 	ld	iy, #28
   164C FD 39         [15] 3641 	add	iy, sp
   164E FD 34 00      [23] 3642 	inc	0 (iy)
   1651 C2rCAr08      [10] 3643 	jp	NZ,00215$
   1654 FD 34 01      [23] 3644 	inc	1 (iy)
                     1657  3645 	C$printf.c$793$4_0$98	= .
                           3646 	.globl	C$printf.c$793$4_0$98
                           3647 ;printf.c:793: break;
   1657 C3rCAr08      [10] 3648 	jp	00215$
                     165A  3649 	C$printf.c$796$3_0$81	= .
                           3650 	.globl	C$printf.c$796$3_0$81
                           3651 ;printf.c:796: case 's' : {
   165A                    3652 00193$:
                     165A  3653 	C$printf.c$797$4_0$103	= .
                           3654 	.globl	C$printf.c$797$4_0$103
                           3655 ;printf.c:797: const char* p = va_arg(va, char*);
   165A FD 21 1E 00   [14] 3656 	ld	iy, #30
   165E FD 39         [15] 3657 	add	iy, sp
   1660 FD 4E 00      [19] 3658 	ld	c, 0 (iy)
   1663 FD 46 01      [19] 3659 	ld	b, 1 (iy)
   1666 03            [ 6] 3660 	inc	bc
   1667 03            [ 6] 3661 	inc	bc
   1668 FD 71 00      [19] 3662 	ld	0 (iy), c
   166B FD 70 01      [19] 3663 	ld	1 (iy), b
   166E 0B            [ 6] 3664 	dec	bc
   166F 0B            [ 6] 3665 	dec	bc
   1670 69            [ 4] 3666 	ld	l, c
   1671 60            [ 4] 3667 	ld	h, b
   1672 7E            [ 7] 3668 	ld	a, (hl)
   1673 FD 21 0A 00   [14] 3669 	ld	iy, #10
   1677 FD 39         [15] 3670 	add	iy, sp
   1679 FD 77 00      [19] 3671 	ld	0 (iy), a
   167C 23            [ 6] 3672 	inc	hl
   167D 7E            [ 7] 3673 	ld	a, (hl)
   167E FD 77 01      [19] 3674 	ld	1 (iy), a
                     1681  3675 	C$printf.c$798$5_0$117	= .
                           3676 	.globl	C$printf.c$798$5_0$117
                           3677 ;printf.c:798: unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
   1681 FD 2B         [10] 3678 	dec	iy
   1683 FD 2B         [10] 3679 	dec	iy
   1685 FD 7E 01      [19] 3680 	ld	a, 1 (iy)
   1688 FD B6 00      [19] 3681 	or	a, 0 (iy)
   168B 28 08         [12] 3682 	jr	Z,00248$
   168D FD 4E 00      [19] 3683 	ld	c, 0 (iy)
   1690 FD 46 01      [19] 3684 	ld	b, 1 (iy)
   1693 18 03         [12] 3685 	jr	00249$
   1695                    3686 00248$:
   1695 01 FF FF      [10] 3687 	ld	bc, #0xffff
   1698                    3688 00249$:
   1698 FD 21 12 00   [14] 3689 	ld	iy, #18
   169C FD 39         [15] 3690 	add	iy, sp
   169E FD 71 00      [19] 3691 	ld	0 (iy), c
   16A1 FD 70 01      [19] 3692 	ld	1 (iy), b
   16A4 21 0A 00      [10] 3693 	ld	hl, #10+0
   16A7 39            [11] 3694 	add	hl, sp
   16A8 7E            [ 7] 3695 	ld	a, (hl)
   16A9 FD 21 0E 00   [14] 3696 	ld	iy, #14
   16AD FD 39         [15] 3697 	add	iy, sp
   16AF FD 77 00      [19] 3698 	ld	0 (iy), a
   16B2 21 0B 00      [10] 3699 	ld	hl, #10+1
   16B5 39            [11] 3700 	add	hl, sp
   16B6 7E            [ 7] 3701 	ld	a, (hl)
   16B7 FD 21 0E 00   [14] 3702 	ld	iy, #14
   16BB FD 39         [15] 3703 	add	iy, sp
   16BD FD 77 01      [19] 3704 	ld	1 (iy), a
   16C0 21 0A 00      [10] 3705 	ld	hl, #10
   16C3 39            [11] 3706 	add	hl, sp
   16C4 5E            [ 7] 3707 	ld	e, (hl)
   16C5 23            [ 6] 3708 	inc	hl
   16C6 56            [ 7] 3709 	ld	d, (hl)
   16C7                    3710 00224$:
   16C7 1A            [ 7] 3711 	ld	a, (de)
   16C8 B7            [ 4] 3712 	or	a, a
   16C9 28 1B         [12] 3713 	jr	Z,00220$
   16CB 21 12 00      [10] 3714 	ld	hl, #18
   16CE 39            [11] 3715 	add	hl, sp
   16CF 4E            [ 7] 3716 	ld	c, (hl)
   16D0 23            [ 6] 3717 	inc	hl
   16D1 46            [ 7] 3718 	ld	b, (hl)
   16D2 21 12 00      [10] 3719 	ld	hl, #18
   16D5 39            [11] 3720 	add	hl, sp
   16D6 7E            [ 7] 3721 	ld	a, (hl)
   16D7 C6 FF         [ 7] 3722 	add	a, #0xff
   16D9 77            [ 7] 3723 	ld	(hl), a
   16DA 23            [ 6] 3724 	inc	hl
   16DB 7E            [ 7] 3725 	ld	a, (hl)
   16DC CE FF         [ 7] 3726 	adc	a, #0xff
   16DE 77            [ 7] 3727 	ld	(hl), a
   16DF 78            [ 4] 3728 	ld	a, b
   16E0 B1            [ 4] 3729 	or	a, c
   16E1 28 03         [12] 3730 	jr	Z,00220$
   16E3 13            [ 6] 3731 	inc	de
   16E4 18 E1         [12] 3732 	jr	00224$
   16E6                    3733 00220$:
   16E6 21 0E 00      [10] 3734 	ld	hl, #14
   16E9 39            [11] 3735 	add	hl, sp
   16EA 7B            [ 4] 3736 	ld	a, e
   16EB 96            [ 7] 3737 	sub	a, (hl)
   16EC 5F            [ 4] 3738 	ld	e, a
   16ED 7A            [ 4] 3739 	ld	a, d
   16EE 23            [ 6] 3740 	inc	hl
   16EF 9E            [ 7] 3741 	sbc	a, (hl)
   16F0 57            [ 4] 3742 	ld	d, a
   16F1 FD 21 12 00   [14] 3743 	ld	iy, #18
   16F5 FD 39         [15] 3744 	add	iy, sp
   16F7 FD 73 00      [19] 3745 	ld	0 (iy), e
   16FA FD 72 01      [19] 3746 	ld	1 (iy), d
                     16FD  3747 	C$printf.c$800$4_0$103	= .
                           3748 	.globl	C$printf.c$800$4_0$103
                           3749 ;printf.c:800: if (flags & FLAGS_PRECISION) {
   16FD FD 21 0C 00   [14] 3750 	ld	iy, #12
   1701 FD 39         [15] 3751 	add	iy, sp
   1703 FD 36 00 00   [19] 3752 	ld	0 (iy), #0x00
   1707 21 05 00      [10] 3753 	ld	hl, #4+1
   170A 39            [11] 3754 	add	hl, sp
   170B 7E            [ 7] 3755 	ld	a, (hl)
   170C E6 04         [ 7] 3756 	and	a, #0x04
   170E FD 21 0C 00   [14] 3757 	ld	iy, #12
   1712 FD 39         [15] 3758 	add	iy, sp
   1714 FD 77 01      [19] 3759 	ld	1 (iy), a
   1717 FD 7E 01      [19] 3760 	ld	a, 1 (iy)
   171A FD B6 00      [19] 3761 	or	a, 0 (iy)
   171D 28 1E         [12] 3762 	jr	Z,00195$
                     171F  3763 	C$printf.c$801$5_0$104	= .
                           3764 	.globl	C$printf.c$801$5_0$104
                           3765 ;printf.c:801: l = (l < precision ? l : precision);
   171F 21 08 00      [10] 3766 	ld	hl, #8
   1722 39            [11] 3767 	add	hl, sp
   1723 7B            [ 4] 3768 	ld	a, e
   1724 96            [ 7] 3769 	sub	a, (hl)
   1725 7A            [ 4] 3770 	ld	a, d
   1726 23            [ 6] 3771 	inc	hl
   1727 9E            [ 7] 3772 	sbc	a, (hl)
   1728 38 07         [12] 3773 	jr	C,00251$
   172A 21 08 00      [10] 3774 	ld	hl, #8
   172D 39            [11] 3775 	add	hl, sp
   172E 5E            [ 7] 3776 	ld	e, (hl)
   172F 23            [ 6] 3777 	inc	hl
   1730 56            [ 7] 3778 	ld	d, (hl)
   1731                    3779 00251$:
   1731 FD 21 12 00   [14] 3780 	ld	iy, #18
   1735 FD 39         [15] 3781 	add	iy, sp
   1737 FD 73 00      [19] 3782 	ld	0 (iy), e
   173A FD 72 01      [19] 3783 	ld	1 (iy), d
   173D                    3784 00195$:
                     173D  3785 	C$printf.c$803$4_0$103	= .
                           3786 	.globl	C$printf.c$803$4_0$103
                           3787 ;printf.c:803: if (!(flags & FLAGS_LEFT)) {
   173D 21 04 00      [10] 3788 	ld	hl, #4+0
   1740 39            [11] 3789 	add	hl, sp
   1741 7E            [ 7] 3790 	ld	a, (hl)
   1742 E6 02         [ 7] 3791 	and	a, #0x02
   1744 FD 21 0E 00   [14] 3792 	ld	iy, #14
   1748 FD 39         [15] 3793 	add	iy, sp
   174A FD 77 00      [19] 3794 	ld	0 (iy), a
   174D FD 36 01 00   [19] 3795 	ld	1 (iy), #0x00
   1751 FD 7E 01      [19] 3796 	ld	a, 1 (iy)
   1754 FD B6 00      [19] 3797 	or	a, 0 (iy)
   1757 C2rDDr17      [10] 3798 	jp	NZ, 00323$
                     175A  3799 	C$printf.c$804$1_0$64	= .
                           3800 	.globl	C$printf.c$804$1_0$64
                           3801 ;printf.c:804: while (l++ < width) {
   175A                    3802 00196$:
   175A FD 21 12 00   [14] 3803 	ld	iy, #18
   175E FD 39         [15] 3804 	add	iy, sp
   1760 FD 4E 00      [19] 3805 	ld	c, 0 (iy)
   1763 FD 46 01      [19] 3806 	ld	b, 1 (iy)
   1766 FD 34 00      [23] 3807 	inc	0 (iy)
   1769 20 03         [12] 3808 	jr	NZ,00704$
   176B FD 34 01      [23] 3809 	inc	1 (iy)
   176E                    3810 00704$:
   176E 21 06 00      [10] 3811 	ld	hl, #6
   1771 39            [11] 3812 	add	hl, sp
   1772 79            [ 4] 3813 	ld	a, c
   1773 96            [ 7] 3814 	sub	a, (hl)
   1774 78            [ 4] 3815 	ld	a, b
   1775 23            [ 6] 3816 	inc	hl
   1776 9E            [ 7] 3817 	sbc	a, (hl)
   1777 30 64         [12] 3818 	jr	NC,00330$
                     1779  3819 	C$printf.c$805$6_0$106	= .
                           3820 	.globl	C$printf.c$805$6_0$106
                           3821 ;printf.c:805: out(' ', buffer, idx++, maxlen);
   1779 FD 2B         [10] 3822 	dec	iy
   177B FD 2B         [10] 3823 	dec	iy
   177D FD 7E 00      [19] 3824 	ld	a, 0 (iy)
   1780 FD 21 04 00   [14] 3825 	ld	iy, #4
   1784 FD 39         [15] 3826 	add	iy, sp
   1786 FD 77 00      [19] 3827 	ld	0 (iy), a
   1789 21 11 00      [10] 3828 	ld	hl, #16+1
   178C 39            [11] 3829 	add	hl, sp
   178D 7E            [ 7] 3830 	ld	a, (hl)
   178E FD 21 04 00   [14] 3831 	ld	iy, #4
   1792 FD 39         [15] 3832 	add	iy, sp
   1794 FD 77 01      [19] 3833 	ld	1 (iy), a
   1797 FD 21 10 00   [14] 3834 	ld	iy, #16
   179B FD 39         [15] 3835 	add	iy, sp
   179D FD 34 00      [23] 3836 	inc	0 (iy)
   17A0 20 03         [12] 3837 	jr	NZ,00705$
   17A2 FD 34 01      [23] 3838 	inc	1 (iy)
   17A5                    3839 00705$:
   17A5 FD 21 18 00   [14] 3840 	ld	iy, #24
   17A9 FD 39         [15] 3841 	add	iy, sp
   17AB FD 4E 00      [19] 3842 	ld	c, 0 (iy)
   17AE FD 46 01      [19] 3843 	ld	b, 1 (iy)
   17B1 FD 23         [10] 3844 	inc	iy
   17B3 FD 23         [10] 3845 	inc	iy
   17B5 FD 6E 00      [19] 3846 	ld	l, 0 (iy)
   17B8 FD 66 01      [19] 3847 	ld	h, 1 (iy)
   17BB E5            [11] 3848 	push	hl
   17BC 21 06 00      [10] 3849 	ld	hl, #6
   17BF 39            [11] 3850 	add	hl, sp
   17C0 7E            [ 7] 3851 	ld	a, (hl)
   17C1 23            [ 6] 3852 	inc	hl
   17C2 66            [ 7] 3853 	ld	h, (hl)
   17C3 6F            [ 4] 3854 	ld	l, a
   17C4 E5            [11] 3855 	push	hl
   17C5 C5            [11] 3856 	push	bc
   17C6 3E 20         [ 7] 3857 	ld	a, #0x20
   17C8 F5            [11] 3858 	push	af
   17C9 33            [ 6] 3859 	inc	sp
   17CA 21 1D 00      [10] 3860 	ld	hl, #29
   17CD 39            [11] 3861 	add	hl, sp
   17CE 7E            [ 7] 3862 	ld	a, (hl)
   17CF 23            [ 6] 3863 	inc	hl
   17D0 66            [ 7] 3864 	ld	h, (hl)
   17D1 6F            [ 4] 3865 	ld	l, a
   17D2 CDr00r00      [17] 3866 	call	___sdcc_call_hl
   17D5 21 07 00      [10] 3867 	ld	hl, #7
   17D8 39            [11] 3868 	add	hl, sp
   17D9 F9            [ 6] 3869 	ld	sp, hl
   17DA C3r5Ar17      [10] 3870 	jp	00196$
                     17DD  3871 	C$printf.c$809$1_0$64	= .
                           3872 	.globl	C$printf.c$809$1_0$64
                           3873 ;printf.c:809: while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
   17DD                    3874 00330$:
   17DD                    3875 00323$:
   17DD 21 10 00      [10] 3876 	ld	hl, #16+0
   17E0 39            [11] 3877 	add	hl, sp
   17E1 7E            [ 7] 3878 	ld	a, (hl)
   17E2 FD 21 04 00   [14] 3879 	ld	iy, #4
   17E6 FD 39         [15] 3880 	add	iy, sp
   17E8 FD 77 00      [19] 3881 	ld	0 (iy), a
   17EB 21 11 00      [10] 3882 	ld	hl, #16+1
   17EE 39            [11] 3883 	add	hl, sp
   17EF 7E            [ 7] 3884 	ld	a, (hl)
   17F0 FD 21 04 00   [14] 3885 	ld	iy, #4
   17F4 FD 39         [15] 3886 	add	iy, sp
   17F6 FD 77 01      [19] 3887 	ld	1 (iy), a
   17F9 21 0A 00      [10] 3888 	ld	hl, #10+0
   17FC 39            [11] 3889 	add	hl, sp
   17FD 7E            [ 7] 3890 	ld	a, (hl)
   17FE FD 21 10 00   [14] 3891 	ld	iy, #16
   1802 FD 39         [15] 3892 	add	iy, sp
   1804 FD 77 00      [19] 3893 	ld	0 (iy), a
   1807 21 0B 00      [10] 3894 	ld	hl, #10+1
   180A 39            [11] 3895 	add	hl, sp
   180B 7E            [ 7] 3896 	ld	a, (hl)
   180C FD 21 10 00   [14] 3897 	ld	iy, #16
   1810 FD 39         [15] 3898 	add	iy, sp
   1812 FD 77 01      [19] 3899 	ld	1 (iy), a
   1815                    3900 00203$:
   1815 21 10 00      [10] 3901 	ld	hl, #16
   1818 39            [11] 3902 	add	hl, sp
   1819 7E            [ 7] 3903 	ld	a, (hl)
   181A 23            [ 6] 3904 	inc	hl
   181B 66            [ 7] 3905 	ld	h, (hl)
   181C 6F            [ 4] 3906 	ld	l, a
   181D 7E            [ 7] 3907 	ld	a, (hl)
   181E FD 21 03 00   [14] 3908 	ld	iy, #3
   1822 FD 39         [15] 3909 	add	iy, sp
   1824 FD 77 00      [19] 3910 	ld	0 (iy), a
   1827 FD 7E 00      [19] 3911 	ld	a, 0 (iy)
   182A B7            [ 4] 3912 	or	a, a
   182B CArB8r18      [10] 3913 	jp	Z, 00331$
   182E 21 0D 00      [10] 3914 	ld	hl, #12+1
   1831 39            [11] 3915 	add	hl, sp
   1832 7E            [ 7] 3916 	ld	a, (hl)
   1833 2B            [ 6] 3917 	dec	hl
   1834 B6            [ 7] 3918 	or	a, (hl)
   1835 28 33         [12] 3919 	jr	Z,00204$
   1837 FD 21 08 00   [14] 3920 	ld	iy, #8
   183B FD 39         [15] 3921 	add	iy, sp
   183D FD 7E 00      [19] 3922 	ld	a, 0 (iy)
   1840 FD 23         [10] 3923 	inc	iy
   1842 FD 23         [10] 3924 	inc	iy
   1844 FD 77 00      [19] 3925 	ld	0 (iy), a
   1847 FD 2B         [10] 3926 	dec	iy
   1849 FD 2B         [10] 3927 	dec	iy
   184B FD 7E 01      [19] 3928 	ld	a, 1 (iy)
   184E FD 23         [10] 3929 	inc	iy
   1850 FD 23         [10] 3930 	inc	iy
   1852 FD 77 01      [19] 3931 	ld	1 (iy), a
   1855 21 08 00      [10] 3932 	ld	hl, #8
   1858 39            [11] 3933 	add	hl, sp
   1859 7E            [ 7] 3934 	ld	a, (hl)
   185A C6 FF         [ 7] 3935 	add	a, #0xff
   185C 77            [ 7] 3936 	ld	(hl), a
   185D 23            [ 6] 3937 	inc	hl
   185E 7E            [ 7] 3938 	ld	a, (hl)
   185F CE FF         [ 7] 3939 	adc	a, #0xff
   1861 77            [ 7] 3940 	ld	(hl), a
   1862 FD 7E 01      [19] 3941 	ld	a, 1 (iy)
   1865 FD B6 00      [19] 3942 	or	a, 0 (iy)
   1868 28 4E         [12] 3943 	jr	Z,00331$
   186A                    3944 00204$:
                     186A  3945 	C$printf.c$810$5_0$107	= .
                           3946 	.globl	C$printf.c$810$5_0$107
                           3947 ;printf.c:810: out(*(p++), buffer, idx++, maxlen);
   186A FD 21 04 00   [14] 3948 	ld	iy, #4
   186E FD 39         [15] 3949 	add	iy, sp
   1870 FD 5E 00      [19] 3950 	ld	e, 0 (iy)
   1873 FD 56 01      [19] 3951 	ld	d, 1 (iy)
   1876 FD 34 00      [23] 3952 	inc	0 (iy)
   1879 20 03         [12] 3953 	jr	NZ,00706$
   187B FD 34 01      [23] 3954 	inc	1 (iy)
   187E                    3955 00706$:
   187E 21 18 00      [10] 3956 	ld	hl, #24
   1881 39            [11] 3957 	add	hl, sp
   1882 4E            [ 7] 3958 	ld	c, (hl)
   1883 23            [ 6] 3959 	inc	hl
   1884 46            [ 7] 3960 	ld	b, (hl)
   1885 FD 21 10 00   [14] 3961 	ld	iy, #16
   1889 FD 39         [15] 3962 	add	iy, sp
   188B FD 34 00      [23] 3963 	inc	0 (iy)
   188E 20 03         [12] 3964 	jr	NZ,00707$
   1890 FD 34 01      [23] 3965 	inc	1 (iy)
   1893                    3966 00707$:
   1893 21 1A 00      [10] 3967 	ld	hl, #26
   1896 39            [11] 3968 	add	hl, sp
   1897 7E            [ 7] 3969 	ld	a, (hl)
   1898 23            [ 6] 3970 	inc	hl
   1899 66            [ 7] 3971 	ld	h, (hl)
   189A 6F            [ 4] 3972 	ld	l, a
   189B E5            [11] 3973 	push	hl
   189C D5            [11] 3974 	push	de
   189D C5            [11] 3975 	push	bc
   189E 21 09 00      [10] 3976 	ld	hl, #9+0
   18A1 39            [11] 3977 	add	hl, sp
   18A2 7E            [ 7] 3978 	ld	a, (hl)
   18A3 F5            [11] 3979 	push	af
   18A4 33            [ 6] 3980 	inc	sp
   18A5 21 1D 00      [10] 3981 	ld	hl, #29
   18A8 39            [11] 3982 	add	hl, sp
   18A9 7E            [ 7] 3983 	ld	a, (hl)
   18AA 23            [ 6] 3984 	inc	hl
   18AB 66            [ 7] 3985 	ld	h, (hl)
   18AC 6F            [ 4] 3986 	ld	l, a
   18AD CDr00r00      [17] 3987 	call	___sdcc_call_hl
   18B0 21 07 00      [10] 3988 	ld	hl, #7
   18B3 39            [11] 3989 	add	hl, sp
   18B4 F9            [ 6] 3990 	ld	sp, hl
   18B5 C3r15r18      [10] 3991 	jp	00203$
   18B8                    3992 00331$:
   18B8 21 04 00      [10] 3993 	ld	hl, #4+0
   18BB 39            [11] 3994 	add	hl, sp
   18BC 7E            [ 7] 3995 	ld	a, (hl)
   18BD FD 21 10 00   [14] 3996 	ld	iy, #16
   18C1 FD 39         [15] 3997 	add	iy, sp
   18C3 FD 77 00      [19] 3998 	ld	0 (iy), a
   18C6 21 05 00      [10] 3999 	ld	hl, #4+1
   18C9 39            [11] 4000 	add	hl, sp
   18CA 7E            [ 7] 4001 	ld	a, (hl)
   18CB FD 21 10 00   [14] 4002 	ld	iy, #16
   18CF FD 39         [15] 4003 	add	iy, sp
   18D1 FD 77 01      [19] 4004 	ld	1 (iy), a
                     18D4  4005 	C$printf.c$813$4_0$103	= .
                           4006 	.globl	C$printf.c$813$4_0$103
                           4007 ;printf.c:813: if (flags & FLAGS_LEFT) {
   18D4 FD 2B         [10] 4008 	dec	iy
   18D6 FD 2B         [10] 4009 	dec	iy
   18D8 FD 7E 01      [19] 4010 	ld	a, 1 (iy)
   18DB FD B6 00      [19] 4011 	or	a, 0 (iy)
   18DE 28 73         [12] 4012 	jr	Z,00210$
                     18E0  4013 	C$printf.c$814$1_0$64	= .
                           4014 	.globl	C$printf.c$814$1_0$64
                           4015 ;printf.c:814: while (l++ < width) {
   18E0 21 04 00      [10] 4016 	ld	hl, #4
   18E3 39            [11] 4017 	add	hl, sp
   18E4 4E            [ 7] 4018 	ld	c, (hl)
   18E5 23            [ 6] 4019 	inc	hl
   18E6 46            [ 7] 4020 	ld	b, (hl)
   18E7                    4021 00206$:
   18E7 21 06 00      [10] 4022 	ld	hl, #6
   18EA 39            [11] 4023 	add	hl, sp
   18EB FD 21 12 00   [14] 4024 	ld	iy, #18
   18EF FD 39         [15] 4025 	add	iy, sp
   18F1 FD 7E 00      [19] 4026 	ld	a, 0 (iy)
   18F4 96            [ 7] 4027 	sub	a, (hl)
   18F5 FD 7E 01      [19] 4028 	ld	a, 1 (iy)
   18F8 23            [ 6] 4029 	inc	hl
   18F9 9E            [ 7] 4030 	sbc	a, (hl)
   18FA 30 4B         [12] 4031 	jr	NC,00332$
   18FC FD 34 00      [23] 4032 	inc	0 (iy)
   18FF 20 03         [12] 4033 	jr	NZ,00708$
   1901 FD 34 01      [23] 4034 	inc	1 (iy)
   1904                    4035 00708$:
                     1904  4036 	C$printf.c$815$6_0$109	= .
                           4037 	.globl	C$printf.c$815$6_0$109
                           4038 ;printf.c:815: out(' ', buffer, idx++, maxlen);
   1904 FD 2B         [10] 4039 	dec	iy
   1906 FD 2B         [10] 4040 	dec	iy
   1908 FD 71 00      [19] 4041 	ld	0 (iy), c
   190B FD 70 01      [19] 4042 	ld	1 (iy), b
   190E 03            [ 6] 4043 	inc	bc
   190F FD 21 18 00   [14] 4044 	ld	iy, #24
   1913 FD 39         [15] 4045 	add	iy, sp
   1915 FD 5E 00      [19] 4046 	ld	e, 0 (iy)
   1918 FD 56 01      [19] 4047 	ld	d, 1 (iy)
   191B C5            [11] 4048 	push	bc
   191C FD 23         [10] 4049 	inc	iy
   191E FD 23         [10] 4050 	inc	iy
   1920 FD 6E 00      [19] 4051 	ld	l, 0 (iy)
   1923 FD 66 01      [19] 4052 	ld	h, 1 (iy)
   1926 E5            [11] 4053 	push	hl
   1927 21 14 00      [10] 4054 	ld	hl, #20
   192A 39            [11] 4055 	add	hl, sp
   192B 4E            [ 7] 4056 	ld	c, (hl)
   192C 23            [ 6] 4057 	inc	hl
   192D 46            [ 7] 4058 	ld	b, (hl)
   192E C5            [11] 4059 	push	bc
   192F D5            [11] 4060 	push	de
   1930 3E 20         [ 7] 4061 	ld	a, #0x20
   1932 F5            [11] 4062 	push	af
   1933 33            [ 6] 4063 	inc	sp
   1934 21 1F 00      [10] 4064 	ld	hl, #31
   1937 39            [11] 4065 	add	hl, sp
   1938 7E            [ 7] 4066 	ld	a, (hl)
   1939 23            [ 6] 4067 	inc	hl
   193A 66            [ 7] 4068 	ld	h, (hl)
   193B 6F            [ 4] 4069 	ld	l, a
   193C CDr00r00      [17] 4070 	call	___sdcc_call_hl
   193F 21 07 00      [10] 4071 	ld	hl, #7
   1942 39            [11] 4072 	add	hl, sp
   1943 F9            [ 6] 4073 	ld	sp, hl
   1944 C1            [10] 4074 	pop	bc
   1945 18 A0         [12] 4075 	jr	00206$
   1947                    4076 00332$:
   1947 FD 21 10 00   [14] 4077 	ld	iy, #16
   194B FD 39         [15] 4078 	add	iy, sp
   194D FD 71 00      [19] 4079 	ld	0 (iy), c
   1950 FD 70 01      [19] 4080 	ld	1 (iy), b
   1953                    4081 00210$:
                     1953  4082 	C$printf.c$818$4_0$103	= .
                           4083 	.globl	C$printf.c$818$4_0$103
                           4084 ;printf.c:818: format++;
   1953 FD 21 1C 00   [14] 4085 	ld	iy, #28
   1957 FD 39         [15] 4086 	add	iy, sp
   1959 FD 34 00      [23] 4087 	inc	0 (iy)
   195C C2rCAr08      [10] 4088 	jp	NZ,00215$
   195F FD 34 01      [23] 4089 	inc	1 (iy)
                     1962  4090 	C$printf.c$819$4_0$103	= .
                           4091 	.globl	C$printf.c$819$4_0$103
                           4092 ;printf.c:819: break;
   1962 C3rCAr08      [10] 4093 	jp	00215$
                     1965  4094 	C$printf.c$822$3_0$81	= .
                           4095 	.globl	C$printf.c$822$3_0$81
                           4096 ;printf.c:822: case 'p' : {
   1965                    4097 00211$:
                     1965  4098 	C$printf.c$824$4_0$110	= .
                           4099 	.globl	C$printf.c$824$4_0$110
                           4100 ;printf.c:824: flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
   1965 21 04 00      [10] 4101 	ld	hl, #4+0
   1968 39            [11] 4102 	add	hl, sp
   1969 7E            [ 7] 4103 	ld	a, (hl)
   196A F6 21         [ 7] 4104 	or	a, #0x21
   196C FD 21 12 00   [14] 4105 	ld	iy, #18
   1970 FD 39         [15] 4106 	add	iy, sp
   1972 FD 77 00      [19] 4107 	ld	0 (iy), a
   1975 21 05 00      [10] 4108 	ld	hl, #4+1
   1978 39            [11] 4109 	add	hl, sp
   1979 7E            [ 7] 4110 	ld	a, (hl)
   197A FD 21 12 00   [14] 4111 	ld	iy, #18
   197E FD 39         [15] 4112 	add	iy, sp
   1980 FD 77 01      [19] 4113 	ld	1 (iy), a
                     1983  4114 	C$printf.c$832$4_0$110	= .
                           4115 	.globl	C$printf.c$832$4_0$110
                           4116 ;printf.c:832: idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
   1983 FD 21 1E 00   [14] 4117 	ld	iy, #30
   1987 FD 39         [15] 4118 	add	iy, sp
   1989 FD 4E 00      [19] 4119 	ld	c, 0 (iy)
   198C FD 46 01      [19] 4120 	ld	b, 1 (iy)
   198F 03            [ 6] 4121 	inc	bc
   1990 03            [ 6] 4122 	inc	bc
   1991 FD 71 00      [19] 4123 	ld	0 (iy), c
   1994 FD 70 01      [19] 4124 	ld	1 (iy), b
   1997 0B            [ 6] 4125 	dec	bc
   1998 0B            [ 6] 4126 	dec	bc
   1999 69            [ 4] 4127 	ld	l, c
   199A 60            [ 4] 4128 	ld	h, b
   199B 4E            [ 7] 4129 	ld	c, (hl)
   199C 23            [ 6] 4130 	inc	hl
   199D 46            [ 7] 4131 	ld	b, (hl)
   199E 11 00 00      [10] 4132 	ld	de, #0x0000
   19A1 21 12 00      [10] 4133 	ld	hl, #18
   19A4 39            [11] 4134 	add	hl, sp
   19A5 7E            [ 7] 4135 	ld	a, (hl)
   19A6 23            [ 6] 4136 	inc	hl
   19A7 66            [ 7] 4137 	ld	h, (hl)
   19A8 6F            [ 4] 4138 	ld	l, a
   19A9 E5            [11] 4139 	push	hl
   19AA 21 04 00      [10] 4140 	ld	hl, #0x0004
   19AD E5            [11] 4141 	push	hl
   19AE 21 0C 00      [10] 4142 	ld	hl, #12
   19B1 39            [11] 4143 	add	hl, sp
   19B2 7E            [ 7] 4144 	ld	a, (hl)
   19B3 23            [ 6] 4145 	inc	hl
   19B4 66            [ 7] 4146 	ld	h, (hl)
   19B5 6F            [ 4] 4147 	ld	l, a
   19B6 E5            [11] 4148 	push	hl
   19B7 21 00 00      [10] 4149 	ld	hl, #0x0000
   19BA E5            [11] 4150 	push	hl
   19BB 21 10 00      [10] 4151 	ld	hl, #0x0010
   19BE E5            [11] 4152 	push	hl
   19BF AF            [ 4] 4153 	xor	a, a
   19C0 F5            [11] 4154 	push	af
   19C1 33            [ 6] 4155 	inc	sp
   19C2 D5            [11] 4156 	push	de
   19C3 C5            [11] 4157 	push	bc
   19C4 21 29 00      [10] 4158 	ld	hl, #41
   19C7 39            [11] 4159 	add	hl, sp
   19C8 4E            [ 7] 4160 	ld	c, (hl)
   19C9 23            [ 6] 4161 	inc	hl
   19CA 46            [ 7] 4162 	ld	b, (hl)
   19CB C5            [11] 4163 	push	bc
   19CC 21 21 00      [10] 4164 	ld	hl, #33
   19CF 39            [11] 4165 	add	hl, sp
   19D0 4E            [ 7] 4166 	ld	c, (hl)
   19D1 23            [ 6] 4167 	inc	hl
   19D2 46            [ 7] 4168 	ld	b, (hl)
   19D3 C5            [11] 4169 	push	bc
   19D4 FD 21 2B 00   [14] 4170 	ld	iy, #43
   19D8 FD 39         [15] 4171 	add	iy, sp
   19DA FD 6E 00      [19] 4172 	ld	l, 0 (iy)
   19DD FD 66 01      [19] 4173 	ld	h, 1 (iy)
   19E0 E5            [11] 4174 	push	hl
   19E1 FD 2B         [10] 4175 	dec	iy
   19E3 FD 2B         [10] 4176 	dec	iy
   19E5 FD 6E 00      [19] 4177 	ld	l, 0 (iy)
   19E8 FD 66 01      [19] 4178 	ld	h, 1 (iy)
   19EB E5            [11] 4179 	push	hl
   19EC CDrCEr06      [17] 4180 	call	__ntoa_long
   19EF FD 21 17 00   [14] 4181 	ld	iy, #23
   19F3 FD 39         [15] 4182 	add	iy, sp
   19F5 FD F9         [10] 4183 	ld	sp, iy
   19F7 FD 21 10 00   [14] 4184 	ld	iy, #16
   19FB FD 39         [15] 4185 	add	iy, sp
   19FD FD 75 00      [19] 4186 	ld	0 (iy), l
   1A00 FD 74 01      [19] 4187 	ld	1 (iy), h
                     1A03  4188 	C$printf.c$836$4_0$110	= .
                           4189 	.globl	C$printf.c$836$4_0$110
                           4190 ;printf.c:836: format++;
   1A03 FD 21 1C 00   [14] 4191 	ld	iy, #28
   1A07 FD 39         [15] 4192 	add	iy, sp
   1A09 FD 34 00      [23] 4193 	inc	0 (iy)
   1A0C C2rCAr08      [10] 4194 	jp	NZ,00215$
   1A0F FD 34 01      [23] 4195 	inc	1 (iy)
                     1A12  4196 	C$printf.c$837$4_0$110	= .
                           4197 	.globl	C$printf.c$837$4_0$110
                           4198 ;printf.c:837: break;
   1A12 C3rCAr08      [10] 4199 	jp	00215$
                     1A15  4200 	C$printf.c$840$3_0$81	= .
                           4201 	.globl	C$printf.c$840$3_0$81
                           4202 ;printf.c:840: case '%' :
   1A15                    4203 00212$:
                     1A15  4204 	C$printf.c$841$3_0$81	= .
                           4205 	.globl	C$printf.c$841$3_0$81
                           4206 ;printf.c:841: out('%', buffer, idx++, maxlen);
   1A15 FD 21 10 00   [14] 4207 	ld	iy, #16
   1A19 FD 39         [15] 4208 	add	iy, sp
   1A1B FD 5E 00      [19] 4209 	ld	e, 0 (iy)
   1A1E FD 56 01      [19] 4210 	ld	d, 1 (iy)
   1A21 FD 34 00      [23] 4211 	inc	0 (iy)
   1A24 20 03         [12] 4212 	jr	NZ,00711$
   1A26 FD 34 01      [23] 4213 	inc	1 (iy)
   1A29                    4214 00711$:
   1A29 FD 21 18 00   [14] 4215 	ld	iy, #24
   1A2D FD 39         [15] 4216 	add	iy, sp
   1A2F FD 4E 00      [19] 4217 	ld	c, 0 (iy)
   1A32 FD 46 01      [19] 4218 	ld	b, 1 (iy)
   1A35 FD 23         [10] 4219 	inc	iy
   1A37 FD 23         [10] 4220 	inc	iy
   1A39 FD 6E 00      [19] 4221 	ld	l, 0 (iy)
   1A3C FD 66 01      [19] 4222 	ld	h, 1 (iy)
   1A3F E5            [11] 4223 	push	hl
   1A40 D5            [11] 4224 	push	de
   1A41 C5            [11] 4225 	push	bc
   1A42 3E 25         [ 7] 4226 	ld	a, #0x25
   1A44 F5            [11] 4227 	push	af
   1A45 33            [ 6] 4228 	inc	sp
   1A46 21 1D 00      [10] 4229 	ld	hl, #29
   1A49 39            [11] 4230 	add	hl, sp
   1A4A 7E            [ 7] 4231 	ld	a, (hl)
   1A4B 23            [ 6] 4232 	inc	hl
   1A4C 66            [ 7] 4233 	ld	h, (hl)
   1A4D 6F            [ 4] 4234 	ld	l, a
   1A4E CDr00r00      [17] 4235 	call	___sdcc_call_hl
   1A51 21 07 00      [10] 4236 	ld	hl, #7
   1A54 39            [11] 4237 	add	hl, sp
   1A55 F9            [ 6] 4238 	ld	sp, hl
                     1A56  4239 	C$printf.c$842$3_0$81	= .
                           4240 	.globl	C$printf.c$842$3_0$81
                           4241 ;printf.c:842: format++;
   1A56 FD 21 1C 00   [14] 4242 	ld	iy, #28
   1A5A FD 39         [15] 4243 	add	iy, sp
   1A5C FD 34 00      [23] 4244 	inc	0 (iy)
   1A5F C2rCAr08      [10] 4245 	jp	NZ,00215$
   1A62 FD 34 01      [23] 4246 	inc	1 (iy)
                     1A65  4247 	C$printf.c$843$3_0$81	= .
                           4248 	.globl	C$printf.c$843$3_0$81
                           4249 ;printf.c:843: break;
   1A65 C3rCAr08      [10] 4250 	jp	00215$
                     1A68  4251 	C$printf.c$845$3_0$81	= .
                           4252 	.globl	C$printf.c$845$3_0$81
                           4253 ;printf.c:845: default :
   1A68                    4254 00213$:
                     1A68  4255 	C$printf.c$846$3_0$81	= .
                           4256 	.globl	C$printf.c$846$3_0$81
                           4257 ;printf.c:846: out(*format, buffer, idx++, maxlen);
   1A68 FD 21 10 00   [14] 4258 	ld	iy, #16
   1A6C FD 39         [15] 4259 	add	iy, sp
   1A6E FD 4E 00      [19] 4260 	ld	c, 0 (iy)
   1A71 FD 46 01      [19] 4261 	ld	b, 1 (iy)
   1A74 FD 34 00      [23] 4262 	inc	0 (iy)
   1A77 20 03         [12] 4263 	jr	NZ,00713$
   1A79 FD 34 01      [23] 4264 	inc	1 (iy)
   1A7C                    4265 00713$:
   1A7C FD 21 18 00   [14] 4266 	ld	iy, #24
   1A80 FD 39         [15] 4267 	add	iy, sp
   1A82 FD 5E 00      [19] 4268 	ld	e, 0 (iy)
   1A85 FD 56 01      [19] 4269 	ld	d, 1 (iy)
   1A88 FD 23         [10] 4270 	inc	iy
   1A8A FD 23         [10] 4271 	inc	iy
   1A8C FD 6E 00      [19] 4272 	ld	l, 0 (iy)
   1A8F FD 66 01      [19] 4273 	ld	h, 1 (iy)
   1A92 E5            [11] 4274 	push	hl
   1A93 C5            [11] 4275 	push	bc
   1A94 D5            [11] 4276 	push	de
   1A95 21 15 00      [10] 4277 	ld	hl, #21+0
   1A98 39            [11] 4278 	add	hl, sp
   1A99 7E            [ 7] 4279 	ld	a, (hl)
   1A9A F5            [11] 4280 	push	af
   1A9B 33            [ 6] 4281 	inc	sp
   1A9C 21 1D 00      [10] 4282 	ld	hl, #29
   1A9F 39            [11] 4283 	add	hl, sp
   1AA0 7E            [ 7] 4284 	ld	a, (hl)
   1AA1 23            [ 6] 4285 	inc	hl
   1AA2 66            [ 7] 4286 	ld	h, (hl)
   1AA3 6F            [ 4] 4287 	ld	l, a
   1AA4 CDr00r00      [17] 4288 	call	___sdcc_call_hl
   1AA7 21 07 00      [10] 4289 	ld	hl, #7
   1AAA 39            [11] 4290 	add	hl, sp
   1AAB F9            [ 6] 4291 	ld	sp, hl
                     1AAC  4292 	C$printf.c$847$3_0$81	= .
                           4293 	.globl	C$printf.c$847$3_0$81
                           4294 ;printf.c:847: format++;
   1AAC FD 21 1C 00   [14] 4295 	ld	iy, #28
   1AB0 FD 39         [15] 4296 	add	iy, sp
   1AB2 FD 34 00      [23] 4297 	inc	0 (iy)
   1AB5 C2rCAr08      [10] 4298 	jp	NZ,00215$
   1AB8 FD 34 01      [23] 4299 	inc	1 (iy)
                     1ABB  4300 	C$printf.c$849$1_0$64	= .
                           4301 	.globl	C$printf.c$849$1_0$64
                           4302 ;printf.c:849: }
   1ABB C3rCAr08      [10] 4303 	jp	00215$
   1ABE                    4304 00217$:
                     1ABE  4305 	C$printf.c$853$1_0$64	= .
                           4306 	.globl	C$printf.c$853$1_0$64
                           4307 ;printf.c:853: out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
   1ABE 21 1A 00      [10] 4308 	ld	hl, #26
   1AC1 39            [11] 4309 	add	hl, sp
   1AC2 FD 21 10 00   [14] 4310 	ld	iy, #16
   1AC6 FD 39         [15] 4311 	add	iy, sp
   1AC8 FD 7E 00      [19] 4312 	ld	a, 0 (iy)
   1ACB 96            [ 7] 4313 	sub	a, (hl)
   1ACC FD 7E 01      [19] 4314 	ld	a, 1 (iy)
   1ACF 23            [ 6] 4315 	inc	hl
   1AD0 9E            [ 7] 4316 	sbc	a, (hl)
   1AD1 30 08         [12] 4317 	jr	NC,00252$
   1AD3 FD 4E 00      [19] 4318 	ld	c, 0 (iy)
   1AD6 FD 46 01      [19] 4319 	ld	b, 1 (iy)
   1AD9 18 08         [12] 4320 	jr	00253$
   1ADB                    4321 00252$:
   1ADB 21 1A 00      [10] 4322 	ld	hl, #26
   1ADE 39            [11] 4323 	add	hl, sp
   1ADF 4E            [ 7] 4324 	ld	c, (hl)
   1AE0 23            [ 6] 4325 	inc	hl
   1AE1 46            [ 7] 4326 	ld	b, (hl)
   1AE2 0B            [ 6] 4327 	dec	bc
   1AE3                    4328 00253$:
   1AE3 FD 21 18 00   [14] 4329 	ld	iy, #24
   1AE7 FD 39         [15] 4330 	add	iy, sp
   1AE9 FD 5E 00      [19] 4331 	ld	e, 0 (iy)
   1AEC FD 56 01      [19] 4332 	ld	d, 1 (iy)
   1AEF FD 23         [10] 4333 	inc	iy
   1AF1 FD 23         [10] 4334 	inc	iy
   1AF3 FD 6E 00      [19] 4335 	ld	l, 0 (iy)
   1AF6 FD 66 01      [19] 4336 	ld	h, 1 (iy)
   1AF9 E5            [11] 4337 	push	hl
   1AFA C5            [11] 4338 	push	bc
   1AFB D5            [11] 4339 	push	de
   1AFC AF            [ 4] 4340 	xor	a, a
   1AFD F5            [11] 4341 	push	af
   1AFE 33            [ 6] 4342 	inc	sp
   1AFF 21 1D 00      [10] 4343 	ld	hl, #29
   1B02 39            [11] 4344 	add	hl, sp
   1B03 7E            [ 7] 4345 	ld	a, (hl)
   1B04 23            [ 6] 4346 	inc	hl
   1B05 66            [ 7] 4347 	ld	h, (hl)
   1B06 6F            [ 4] 4348 	ld	l, a
   1B07 CDr00r00      [17] 4349 	call	___sdcc_call_hl
   1B0A 21 07 00      [10] 4350 	ld	hl, #7
   1B0D 39            [11] 4351 	add	hl, sp
   1B0E F9            [ 6] 4352 	ld	sp, hl
                     1B0F  4353 	C$printf.c$856$1_0$64	= .
                           4354 	.globl	C$printf.c$856$1_0$64
                           4355 ;printf.c:856: return (int)idx;
   1B0F 21 10 00      [10] 4356 	ld	hl, #16
   1B12 39            [11] 4357 	add	hl, sp
   1B13 7E            [ 7] 4358 	ld	a, (hl)
   1B14 23            [ 6] 4359 	inc	hl
   1B15 66            [ 7] 4360 	ld	h, (hl)
   1B16 6F            [ 4] 4361 	ld	l, a
                     1B17  4362 	C$printf.c$857$1_0$64	= .
                           4363 	.globl	C$printf.c$857$1_0$64
                           4364 ;printf.c:857: }
   1B17 FD 21 14 00   [14] 4365 	ld	iy, #20
   1B1B FD 39         [15] 4366 	add	iy, sp
   1B1D FD F9         [10] 4367 	ld	sp, iy
                     1B1F  4368 	C$printf.c$857$1_0$64	= .
                           4369 	.globl	C$printf.c$857$1_0$64
                     1B1F  4370 	XFprintf$_vsnprintf$0$0	= .
                           4371 	.globl	XFprintf$_vsnprintf$0$0
   1B1F C9            [10] 4372 	ret
                     1B20  4373 	G$printf_$0$0	= .
                           4374 	.globl	G$printf_$0$0
                     1B20  4375 	C$printf.c$862$1_0$121	= .
                           4376 	.globl	C$printf.c$862$1_0$121
                           4377 ;printf.c:862: int printf_(const char* format, ...)
                           4378 ;	---------------------------------
                           4379 ; Function printf_
                           4380 ; ---------------------------------
   1B20                    4381 _printf_::
   1B20 3B            [ 6] 4382 	dec	sp
                     1B21  4383 	C$printf.c$865$2_0$122	= .
                           4384 	.globl	C$printf.c$865$2_0$122
                           4385 ;printf.c:865: va_start(va, format);
   1B21 21 05 00      [10] 4386 	ld	hl, #3+1+1
   1B24 39            [11] 4387 	add	hl, sp
   1B25 EB            [ 4] 4388 	ex	de, hl
                     1B26  4389 	C$printf.c$867$1_1$123	= .
                           4390 	.globl	C$printf.c$867$1_1$123
                           4391 ;printf.c:867: const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
   1B26 21 00 00      [10] 4392 	ld	hl, #0
   1B29 39            [11] 4393 	add	hl, sp
   1B2A 4D            [ 4] 4394 	ld	c, l
   1B2B 44            [ 4] 4395 	ld	b, h
   1B2C D5            [11] 4396 	push	de
   1B2D 21 05 00      [10] 4397 	ld	hl, #5
   1B30 39            [11] 4398 	add	hl, sp
   1B31 7E            [ 7] 4399 	ld	a, (hl)
   1B32 23            [ 6] 4400 	inc	hl
   1B33 66            [ 7] 4401 	ld	h, (hl)
   1B34 6F            [ 4] 4402 	ld	l, a
   1B35 E5            [11] 4403 	push	hl
   1B36 21 FF FF      [10] 4404 	ld	hl, #0xffff
   1B39 E5            [11] 4405 	push	hl
   1B3A C5            [11] 4406 	push	bc
   1B3B 21r30r00      [10] 4407 	ld	hl, #__out_char
   1B3E E5            [11] 4408 	push	hl
   1B3F CDr9Er08      [17] 4409 	call	__vsnprintf
   1B42 FD 21 0A 00   [14] 4410 	ld	iy, #10
   1B46 FD 39         [15] 4411 	add	iy, sp
   1B48 FD F9         [10] 4412 	ld	sp, iy
                     1B4A  4413 	C$printf.c$869$1_1$123	= .
                           4414 	.globl	C$printf.c$869$1_1$123
                           4415 ;printf.c:869: return ret;
                     1B4A  4416 	C$printf.c$870$1_1$121	= .
                           4417 	.globl	C$printf.c$870$1_1$121
                           4418 ;printf.c:870: }
   1B4A 33            [ 6] 4419 	inc	sp
                     1B4B  4420 	C$printf.c$870$1_1$121	= .
                           4421 	.globl	C$printf.c$870$1_1$121
                     1B4B  4422 	XG$printf_$0$0	= .
                           4423 	.globl	XG$printf_$0$0
   1B4B C9            [10] 4424 	ret
                     1B4C  4425 	G$sprintf_$0$0	= .
                           4426 	.globl	G$sprintf_$0$0
                     1B4C  4427 	C$printf.c$873$1_1$126	= .
                           4428 	.globl	C$printf.c$873$1_1$126
                           4429 ;printf.c:873: int sprintf_(char* buffer, const char* format, ...)
                           4430 ;	---------------------------------
                           4431 ; Function sprintf_
                           4432 ; ---------------------------------
   1B4C                    4433 _sprintf_::
                     1B4C  4434 	C$printf.c$876$2_0$127	= .
                           4435 	.globl	C$printf.c$876$2_0$127
                           4436 ;printf.c:876: va_start(va, format);
   1B4C 21 06 00      [10] 4437 	ld	hl,#4+1+1
   1B4F 39            [11] 4438 	add	hl,sp
                     1B50  4439 	C$printf.c$877$1_1$128	= .
                           4440 	.globl	C$printf.c$877$1_1$128
                           4441 ;printf.c:877: const int ret = _vsnprintf(_out_buffer, buffer, (size_t)-1, format, va);
   1B50 E5            [11] 4442 	push	hl
   1B51 FD 21 06 00   [14] 4443 	ld	iy, #6
   1B55 FD 39         [15] 4444 	add	iy, sp
   1B57 FD 6E 00      [19] 4445 	ld	l, 0 (iy)
   1B5A FD 66 01      [19] 4446 	ld	h, 1 (iy)
   1B5D E5            [11] 4447 	push	hl
   1B5E 21 FF FF      [10] 4448 	ld	hl, #0xffff
   1B61 E5            [11] 4449 	push	hl
   1B62 FD 2B         [10] 4450 	dec	iy
   1B64 FD 2B         [10] 4451 	dec	iy
   1B66 FD 6E 00      [19] 4452 	ld	l, 0 (iy)
   1B69 FD 66 01      [19] 4453 	ld	h, 1 (iy)
   1B6C E5            [11] 4454 	push	hl
   1B6D 21r00r00      [10] 4455 	ld	hl, #__out_buffer
   1B70 E5            [11] 4456 	push	hl
   1B71 CDr9Er08      [17] 4457 	call	__vsnprintf
   1B74 FD 21 0A 00   [14] 4458 	ld	iy, #10
   1B78 FD 39         [15] 4459 	add	iy, sp
   1B7A FD F9         [10] 4460 	ld	sp, iy
                     1B7C  4461 	C$printf.c$879$1_1$128	= .
                           4462 	.globl	C$printf.c$879$1_1$128
                           4463 ;printf.c:879: return ret;
                     1B7C  4464 	C$printf.c$880$1_1$126	= .
                           4465 	.globl	C$printf.c$880$1_1$126
                           4466 ;printf.c:880: }
                     1B7C  4467 	C$printf.c$880$1_1$126	= .
                           4468 	.globl	C$printf.c$880$1_1$126
                     1B7C  4469 	XG$sprintf_$0$0	= .
                           4470 	.globl	XG$sprintf_$0$0
   1B7C C9            [10] 4471 	ret
                     1B7D  4472 	G$snprintf_$0$0	= .
                           4473 	.globl	G$snprintf_$0$0
                     1B7D  4474 	C$printf.c$883$1_1$131	= .
                           4475 	.globl	C$printf.c$883$1_1$131
                           4476 ;printf.c:883: int snprintf_(char* buffer, size_t count, const char* format, ...)
                           4477 ;	---------------------------------
                           4478 ; Function snprintf_
                           4479 ; ---------------------------------
   1B7D                    4480 _snprintf_::
                     1B7D  4481 	C$printf.c$886$2_0$132	= .
                           4482 	.globl	C$printf.c$886$2_0$132
                           4483 ;printf.c:886: va_start(va, format);
   1B7D 21 08 00      [10] 4484 	ld	hl,#6+1+1
   1B80 39            [11] 4485 	add	hl,sp
                     1B81  4486 	C$printf.c$887$1_1$133	= .
                           4487 	.globl	C$printf.c$887$1_1$133
                           4488 ;printf.c:887: const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
   1B81 E5            [11] 4489 	push	hl
   1B82 FD 21 08 00   [14] 4490 	ld	iy, #8
   1B86 FD 39         [15] 4491 	add	iy, sp
   1B88 FD 6E 00      [19] 4492 	ld	l, 0 (iy)
   1B8B FD 66 01      [19] 4493 	ld	h, 1 (iy)
   1B8E E5            [11] 4494 	push	hl
   1B8F FD 2B         [10] 4495 	dec	iy
   1B91 FD 2B         [10] 4496 	dec	iy
   1B93 FD 6E 00      [19] 4497 	ld	l, 0 (iy)
   1B96 FD 66 01      [19] 4498 	ld	h, 1 (iy)
   1B99 E5            [11] 4499 	push	hl
   1B9A FD 2B         [10] 4500 	dec	iy
   1B9C FD 2B         [10] 4501 	dec	iy
   1B9E FD 6E 00      [19] 4502 	ld	l, 0 (iy)
   1BA1 FD 66 01      [19] 4503 	ld	h, 1 (iy)
   1BA4 E5            [11] 4504 	push	hl
   1BA5 21r00r00      [10] 4505 	ld	hl, #__out_buffer
   1BA8 E5            [11] 4506 	push	hl
   1BA9 CDr9Er08      [17] 4507 	call	__vsnprintf
   1BAC FD 21 0A 00   [14] 4508 	ld	iy, #10
   1BB0 FD 39         [15] 4509 	add	iy, sp
   1BB2 FD F9         [10] 4510 	ld	sp, iy
                     1BB4  4511 	C$printf.c$889$1_1$133	= .
                           4512 	.globl	C$printf.c$889$1_1$133
                           4513 ;printf.c:889: return ret;
                     1BB4  4514 	C$printf.c$890$1_1$131	= .
                           4515 	.globl	C$printf.c$890$1_1$131
                           4516 ;printf.c:890: }
                     1BB4  4517 	C$printf.c$890$1_1$131	= .
                           4518 	.globl	C$printf.c$890$1_1$131
                     1BB4  4519 	XG$snprintf_$0$0	= .
                           4520 	.globl	XG$snprintf_$0$0
   1BB4 C9            [10] 4521 	ret
                     1BB5  4522 	G$vprintf_$0$0	= .
                           4523 	.globl	G$vprintf_$0$0
                     1BB5  4524 	C$printf.c$893$1_1$136	= .
                           4525 	.globl	C$printf.c$893$1_1$136
                           4526 ;printf.c:893: int vprintf_(const char* format, va_list va)
                           4527 ;	---------------------------------
                           4528 ; Function vprintf_
                           4529 ; ---------------------------------
   1BB5                    4530 _vprintf_::
   1BB5 3B            [ 6] 4531 	dec	sp
                     1BB6  4532 	C$printf.c$896$1_0$136	= .
                           4533 	.globl	C$printf.c$896$1_0$136
                           4534 ;printf.c:896: return _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
   1BB6 21 00 00      [10] 4535 	ld	hl, #0
   1BB9 39            [11] 4536 	add	hl, sp
   1BBA EB            [ 4] 4537 	ex	de, hl
   1BBB FD 21 05 00   [14] 4538 	ld	iy, #5
   1BBF FD 39         [15] 4539 	add	iy, sp
   1BC1 FD 6E 00      [19] 4540 	ld	l, 0 (iy)
   1BC4 FD 66 01      [19] 4541 	ld	h, 1 (iy)
   1BC7 E5            [11] 4542 	push	hl
   1BC8 FD 2B         [10] 4543 	dec	iy
   1BCA FD 2B         [10] 4544 	dec	iy
   1BCC FD 6E 00      [19] 4545 	ld	l, 0 (iy)
   1BCF FD 66 01      [19] 4546 	ld	h, 1 (iy)
   1BD2 E5            [11] 4547 	push	hl
   1BD3 21 FF FF      [10] 4548 	ld	hl, #0xffff
   1BD6 E5            [11] 4549 	push	hl
   1BD7 D5            [11] 4550 	push	de
   1BD8 21r30r00      [10] 4551 	ld	hl, #__out_char
   1BDB E5            [11] 4552 	push	hl
   1BDC CDr9Er08      [17] 4553 	call	__vsnprintf
   1BDF FD 21 0A 00   [14] 4554 	ld	iy, #10
   1BE3 FD 39         [15] 4555 	add	iy, sp
   1BE5 FD F9         [10] 4556 	ld	sp, iy
                     1BE7  4557 	C$printf.c$897$1_0$136	= .
                           4558 	.globl	C$printf.c$897$1_0$136
                           4559 ;printf.c:897: }
   1BE7 33            [ 6] 4560 	inc	sp
                     1BE8  4561 	C$printf.c$897$1_0$136	= .
                           4562 	.globl	C$printf.c$897$1_0$136
                     1BE8  4563 	XG$vprintf_$0$0	= .
                           4564 	.globl	XG$vprintf_$0$0
   1BE8 C9            [10] 4565 	ret
                     1BE9  4566 	G$vsnprintf_$0$0	= .
                           4567 	.globl	G$vsnprintf_$0$0
                     1BE9  4568 	C$printf.c$900$1_0$138	= .
                           4569 	.globl	C$printf.c$900$1_0$138
                           4570 ;printf.c:900: int vsnprintf_(char* buffer, size_t count, const char* format, va_list va)
                           4571 ;	---------------------------------
                           4572 ; Function vsnprintf_
                           4573 ; ---------------------------------
   1BE9                    4574 _vsnprintf_::
                     1BE9  4575 	C$printf.c$902$1_0$138	= .
                           4576 	.globl	C$printf.c$902$1_0$138
                           4577 ;printf.c:902: return _vsnprintf(_out_buffer, buffer, count, format, va);
   1BE9 FD 21 08 00   [14] 4578 	ld	iy, #8
   1BED FD 39         [15] 4579 	add	iy, sp
   1BEF FD 6E 00      [19] 4580 	ld	l, 0 (iy)
   1BF2 FD 66 01      [19] 4581 	ld	h, 1 (iy)
   1BF5 E5            [11] 4582 	push	hl
   1BF6 FD 2B         [10] 4583 	dec	iy
   1BF8 FD 2B         [10] 4584 	dec	iy
   1BFA FD 6E 00      [19] 4585 	ld	l, 0 (iy)
   1BFD FD 66 01      [19] 4586 	ld	h, 1 (iy)
   1C00 E5            [11] 4587 	push	hl
   1C01 FD 2B         [10] 4588 	dec	iy
   1C03 FD 2B         [10] 4589 	dec	iy
   1C05 FD 6E 00      [19] 4590 	ld	l, 0 (iy)
   1C08 FD 66 01      [19] 4591 	ld	h, 1 (iy)
   1C0B E5            [11] 4592 	push	hl
   1C0C FD 2B         [10] 4593 	dec	iy
   1C0E FD 2B         [10] 4594 	dec	iy
   1C10 FD 6E 00      [19] 4595 	ld	l, 0 (iy)
   1C13 FD 66 01      [19] 4596 	ld	h, 1 (iy)
   1C16 E5            [11] 4597 	push	hl
   1C17 21r00r00      [10] 4598 	ld	hl, #__out_buffer
   1C1A E5            [11] 4599 	push	hl
   1C1B CDr9Er08      [17] 4600 	call	__vsnprintf
   1C1E FD 21 0A 00   [14] 4601 	ld	iy, #10
   1C22 FD 39         [15] 4602 	add	iy, sp
   1C24 FD F9         [10] 4603 	ld	sp, iy
                     1C26  4604 	C$printf.c$903$1_0$138	= .
                           4605 	.globl	C$printf.c$903$1_0$138
                           4606 ;printf.c:903: }
                     1C26  4607 	C$printf.c$903$1_0$138	= .
                           4608 	.globl	C$printf.c$903$1_0$138
                     1C26  4609 	XG$vsnprintf_$0$0	= .
                           4610 	.globl	XG$vsnprintf_$0$0
   1C26 C9            [10] 4611 	ret
                     1C27  4612 	G$fctprintf$0$0	= .
                           4613 	.globl	G$fctprintf$0$0
                     1C27  4614 	C$printf.c$906$1_0$141	= .
                           4615 	.globl	C$printf.c$906$1_0$141
                           4616 ;printf.c:906: int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
                           4617 ;	---------------------------------
                           4618 ; Function fctprintf
                           4619 ; ---------------------------------
   1C27                    4620 _fctprintf::
   1C27 F5            [11] 4621 	push	af
   1C28 F5            [11] 4622 	push	af
                     1C29  4623 	C$printf.c$909$2_0$142	= .
                           4624 	.globl	C$printf.c$909$2_0$142
                           4625 ;printf.c:909: va_start(va, format);
   1C29 21 0C 00      [10] 4626 	ld	hl,#10+1+1
   1C2C 39            [11] 4627 	add	hl,sp
   1C2D 4D            [ 4] 4628 	ld	c,l
   1C2E 44            [ 4] 4629 	ld	b,h
                     1C2F  4630 	C$printf.c$910$2_0$143	= .
                           4631 	.globl	C$printf.c$910$2_0$143
                           4632 ;printf.c:910: const out_fct_wrap_type out_fct_wrap = { out, arg };
   1C2F 21 00 00      [10] 4633 	ld	hl, #0
   1C32 39            [11] 4634 	add	hl, sp
   1C33 FD 21 06 00   [14] 4635 	ld	iy, #6
   1C37 FD 39         [15] 4636 	add	iy, sp
   1C39 FD 7E 00      [19] 4637 	ld	a, 0 (iy)
   1C3C 77            [ 7] 4638 	ld	(hl), a
   1C3D 23            [ 6] 4639 	inc	hl
   1C3E FD 7E 01      [19] 4640 	ld	a, 1 (iy)
   1C41 77            [ 7] 4641 	ld	(hl), a
   1C42 21 00 00      [10] 4642 	ld	hl, #0
   1C45 39            [11] 4643 	add	hl, sp
   1C46 EB            [ 4] 4644 	ex	de, hl
   1C47 6B            [ 4] 4645 	ld	l, e
   1C48 62            [ 4] 4646 	ld	h, d
   1C49 23            [ 6] 4647 	inc	hl
   1C4A 23            [ 6] 4648 	inc	hl
   1C4B FD 23         [10] 4649 	inc	iy
   1C4D FD 23         [10] 4650 	inc	iy
   1C4F FD 7E 00      [19] 4651 	ld	a, 0 (iy)
   1C52 77            [ 7] 4652 	ld	(hl), a
   1C53 23            [ 6] 4653 	inc	hl
   1C54 FD 7E 01      [19] 4654 	ld	a, 1 (iy)
   1C57 77            [ 7] 4655 	ld	(hl), a
                     1C58  4656 	C$printf.c$911$1_1$143	= .
                           4657 	.globl	C$printf.c$911$1_1$143
                           4658 ;printf.c:911: const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
   1C58 C5            [11] 4659 	push	bc
   1C59 FD 23         [10] 4660 	inc	iy
   1C5B FD 23         [10] 4661 	inc	iy
   1C5D FD 6E 00      [19] 4662 	ld	l, 0 (iy)
   1C60 FD 66 01      [19] 4663 	ld	h, 1 (iy)
   1C63 E5            [11] 4664 	push	hl
   1C64 21 FF FF      [10] 4665 	ld	hl, #0xffff
   1C67 E5            [11] 4666 	push	hl
   1C68 D5            [11] 4667 	push	de
   1C69 21r45r00      [10] 4668 	ld	hl, #__out_fct
   1C6C E5            [11] 4669 	push	hl
   1C6D CDr9Er08      [17] 4670 	call	__vsnprintf
   1C70 FD 21 0A 00   [14] 4671 	ld	iy, #10
   1C74 FD 39         [15] 4672 	add	iy, sp
   1C76 FD F9         [10] 4673 	ld	sp, iy
                     1C78  4674 	C$printf.c$913$1_1$143	= .
                           4675 	.globl	C$printf.c$913$1_1$143
                           4676 ;printf.c:913: return ret;
                     1C78  4677 	C$printf.c$914$1_1$141	= .
                           4678 	.globl	C$printf.c$914$1_1$141
                           4679 ;printf.c:914: }
   1C78 F1            [10] 4680 	pop	af
   1C79 F1            [10] 4681 	pop	af
                     1C7A  4682 	C$printf.c$914$1_1$141	= .
                           4683 	.globl	C$printf.c$914$1_1$141
                     1C7A  4684 	XG$fctprintf$0$0	= .
                           4685 	.globl	XG$fctprintf$0$0
   1C7A C9            [10] 4686 	ret
                           4687 	.area _CODE
                           4688 	.area _INITIALIZER
                           4689 	.area _CABS (ABS)
